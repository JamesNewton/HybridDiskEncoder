ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 124 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 4


  48              	.LFE1:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoDisableWcoLock
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoDisableWcoLock, %function
  56              	CySysClkImoDisableWcoLock:
  57              	.LFB4:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 5


 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 6


 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 7


 286:Generated_Source\PSoC4/CyLib.c ****     {
  58              		.loc 1 286 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  63              		.loc 1 287 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1168     		ldr	r1, [r2]
  66 0004 024B     		ldr	r3, .L5+4
  67 0006 0B40     		ands	r3, r1
  68 0008 1360     		str	r3, [r2]
 288:Generated_Source\PSoC4/CyLib.c ****     }
  69              		.loc 1 288 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 00002240 		.word	1075970048
  76 0010 FFFFFFBF 		.word	-1073741825
  77              		.cfi_endproc
  78              	.LFE4:
  79              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  80              		.section	.text.CySysClkImoStop,"ax",%progbits
  81              		.align	2
  82              		.global	CySysClkImoStop
  83              		.code	16
  84              		.thumb_func
  85              		.type	CySysClkImoStop, %function
  86              	CySysClkImoStop:
  87              	.LFB2:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  88              		.loc 1 140 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  96              		.loc 1 142 0
  97 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
  98              	.LVL0:
 149:Generated_Source\PSoC4/CyLib.c **** }
  99              		.loc 1 149 0
 100 0006 034A     		ldr	r2, .L8
 101 0008 1368     		ldr	r3, [r2]
 102 000a 5B00     		lsls	r3, r3, #1
 103 000c 5B08     		lsrs	r3, r3, #1
 104 000e 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
 105              		.loc 1 150 0
 106              		@ sp needed
 107 0010 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 8


 108              	.L9:
 109 0012 C046     		.align	2
 110              	.L8:
 111 0014 08010B40 		.word	1074462984
 112              		.cfi_endproc
 113              	.LFE2:
 114              		.size	CySysClkImoStop, .-CySysClkImoStop
 115              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 116              		.align	2
 117              		.global	CySysClkImoGetWcoLock
 118              		.code	16
 119              		.thumb_func
 120              		.type	CySysClkImoGetWcoLock, %function
 121              	CySysClkImoGetWcoLock:
 122              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 123              		.loc 1 305 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 128              		.loc 1 306 0
 129 0000 034B     		ldr	r3, .L12
 130 0002 1868     		ldr	r0, [r3]
 131 0004 8023     		movs	r3, #128
 132 0006 DB05     		lsls	r3, r3, #23
 133 0008 1840     		ands	r0, r3
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 134              		.loc 1 307 0
 135 000a 00D0     		beq	.L11
 136 000c 0120     		movs	r0, #1
 137              	.L11:
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 138              		.loc 1 309 0
 139              		@ sp needed
 140 000e 7047     		bx	lr
 141              	.L13:
 142              		.align	2
 143              	.L12:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 9


 144 0010 00002240 		.word	1075970048
 145              		.cfi_endproc
 146              	.LFE5:
 147              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 148              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 149              		.align	2
 150              		.global	CySysClkWriteHfclkDirect
 151              		.code	16
 152              		.thumb_func
 153              		.type	CySysClkWriteHfclkDirect, %function
 154              	CySysClkWriteHfclkDirect:
 155              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 10


 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 11


 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 156              		.loc 1 430 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              	.LVL1:
 161 0000 10B5     		push	{r4, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 4, -8
 164              		.cfi_offset 14, -4
 165 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 166              		.loc 1 434 0
 167 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 168              	.LVL2:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 169              		.loc 1 437 0
 170 0008 044A     		ldr	r2, .L15
 171 000a 1368     		ldr	r3, [r2]
 172 000c 0721     		movs	r1, #7
 173 000e 8B43     		bics	r3, r1
 174              	.LVL3:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 175              		.loc 1 448 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 12


 176 0010 0C40     		ands	r4, r1
 177              	.LVL4:
 178 0012 1C43     		orrs	r4, r3
 179              	.LVL5:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 180              		.loc 1 451 0
 181 0014 1460     		str	r4, [r2]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 182              		.loc 1 453 0
 183 0016 FFF7FEFF 		bl	CyExitCriticalSection
 184              	.LVL6:
 454:Generated_Source\PSoC4/CyLib.c **** }
 185              		.loc 1 454 0
 186              		@ sp needed
 187              	.LVL7:
 188 001a 10BD     		pop	{r4, pc}
 189              	.L16:
 190              		.align	2
 191              	.L15:
 192 001c 00010B40 		.word	1074462976
 193              		.cfi_endproc
 194              	.LFE6:
 195              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 196              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 197              		.align	2
 198              		.global	CySysEnablePumpClock
 199              		.code	16
 200              		.thumb_func
 201              		.type	CySysEnablePumpClock, %function
 202              	CySysEnablePumpClock:
 203              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 204              		.loc 1 474 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 13


 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              	.LVL8:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 210              		.loc 1 476 0
 211 0000 C307     		lsls	r3, r0, #31
 212 0002 07D5     		bpl	.L18
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 213              		.loc 1 478 0
 214 0004 094A     		ldr	r2, .L20
 215 0006 1168     		ldr	r1, [r2]
 216 0008 094B     		ldr	r3, .L20+4
 217 000a 1B68     		ldr	r3, [r3]
 218 000c 5B06     		lsls	r3, r3, #25
 219 000e 0B43     		orrs	r3, r1
 220 0010 1360     		str	r3, [r2]
 221 0012 0AE0     		b	.L17
 222              	.L18:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 223              		.loc 1 482 0
 224 0014 054A     		ldr	r2, .L20
 225 0016 1368     		ldr	r3, [r2]
 226 0018 5B0E     		lsrs	r3, r3, #25
 227 001a 0721     		movs	r1, #7
 228 001c 0B40     		ands	r3, r1
 229 001e 0449     		ldr	r1, .L20+4
 230 0020 0B60     		str	r3, [r1]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 231              		.loc 1 484 0
 232 0022 1168     		ldr	r1, [r2]
 233 0024 034B     		ldr	r3, .L20+8
 234 0026 0B40     		ands	r3, r1
 235 0028 1360     		str	r3, [r2]
 236              	.L17:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 237              		.loc 1 498 0
 238              		@ sp needed
 239 002a 7047     		bx	lr
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 14


 240              	.L21:
 241              		.align	2
 242              	.L20:
 243 002c 08010B40 		.word	1074462984
 244 0030 00000000 		.word	.LANCHOR0
 245 0034 FFFFFFF1 		.word	-234881025
 246              		.cfi_endproc
 247              	.LFE7:
 248              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 249              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 250              		.align	2
 251              		.global	CySysClkGetSysclkSource
 252              		.code	16
 253              		.thumb_func
 254              		.type	CySysClkGetSysclkSource, %function
 255              	CySysClkGetSysclkSource:
 256              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 257              		.loc 1 511 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 10B5     		push	{r4, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 4, -8
 264              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 265              		.loc 1 515 0
 266 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 267              	.LVL9:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 268              		.loc 1 525 0
 269 0006 044B     		ldr	r3, .L23
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 15


 270 0008 1B68     		ldr	r3, [r3]
 271 000a 0724     		movs	r4, #7
 272 000c 1C40     		ands	r4, r3
 273              	.LVL10:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 274              		.loc 1 528 0
 275 000e FFF7FEFF 		bl	CyExitCriticalSection
 276              	.LVL11:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 277              		.loc 1 531 0
 278 0012 2000     		movs	r0, r4
 279              		@ sp needed
 280              	.LVL12:
 281 0014 10BD     		pop	{r4, pc}
 282              	.L24:
 283 0016 C046     		.align	2
 284              	.L23:
 285 0018 00010B40 		.word	1074462976
 286              		.cfi_endproc
 287              	.LFE8:
 288              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 289              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 290              		.align	2
 291              		.global	CySysClkWriteSysclkDiv
 292              		.code	16
 293              		.thumb_func
 294              		.type	CySysClkWriteSysclkDiv, %function
 295              	CySysClkWriteSysclkDiv:
 296              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 16


 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 297              		.loc 1 566 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              	.LVL13:
 302 0000 10B5     		push	{r4, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 4, -8
 305              		.cfi_offset 14, -4
 306 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 307              		.loc 1 569 0
 308 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 309              	.LVL14:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 310              		.loc 1 571 0
 311 0008 E304     		lsls	r3, r4, #19
 312 000a E022     		movs	r2, #224
 313 000c 9203     		lsls	r2, r2, #14
 314 000e 1340     		ands	r3, r2
 315 0010 1900     		movs	r1, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 316              		.loc 1 573 0
 317 0012 054C     		ldr	r4, .L26
 318              	.LVL15:
 319 0014 2368     		ldr	r3, [r4]
 320 0016 054A     		ldr	r2, .L26+4
 321 0018 1A40     		ands	r2, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 322              		.loc 1 572 0
 323 001a 0B00     		movs	r3, r1
 324 001c 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 325              		.loc 1 571 0
 326 001e 2360     		str	r3, [r4]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 327              		.loc 1 576 0
 328 0020 FFF7FEFF 		bl	CyExitCriticalSection
 329              	.LVL16:
 577:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 17


 330              		.loc 1 577 0
 331              		@ sp needed
 332 0024 10BD     		pop	{r4, pc}
 333              	.L27:
 334 0026 C046     		.align	2
 335              	.L26:
 336 0028 00010B40 		.word	1074462976
 337 002c FFFFC7FF 		.word	-3670017
 338              		.cfi_endproc
 339              	.LFE9:
 340              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 341              		.section	.text.CySysLvdDisable,"ax",%progbits
 342              		.align	2
 343              		.global	CySysLvdDisable
 344              		.code	16
 345              		.thumb_func
 346              		.type	CySysLvdDisable, %function
 347              	CySysLvdDisable:
 348              	.LFB12:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 18


 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 19


 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 20


 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 21


 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 22


 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 23


 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 24


 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 25


1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 26


1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 27


1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 28


1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 29


1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 30


1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 31


1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 32


1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 33


1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 34


1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 35


1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 36


1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 37


1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 38


1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 39


1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 40


1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 41


1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 42


1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 43


2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 44


2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 349              		.loc 1 2149 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 45


2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 354              		.loc 1 2150 0
 355 0000 054A     		ldr	r2, .L29
 356 0002 1368     		ldr	r3, [r2]
 357 0004 0221     		movs	r1, #2
 358 0006 8B43     		bics	r3, r1
 359 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 360              		.loc 1 2151 0
 361 000a 044A     		ldr	r2, .L29+4
 362 000c 1368     		ldr	r3, [r2]
 363 000e 0139     		subs	r1, r1, #1
 364 0010 8B43     		bics	r3, r1
 365 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 366              		.loc 1 2152 0
 367              		@ sp needed
 368 0014 7047     		bx	lr
 369              	.L30:
 370 0016 C046     		.align	2
 371              	.L29:
 372 0018 08000B40 		.word	1074462728
 373 001c 18000B40 		.word	1074462744
 374              		.cfi_endproc
 375              	.LFE12:
 376              		.size	CySysLvdDisable, .-CySysLvdDisable
 377              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 378              		.align	2
 379              		.global	CySysLvdGetInterruptSource
 380              		.code	16
 381              		.thumb_func
 382              		.type	CySysLvdGetInterruptSource, %function
 383              	CySysLvdGetInterruptSource:
 384              	.LFB13:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 385              		.loc 1 2167 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 390              		.loc 1 2168 0
 391 0000 024B     		ldr	r3, .L32
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 46


 392 0002 1B68     		ldr	r3, [r3]
 393 0004 0220     		movs	r0, #2
 394 0006 1840     		ands	r0, r3
2169:Generated_Source\PSoC4/CyLib.c ****     }
 395              		.loc 1 2169 0
 396              		@ sp needed
 397 0008 7047     		bx	lr
 398              	.L33:
 399 000a C046     		.align	2
 400              	.L32:
 401 000c 04000B40 		.word	1074462724
 402              		.cfi_endproc
 403              	.LFE13:
 404              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 405              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 406              		.align	2
 407              		.global	CySysLvdClearInterrupt
 408              		.code	16
 409              		.thumb_func
 410              		.type	CySysLvdClearInterrupt, %function
 411              	CySysLvdClearInterrupt:
 412              	.LFB14:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 413              		.loc 1 2183 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 418              		.loc 1 2184 0
 419 0000 0222     		movs	r2, #2
 420 0002 014B     		ldr	r3, .L35
 421 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 422              		.loc 1 2185 0
 423              		@ sp needed
 424 0006 7047     		bx	lr
 425              	.L36:
 426              		.align	2
 427              	.L35:
 428 0008 04000B40 		.word	1074462724
 429              		.cfi_endproc
 430              	.LFE14:
 431              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 47


 432              		.section	.text.CySysGetResetReason,"ax",%progbits
 433              		.align	2
 434              		.global	CySysGetResetReason
 435              		.code	16
 436              		.thumb_func
 437              		.type	CySysGetResetReason, %function
 438              	CySysGetResetReason:
 439              	.LFB15:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 440              		.loc 1 2209 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445              	.LVL17:
 446 0000 0200     		movs	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 447              		.loc 1 2212 0
 448 0002 1920     		movs	r0, #25
 449              	.LVL18:
 450 0004 0240     		ands	r2, r0
 451              	.LVL19:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 452              		.loc 1 2213 0
 453 0006 0249     		ldr	r1, .L38
 454 0008 0B68     		ldr	r3, [r1]
 455 000a 1840     		ands	r0, r3
 456              	.LVL20:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 457              		.loc 1 2215 0
 458 000c 0A60     		str	r2, [r1]
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 48


2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 459              		.loc 1 2218 0
 460              		@ sp needed
 461 000e 7047     		bx	lr
 462              	.L39:
 463              		.align	2
 464              	.L38:
 465 0010 00030B40 		.word	1074463488
 466              		.cfi_endproc
 467              	.LFE15:
 468              		.size	CySysGetResetReason, .-CySysGetResetReason
 469              		.section	.text.CyDisableInts,"ax",%progbits
 470              		.align	2
 471              		.global	CyDisableInts
 472              		.code	16
 473              		.thumb_func
 474              		.type	CyDisableInts, %function
 475              	CyDisableInts:
 476              	.LFB16:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 477              		.loc 1 2232 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 482              		.loc 1 2236 0
 483 0000 024B     		ldr	r3, .L41
 484 0002 1868     		ldr	r0, [r3]
 485              	.LVL21:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 486              		.loc 1 2239 0
 487 0004 0122     		movs	r2, #1
 488 0006 5242     		rsbs	r2, r2, #0
 489 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 49


2242:Generated_Source\PSoC4/CyLib.c **** }
 490              		.loc 1 2242 0
 491              		@ sp needed
 492 000a 7047     		bx	lr
 493              	.L42:
 494              		.align	2
 495              	.L41:
 496 000c 80E100E0 		.word	-536813184
 497              		.cfi_endproc
 498              	.LFE16:
 499              		.size	CyDisableInts, .-CyDisableInts
 500              		.section	.text.CyEnableInts,"ax",%progbits
 501              		.align	2
 502              		.global	CyEnableInts
 503              		.code	16
 504              		.thumb_func
 505              		.type	CyEnableInts, %function
 506              	CyEnableInts:
 507              	.LFB17:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 508              		.loc 1 2255 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513              	.LVL22:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 514              		.loc 1 2256 0
 515 0000 014B     		ldr	r3, .L44
 516 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 517              		.loc 1 2257 0
 518              		@ sp needed
 519 0004 7047     		bx	lr
 520              	.L45:
 521 0006 C046     		.align	2
 522              	.L44:
 523 0008 00E100E0 		.word	-536813312
 524              		.cfi_endproc
 525              	.LFE17:
 526              		.size	CyEnableInts, .-CyEnableInts
 527              		.section	.text.CyIntEnable,"ax",%progbits
 528              		.align	2
 529              		.global	CyIntEnable
 530              		.code	16
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 50


 531              		.thumb_func
 532              		.type	CyIntEnable, %function
 533              	CyIntEnable:
 534              	.LFB24:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 51


2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 52


2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 53


2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 535              		.loc 1 2438 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540              	.LVL23:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 541              		.loc 1 2439 0
 542 0000 1F23     		movs	r3, #31
 543 0002 1840     		ands	r0, r3
 544              	.LVL24:
 545 0004 1E3B     		subs	r3, r3, #30
 546 0006 8340     		lsls	r3, r3, r0
 547 0008 014A     		ldr	r2, .L47
 548 000a 1360     		str	r3, [r2]
2440:Generated_Source\PSoC4/CyLib.c **** }
 549              		.loc 1 2440 0
 550              		@ sp needed
 551 000c 7047     		bx	lr
 552              	.L48:
 553 000e C046     		.align	2
 554              	.L47:
 555 0010 00E100E0 		.word	-536813312
 556              		.cfi_endproc
 557              	.LFE24:
 558              		.size	CyIntEnable, .-CyIntEnable
 559              		.section	.text.CyIntGetState,"ax",%progbits
 560              		.align	2
 561              		.global	CyIntGetState
 562              		.code	16
 563              		.thumb_func
 564              		.type	CyIntGetState, %function
 565              	CyIntGetState:
 566              	.LFB25:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 54


2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 567              		.loc 1 2456 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 572              	.LVL25:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 573              		.loc 1 2458 0
 574 0000 044B     		ldr	r3, .L50
 575 0002 1B68     		ldr	r3, [r3]
 576 0004 1F22     		movs	r2, #31
 577 0006 1040     		ands	r0, r2
 578              	.LVL26:
 579 0008 C340     		lsrs	r3, r3, r0
 580 000a 1800     		movs	r0, r3
 581 000c 0123     		movs	r3, #1
 582 000e 1840     		ands	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 583              		.loc 1 2459 0
 584              		@ sp needed
 585 0010 7047     		bx	lr
 586              	.L51:
 587 0012 C046     		.align	2
 588              	.L50:
 589 0014 00E100E0 		.word	-536813312
 590              		.cfi_endproc
 591              	.LFE25:
 592              		.size	CyIntGetState, .-CyIntGetState
 593              		.section	.text.CyIntDisable,"ax",%progbits
 594              		.align	2
 595              		.global	CyIntDisable
 596              		.code	16
 597              		.thumb_func
 598              		.type	CyIntDisable, %function
 599              	CyIntDisable:
 600              	.LFB26:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 55


 601              		.loc 1 2472 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606              	.LVL27:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 607              		.loc 1 2473 0
 608 0000 1F23     		movs	r3, #31
 609 0002 1840     		ands	r0, r3
 610              	.LVL28:
 611 0004 1E3B     		subs	r3, r3, #30
 612 0006 8340     		lsls	r3, r3, r0
 613 0008 014A     		ldr	r2, .L53
 614 000a 1360     		str	r3, [r2]
2474:Generated_Source\PSoC4/CyLib.c **** }
 615              		.loc 1 2474 0
 616              		@ sp needed
 617 000c 7047     		bx	lr
 618              	.L54:
 619 000e C046     		.align	2
 620              	.L53:
 621 0010 80E100E0 		.word	-536813184
 622              		.cfi_endproc
 623              	.LFE26:
 624              		.size	CyIntDisable, .-CyIntDisable
 625              		.section	.text.CyIntSetPending,"ax",%progbits
 626              		.align	2
 627              		.global	CyIntSetPending
 628              		.code	16
 629              		.thumb_func
 630              		.type	CyIntSetPending, %function
 631              	CyIntSetPending:
 632              	.LFB27:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 633              		.loc 1 2486 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              		@ link register save eliminated.
 638              	.LVL29:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 639              		.loc 1 2487 0
 640 0000 1F23     		movs	r3, #31
 641 0002 1840     		ands	r0, r3
 642              	.LVL30:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 56


 643 0004 1E3B     		subs	r3, r3, #30
 644 0006 8340     		lsls	r3, r3, r0
 645 0008 014A     		ldr	r2, .L56
 646 000a 1360     		str	r3, [r2]
2488:Generated_Source\PSoC4/CyLib.c **** }
 647              		.loc 1 2488 0
 648              		@ sp needed
 649 000c 7047     		bx	lr
 650              	.L57:
 651 000e C046     		.align	2
 652              	.L56:
 653 0010 00E200E0 		.word	-536813056
 654              		.cfi_endproc
 655              	.LFE27:
 656              		.size	CyIntSetPending, .-CyIntSetPending
 657              		.section	.text.CyIntClearPending,"ax",%progbits
 658              		.align	2
 659              		.global	CyIntClearPending
 660              		.code	16
 661              		.thumb_func
 662              		.type	CyIntClearPending, %function
 663              	CyIntClearPending:
 664              	.LFB28:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 665              		.loc 1 2501 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670              	.LVL31:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 671              		.loc 1 2502 0
 672 0000 1F23     		movs	r3, #31
 673 0002 1840     		ands	r0, r3
 674              	.LVL32:
 675 0004 1E3B     		subs	r3, r3, #30
 676 0006 8340     		lsls	r3, r3, r0
 677 0008 014A     		ldr	r2, .L59
 678 000a 1360     		str	r3, [r2]
2503:Generated_Source\PSoC4/CyLib.c **** }
 679              		.loc 1 2503 0
 680              		@ sp needed
 681 000c 7047     		bx	lr
 682              	.L60:
 683 000e C046     		.align	2
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 57


 684              	.L59:
 685 0010 80E200E0 		.word	-536812928
 686              		.cfi_endproc
 687              	.LFE28:
 688              		.size	CyIntClearPending, .-CyIntClearPending
 689              		.section	.text.CyHalt,"ax",%progbits
 690              		.align	2
 691              		.global	CyHalt
 692              		.code	16
 693              		.thumb_func
 694              		.type	CyHalt, %function
 695              	CyHalt:
 696              	.LFB29:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 697              		.loc 1 2516 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702              	.LVL33:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 703              		.loc 1 2525 0
 704              		.syntax divided
 705              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 706 0000 01BE     		    bkpt    1
 707              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 708              		.loc 1 2529 0
 709              		.thumb
 710              		.syntax unified
 711              		@ sp needed
 712 0002 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE29:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 58


 715              		.size	CyHalt, .-CyHalt
 716              		.section	.text.CyIntSetSysVector,"ax",%progbits
 717              		.align	2
 718              		.global	CyIntSetSysVector
 719              		.code	16
 720              		.thumb_func
 721              		.type	CyIntSetSysVector, %function
 722              	CyIntSetSysVector:
 723              	.LFB18:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 724              		.loc 1 2280 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              	.LVL34:
 729 0000 70B5     		push	{r4, r5, r6, lr}
 730              		.cfi_def_cfa_offset 16
 731              		.cfi_offset 4, -16
 732              		.cfi_offset 5, -12
 733              		.cfi_offset 6, -8
 734              		.cfi_offset 14, -4
 735 0002 0400     		movs	r4, r0
 736 0004 0D00     		movs	r5, r1
 737              	.LVL35:
2284:Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 2284 0
 739 0006 0F28     		cmp	r0, #15
 740 0008 02D9     		bls	.L63
2284:Generated_Source\PSoC4/CyLib.c **** 
 741              		.loc 1 2284 0 is_stmt 0 discriminator 1
 742 000a 0020     		movs	r0, #0
 743              	.LVL36:
 744 000c FFF7FEFF 		bl	CyHalt
 745              	.LVL37:
 746              	.L63:
2287:Generated_Source\PSoC4/CyLib.c **** 
 747              		.loc 1 2287 0 is_stmt 1
 748 0010 A400     		lsls	r4, r4, #2
 749 0012 8023     		movs	r3, #128
 750 0014 9B05     		lsls	r3, r3, #22
 751 0016 9C46     		mov	ip, r3
 752 0018 6444     		add	r4, r4, ip
 753 001a 2068     		ldr	r0, [r4]
 754              	.LVL38:
2290:Generated_Source\PSoC4/CyLib.c **** 
 755              		.loc 1 2290 0
 756 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 757              		.loc 1 2293 0
 758              		@ sp needed
 759              	.LVL39:
 760 001e 70BD     		pop	{r4, r5, r6, pc}
 761              		.cfi_endproc
 762              	.LFE18:
 763              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 764              		.section	.text.CyIntGetSysVector,"ax",%progbits
 765              		.align	2
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 59


 766              		.global	CyIntGetSysVector
 767              		.code	16
 768              		.thumb_func
 769              		.type	CyIntGetSysVector, %function
 770              	CyIntGetSysVector:
 771              	.LFB19:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 772              		.loc 1 2314 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              	.LVL40:
 777 0000 10B5     		push	{r4, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 4, -8
 780              		.cfi_offset 14, -4
 781 0002 0400     		movs	r4, r0
 782              	.LVL41:
2317:Generated_Source\PSoC4/CyLib.c **** 
 783              		.loc 1 2317 0
 784 0004 0F28     		cmp	r0, #15
 785 0006 02D9     		bls	.L65
2317:Generated_Source\PSoC4/CyLib.c **** 
 786              		.loc 1 2317 0 is_stmt 0 discriminator 1
 787 0008 0020     		movs	r0, #0
 788              	.LVL42:
 789 000a FFF7FEFF 		bl	CyHalt
 790              	.LVL43:
 791              	.L65:
2319:Generated_Source\PSoC4/CyLib.c **** }
 792              		.loc 1 2319 0 is_stmt 1
 793 000e A400     		lsls	r4, r4, #2
 794 0010 8023     		movs	r3, #128
 795 0012 9B05     		lsls	r3, r3, #22
 796 0014 9C46     		mov	ip, r3
 797 0016 6444     		add	r4, r4, ip
 798 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 799              		.loc 1 2320 0
 800              		@ sp needed
 801 001a 10BD     		pop	{r4, pc}
 802              		.cfi_endproc
 803              	.LFE19:
 804              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 805              		.section	.text.CyIntSetVector,"ax",%progbits
 806              		.align	2
 807              		.global	CyIntSetVector
 808              		.code	16
 809              		.thumb_func
 810              		.type	CyIntSetVector, %function
 811              	CyIntSetVector:
 812              	.LFB20:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 813              		.loc 1 2336 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 60


 817              	.LVL44:
 818 0000 70B5     		push	{r4, r5, r6, lr}
 819              		.cfi_def_cfa_offset 16
 820              		.cfi_offset 4, -16
 821              		.cfi_offset 5, -12
 822              		.cfi_offset 6, -8
 823              		.cfi_offset 14, -4
 824 0002 0400     		movs	r4, r0
 825 0004 0D00     		movs	r5, r1
 826              	.LVL45:
2340:Generated_Source\PSoC4/CyLib.c **** 
 827              		.loc 1 2340 0
 828 0006 1F28     		cmp	r0, #31
 829 0008 02D9     		bls	.L67
2340:Generated_Source\PSoC4/CyLib.c **** 
 830              		.loc 1 2340 0 is_stmt 0 discriminator 1
 831 000a 0020     		movs	r0, #0
 832              	.LVL46:
 833 000c FFF7FEFF 		bl	CyHalt
 834              	.LVL47:
 835              	.L67:
2343:Generated_Source\PSoC4/CyLib.c **** 
 836              		.loc 1 2343 0 is_stmt 1
 837 0010 1034     		adds	r4, r4, #16
 838 0012 A400     		lsls	r4, r4, #2
 839 0014 8023     		movs	r3, #128
 840 0016 9B05     		lsls	r3, r3, #22
 841 0018 9C46     		mov	ip, r3
 842 001a 6444     		add	r4, r4, ip
 843 001c 2068     		ldr	r0, [r4]
 844              	.LVL48:
2346:Generated_Source\PSoC4/CyLib.c **** 
 845              		.loc 1 2346 0
 846 001e 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 847              		.loc 1 2349 0
 848              		@ sp needed
 849              	.LVL49:
 850 0020 70BD     		pop	{r4, r5, r6, pc}
 851              		.cfi_endproc
 852              	.LFE20:
 853              		.size	CyIntSetVector, .-CyIntSetVector
 854 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 855              		.align	2
 856              		.global	CyIntGetVector
 857              		.code	16
 858              		.thumb_func
 859              		.type	CyIntGetVector, %function
 860              	CyIntGetVector:
 861              	.LFB21:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 862              		.loc 1 2364 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              	.LVL50:
 867 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 61


 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 4, -8
 870              		.cfi_offset 14, -4
 871 0002 0400     		movs	r4, r0
 872              	.LVL51:
2367:Generated_Source\PSoC4/CyLib.c **** 
 873              		.loc 1 2367 0
 874 0004 1F28     		cmp	r0, #31
 875 0006 02D9     		bls	.L69
2367:Generated_Source\PSoC4/CyLib.c **** 
 876              		.loc 1 2367 0 is_stmt 0 discriminator 1
 877 0008 0020     		movs	r0, #0
 878              	.LVL52:
 879 000a FFF7FEFF 		bl	CyHalt
 880              	.LVL53:
 881              	.L69:
2369:Generated_Source\PSoC4/CyLib.c **** }
 882              		.loc 1 2369 0 is_stmt 1
 883 000e 1034     		adds	r4, r4, #16
 884 0010 A400     		lsls	r4, r4, #2
 885 0012 8023     		movs	r3, #128
 886 0014 9B05     		lsls	r3, r3, #22
 887 0016 9C46     		mov	ip, r3
 888 0018 6444     		add	r4, r4, ip
 889 001a 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 890              		.loc 1 2370 0
 891              		@ sp needed
 892 001c 10BD     		pop	{r4, pc}
 893              		.cfi_endproc
 894              	.LFE21:
 895              		.size	CyIntGetVector, .-CyIntGetVector
 896 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 897              		.align	2
 898              		.global	CyIntSetPriority
 899              		.code	16
 900              		.thumb_func
 901              		.type	CyIntSetPriority, %function
 902              	CyIntSetPriority:
 903              	.LFB22:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 904              		.loc 1 2383 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              	.LVL54:
 909 0000 70B5     		push	{r4, r5, r6, lr}
 910              		.cfi_def_cfa_offset 16
 911              		.cfi_offset 4, -16
 912              		.cfi_offset 5, -12
 913              		.cfi_offset 6, -8
 914              		.cfi_offset 14, -4
 915 0002 0400     		movs	r4, r0
 916 0004 0E00     		movs	r6, r1
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 917              		.loc 1 2388 0
 918 0006 0329     		cmp	r1, #3
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 62


 919 0008 02D9     		bls	.L71
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 920              		.loc 1 2388 0 is_stmt 0 discriminator 1
 921 000a 0020     		movs	r0, #0
 922              	.LVL55:
 923 000c FFF7FEFF 		bl	CyHalt
 924              	.LVL56:
 925              	.L71:
2389:Generated_Source\PSoC4/CyLib.c **** 
 926              		.loc 1 2389 0 is_stmt 1
 927 0010 1F2C     		cmp	r4, #31
 928 0012 02D9     		bls	.L72
2389:Generated_Source\PSoC4/CyLib.c **** 
 929              		.loc 1 2389 0 is_stmt 0 discriminator 1
 930 0014 0020     		movs	r0, #0
 931 0016 FFF7FEFF 		bl	CyHalt
 932              	.LVL57:
 933              	.L72:
2391:Generated_Source\PSoC4/CyLib.c **** 
 934              		.loc 1 2391 0 is_stmt 1
 935 001a 0325     		movs	r5, #3
 936 001c 2540     		ands	r5, r4
 937 001e ED00     		lsls	r5, r5, #3
 938 0020 0635     		adds	r5, r5, #6
 939              	.LVL58:
2393:Generated_Source\PSoC4/CyLib.c **** 
 940              		.loc 1 2393 0
 941 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 942              	.LVL59:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 943              		.loc 1 2395 0
 944 0026 A408     		lsrs	r4, r4, #2
 945 0028 A400     		lsls	r4, r4, #2
 946 002a 074B     		ldr	r3, .L73
 947 002c 9C46     		mov	ip, r3
 948 002e 6444     		add	r4, r4, ip
 949 0030 2168     		ldr	r1, [r4]
 950              	.LVL60:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 951              		.loc 1 2396 0
 952 0032 0323     		movs	r3, #3
 953 0034 AB40     		lsls	r3, r3, r5
 954 0036 9943     		bics	r1, r3
 955              	.LVL61:
 956 0038 0B00     		movs	r3, r1
 957              	.LVL62:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 958              		.loc 1 2397 0
 959 003a 3100     		movs	r1, r6
 960              	.LVL63:
 961 003c A940     		lsls	r1, r1, r5
 962 003e 1943     		orrs	r1, r3
 963              	.LVL64:
2398:Generated_Source\PSoC4/CyLib.c **** 
 964              		.loc 1 2398 0
 965 0040 2160     		str	r1, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 63


 966              		.loc 1 2400 0
 967 0042 FFF7FEFF 		bl	CyExitCriticalSection
 968              	.LVL65:
2401:Generated_Source\PSoC4/CyLib.c **** 
 969              		.loc 1 2401 0
 970              		@ sp needed
 971              	.LVL66:
 972 0046 70BD     		pop	{r4, r5, r6, pc}
 973              	.L74:
 974              		.align	2
 975              	.L73:
 976 0048 00E400E0 		.word	-536812544
 977              		.cfi_endproc
 978              	.LFE22:
 979              		.size	CyIntSetPriority, .-CyIntSetPriority
 980              		.section	.text.CyIntGetPriority,"ax",%progbits
 981              		.align	2
 982              		.global	CyIntGetPriority
 983              		.code	16
 984              		.thumb_func
 985              		.type	CyIntGetPriority, %function
 986              	CyIntGetPriority:
 987              	.LFB23:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 988              		.loc 1 2417 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              	.LVL67:
 993 0000 10B5     		push	{r4, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 4, -8
 996              		.cfi_offset 14, -4
 997 0002 0400     		movs	r4, r0
2420:Generated_Source\PSoC4/CyLib.c **** 
 998              		.loc 1 2420 0
 999 0004 1F28     		cmp	r0, #31
 1000 0006 02D9     		bls	.L76
2420:Generated_Source\PSoC4/CyLib.c **** 
 1001              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1002 0008 0020     		movs	r0, #0
 1003              	.LVL68:
 1004 000a FFF7FEFF 		bl	CyHalt
 1005              	.LVL69:
 1006              	.L76:
2422:Generated_Source\PSoC4/CyLib.c **** 
 1007              		.loc 1 2422 0 is_stmt 1
 1008 000e A308     		lsrs	r3, r4, #2
 1009 0010 9B00     		lsls	r3, r3, #2
 1010 0012 054A     		ldr	r2, .L77
 1011 0014 9446     		mov	ip, r2
 1012 0016 6344     		add	r3, r3, ip
 1013 0018 1868     		ldr	r0, [r3]
 1014 001a 0323     		movs	r3, #3
 1015 001c 1C40     		ands	r4, r3
 1016 001e E400     		lsls	r4, r4, #3
 1017 0020 0634     		adds	r4, r4, #6
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 64


 1018 0022 E040     		lsrs	r0, r0, r4
 1019              	.LVL70:
2424:Generated_Source\PSoC4/CyLib.c **** }
 1020              		.loc 1 2424 0
 1021 0024 1840     		ands	r0, r3
 1022              	.LVL71:
2425:Generated_Source\PSoC4/CyLib.c **** 
 1023              		.loc 1 2425 0
 1024              		@ sp needed
 1025 0026 10BD     		pop	{r4, pc}
 1026              	.L78:
 1027              		.align	2
 1028              	.L77:
 1029 0028 00E400E0 		.word	-536812544
 1030              		.cfi_endproc
 1031              	.LFE23:
 1032              		.size	CyIntGetPriority, .-CyIntGetPriority
 1033              		.section	.text.CySoftwareReset,"ax",%progbits
 1034              		.align	2
 1035              		.global	CySoftwareReset
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	CySoftwareReset, %function
 1039              	CySoftwareReset:
 1040              	.LFB30:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1041              		.loc 1 2540 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1046              		.loc 1 2545 0
 1047 0000 034A     		ldr	r2, .L80
 1048 0002 1368     		ldr	r3, [r2]
 1049 0004 1B04     		lsls	r3, r3, #16
 1050 0006 1B0C     		lsrs	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1051              		.loc 1 2546 0
 1052 0008 0249     		ldr	r1, .L80+4
 1053 000a 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1054              		.loc 1 2545 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 65


 1055 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1056              		.loc 1 2547 0
 1057              		@ sp needed
 1058 000e 7047     		bx	lr
 1059              	.L81:
 1060              		.align	2
 1061              	.L80:
 1062 0010 0CED00E0 		.word	-536810228
 1063 0014 0400FA05 		.word	100270084
 1064              		.cfi_endproc
 1065              	.LFE30:
 1066              		.size	CySoftwareReset, .-CySoftwareReset
 1067              		.section	.text.CyDelay,"ax",%progbits
 1068              		.align	2
 1069              		.global	CyDelay
 1070              		.code	16
 1071              		.thumb_func
 1072              		.type	CyDelay, %function
 1073              	CyDelay:
 1074              	.LFB31:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1075              		.loc 1 2560 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              	.LVL72:
 1080 0000 10B5     		push	{r4, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 4, -8
 1083              		.cfi_offset 14, -4
 1084 0002 0400     		movs	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1085              		.loc 1 2561 0
 1086 0004 06E0     		b	.L83
 1087              	.LVL73:
 1088              	.L84:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1089              		.loc 1 2566 0
 1090 0006 084B     		ldr	r3, .L85
 1091 0008 5868     		ldr	r0, [r3, #4]
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 66


 1092 000a FFF7FEFF 		bl	CyDelayCycles
 1093              	.LVL74:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1094              		.loc 1 2567 0
 1095 000e 074B     		ldr	r3, .L85+4
 1096 0010 9C46     		mov	ip, r3
 1097 0012 6444     		add	r4, r4, ip
 1098              	.LVL75:
 1099              	.L83:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1100              		.loc 1 2561 0
 1101 0014 8023     		movs	r3, #128
 1102 0016 1B02     		lsls	r3, r3, #8
 1103 0018 9C42     		cmp	r4, r3
 1104 001a F4D8     		bhi	.L84
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1105              		.loc 1 2570 0
 1106 001c 024B     		ldr	r3, .L85
 1107 001e 9868     		ldr	r0, [r3, #8]
 1108 0020 6043     		muls	r0, r4
 1109 0022 FFF7FEFF 		bl	CyDelayCycles
 1110              	.LVL76:
2571:Generated_Source\PSoC4/CyLib.c **** }
 1111              		.loc 1 2571 0
 1112              		@ sp needed
 1113              	.LVL77:
 1114 0026 10BD     		pop	{r4, pc}
 1115              	.L86:
 1116              		.align	2
 1117              	.L85:
 1118 0028 00000000 		.word	.LANCHOR0
 1119 002c 0080FFFF 		.word	-32768
 1120              		.cfi_endproc
 1121              	.LFE31:
 1122              		.size	CyDelay, .-CyDelay
 1123              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1124              		.align	2
 1125              		.global	CySysClkImoEnableWcoLock
 1126              		.code	16
 1127              		.thumb_func
 1128              		.type	CySysClkImoEnableWcoLock, %function
 1129              	CySysClkImoEnableWcoLock:
 1130              	.LFB3:
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1131              		.loc 1 176 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 8
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135 0000 30B5     		push	{r4, r5, lr}
 1136              		.cfi_def_cfa_offset 12
 1137              		.cfi_offset 4, -12
 1138              		.cfi_offset 5, -8
 1139              		.cfi_offset 14, -4
 1140 0002 83B0     		sub	sp, sp, #12
 1141              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 67


 1142              	.LVL78:
 187:Generated_Source\PSoC4/CyLib.c ****         {
 1143              		.loc 1 187 0
 1144 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1145              	.LVL79:
 1146 0008 0028     		cmp	r0, #0
 1147 000a 5AD0     		beq	.L87
 189:Generated_Source\PSoC4/CyLib.c **** 
 1148              		.loc 1 189 0
 1149 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1150              	.LVL80:
 1151 0010 0400     		movs	r4, r0
 1152              	.LVL81:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 1153              		.loc 1 201 0
 1154 0012 0023     		movs	r3, #0
 1155 0014 0AE0     		b	.L89
 1156              	.LVL82:
 1157              	.L92:
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 1158              		.loc 1 203 0
 1159 0016 2C4A     		ldr	r2, .L97
 1160 0018 1268     		ldr	r2, [r2]
 1161 001a 3F21     		movs	r1, #63
 1162 001c 0A40     		ands	r2, r1
 1163 001e 2B49     		ldr	r1, .L97+4
 1164 0020 C95C     		ldrb	r1, [r1, r3]
 1165 0022 8A42     		cmp	r2, r1
 1166 0024 01D1     		bne	.L90
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 1167              		.loc 1 205 0
 1168 0026 0333     		adds	r3, r3, #3
 1169              	.LVL83:
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 1170              		.loc 1 206 0
 1171 0028 03E0     		b	.L91
 1172              	.LVL84:
 1173              	.L90:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 1174              		.loc 1 201 0 discriminator 2
 1175 002a 0133     		adds	r3, r3, #1
 1176              	.LVL85:
 1177              	.L89:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 1178              		.loc 1 201 0 is_stmt 0 discriminator 1
 1179 002c 2D2B     		cmp	r3, #45
 1180 002e F2D9     		bls	.L92
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1181              		.loc 1 200 0 is_stmt 1
 1182 0030 0323     		movs	r3, #3
 1183              	.LVL86:
 1184              	.L91:
 225:Generated_Source\PSoC4/CyLib.c ****                 {
 1185              		.loc 1 225 0
 1186 0032 274A     		ldr	r2, .L97+8
 1187 0034 1268     		ldr	r2, [r2]
 1188 0036 D206     		lsls	r2, r2, #27
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 68


 1189 0038 06D1     		bne	.L93
 227:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 1190              		.loc 1 227 0
 1191 003a 2548     		ldr	r0, .L97+8
 1192 003c 0268     		ldr	r2, [r0]
 1193 003e 1F21     		movs	r1, #31
 1194 0040 8A43     		bics	r2, r1
 1195 0042 1339     		subs	r1, r1, #19
 1196 0044 0A43     		orrs	r2, r1
 1197 0046 0260     		str	r2, [r0]
 1198              	.L93:
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1199              		.loc 1 232 0
 1200 0048 224A     		ldr	r2, .L97+12
 1201 004a 1168     		ldr	r1, [r2]
 1202 004c 224A     		ldr	r2, .L97+16
 1203 004e 0A40     		ands	r2, r1
 1204              	.LVL87:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1205              		.loc 1 238 0
 1206 0050 2249     		ldr	r1, .L97+20
 1207 0052 5943     		muls	r1, r3
 1208 0054 8020     		movs	r0, #128
 1209 0056 C001     		lsls	r0, r0, #7
 1210 0058 8446     		mov	ip, r0
 1211 005a 6144     		add	r1, r1, ip
 1212 005c C90B     		lsrs	r1, r1, #15
 1213 005e 0139     		subs	r1, r1, #1
 1214 0060 4905     		lsls	r1, r1, #21
 1215 0062 490D     		lsrs	r1, r1, #21
 1216 0064 0A43     		orrs	r2, r1
 1217              	.LVL88:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1218              		.loc 1 241 0
 1219 0066 A021     		movs	r1, #160
 1220 0068 4903     		lsls	r1, r1, #13
 1221 006a 1143     		orrs	r1, r2
 1222 006c 0800     		movs	r0, r1
 1223              	.LVL89:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1224              		.loc 1 244 0
 1225 006e 192B     		cmp	r3, #25
 1226 0070 02D8     		bhi	.L94
 246:Generated_Source\PSoC4/CyLib.c ****             }
 1227              		.loc 1 246 0
 1228 0072 1B4B     		ldr	r3, .L97+24
 1229              	.LVL90:
 1230 0074 1A43     		orrs	r2, r3
 1231              	.LVL91:
 1232 0076 0EE0     		b	.L95
 1233              	.LVL92:
 1234              	.L94:
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1235              		.loc 1 250 0
 1236 0078 1A4A     		ldr	r2, .L97+28
 1237 007a 9A18     		adds	r2, r3, r2
 1238 007c 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 69


 251:Generated_Source\PSoC4/CyLib.c **** 
 1239              		.loc 1 251 0
 1240 007e 1A3B     		subs	r3, r3, #26
 1241              	.LVL93:
 1242 0080 1249     		ldr	r1, .L97+4
 1243 0082 C918     		adds	r1, r1, r3
 1244 0084 3023     		movs	r3, #48
 1245              	.LVL94:
 1246 0086 CB5C     		ldrb	r3, [r1, r3]
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1247              		.loc 1 250 0
 1248 0088 D318     		adds	r3, r2, r3
 1249              	.LVL95:
 253:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 1250              		.loc 1 253 0
 1251 008a FF2B     		cmp	r3, #255
 1252 008c 00D9     		bls	.L96
 1253 008e FF23     		movs	r3, #255
 1254              	.L96:
 1255              	.LVL96:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1256              		.loc 1 256 0
 1257 0090 9B05     		lsls	r3, r3, #22
 1258              	.LVL97:
 1259 0092 0200     		movs	r2, r0
 1260 0094 1A43     		orrs	r2, r3
 1261              	.LVL98:
 1262              	.L95:
 259:Generated_Source\PSoC4/CyLib.c **** 
 1263              		.loc 1 259 0
 1264 0096 0F4B     		ldr	r3, .L97+12
 1265 0098 1A60     		str	r2, [r3]
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1266              		.loc 1 261 0
 1267 009a 134D     		ldr	r5, .L97+32
 1268 009c 2B68     		ldr	r3, [r5]
 1269 009e 0193     		str	r3, [sp, #4]
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1270              		.loc 1 262 0
 1271 00a0 3020     		movs	r0, #48
 1272 00a2 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1273              	.LVL99:
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1274              		.loc 1 263 0
 1275 00a6 114A     		ldr	r2, .L97+36
 1276 00a8 1368     		ldr	r3, [r2]
 1277 00aa 8021     		movs	r1, #128
 1278 00ac C905     		lsls	r1, r1, #23
 1279 00ae 0B43     		orrs	r3, r1
 1280 00b0 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1281              		.loc 1 264 0
 1282 00b2 1420     		movs	r0, #20
 1283 00b4 FFF7FEFF 		bl	CyDelay
 1284              	.LVL100:
 265:Generated_Source\PSoC4/CyLib.c **** 
 1285              		.loc 1 265 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 70


 1286 00b8 019B     		ldr	r3, [sp, #4]
 1287 00ba 2B60     		str	r3, [r5]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1288              		.loc 1 267 0
 1289 00bc 2000     		movs	r0, r4
 1290 00be FFF7FEFF 		bl	CyExitCriticalSection
 1291              	.LVL101:
 1292              	.L87:
 269:Generated_Source\PSoC4/CyLib.c **** 
 1293              		.loc 1 269 0
 1294 00c2 03B0     		add	sp, sp, #12
 1295              		@ sp needed
 1296 00c4 30BD     		pop	{r4, r5, pc}
 1297              	.L98:
 1298 00c6 C046     		.align	2
 1299              	.L97:
 1300 00c8 2CFF0B40 		.word	1074528044
 1301 00cc 00000000 		.word	.LANCHOR1
 1302 00d0 34FF0B40 		.word	1074528052
 1303 00d4 08002240 		.word	1075970056
 1304 00d8 00F800C0 		.word	-1073678336
 1305 00dc 40420F00 		.word	1000000
 1306 00e0 0000D43F 		.word	1070858240
 1307 00e4 CDF1FF0F 		.word	268431821
 1308 00e8 30001040 		.word	1074790448
 1309 00ec 00002240 		.word	1075970048
 1310              		.cfi_endproc
 1311              	.LFE3:
 1312              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1313              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1314              		.align	2
 1315              		.global	CySysClkWriteImoFreq
 1316              		.code	16
 1317              		.thumb_func
 1318              		.type	CySysClkWriteImoFreq, %function
 1319              	CySysClkWriteImoFreq:
 1320              	.LFB10:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1321              		.loc 1 624 0
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 24
 1324              		@ frame_needed = 0, uses_anonymous_args = 0
 1325              	.LVL102:
 1326 0000 30B5     		push	{r4, r5, lr}
 1327              		.cfi_def_cfa_offset 12
 1328              		.cfi_offset 4, -12
 1329              		.cfi_offset 5, -8
 1330              		.cfi_offset 14, -4
 1331 0002 87B0     		sub	sp, sp, #28
 1332              		.cfi_def_cfa_offset 40
 1333 0004 0400     		movs	r4, r0
 1334              	.LVL103:
 647:Generated_Source\PSoC4/CyLib.c **** 
 1335              		.loc 1 647 0
 1336 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1337              	.LVL104:
 1338 000a 0500     		movs	r5, r0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 71


 1339              	.LVL105:
 650:Generated_Source\PSoC4/CyLib.c ****             {
 1340              		.loc 1 650 0
 1341 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1342              	.LVL106:
 1343 0010 0028     		cmp	r0, #0
 1344 0012 03D0     		beq	.L102
 1345              	.LVL107:
 653:Generated_Source\PSoC4/CyLib.c ****             }
 1346              		.loc 1 653 0
 1347 0014 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1348              	.LVL108:
 652:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1349              		.loc 1 652 0
 1350 0018 0121     		movs	r1, #1
 1351 001a 00E0     		b	.L100
 1352              	.LVL109:
 1353              	.L102:
 637:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1354              		.loc 1 637 0
 1355 001c 0021     		movs	r1, #0
 1356              	.LVL110:
 1357              	.L100:
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1358              		.loc 1 681 0
 1359 001e 104B     		ldr	r3, .L103
 1360 0020 1B68     		ldr	r3, [r3]
 1361 0022 0093     		str	r3, [sp]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1362              		.loc 1 682 0
 1363 0024 0F4B     		ldr	r3, .L103+4
 1364 0026 1B68     		ldr	r3, [r3]
 1365 0028 0193     		str	r3, [sp, #4]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1366              		.loc 1 683 0
 1367 002a 033C     		subs	r4, r4, #3
 1368              	.LVL111:
 1369 002c 0E4B     		ldr	r3, .L103+8
 1370 002e 1B5D     		ldrb	r3, [r3, r4]
 1371 0030 0293     		str	r3, [sp, #8]
 684:Generated_Source\PSoC4/CyLib.c **** 
 1372              		.loc 1 684 0
 1373 0032 0E4B     		ldr	r3, .L103+12
 1374 0034 1B68     		ldr	r3, [r3]
 1375 0036 0393     		str	r3, [sp, #12]
 686:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1376              		.loc 1 686 0
 1377 0038 04AA     		add	r2, sp, #16
 1378 003a 0D4B     		ldr	r3, .L103+16
 1379 003c 0493     		str	r3, [sp, #16]
 689:Generated_Source\PSoC4/CyLib.c **** 
 1380              		.loc 1 689 0
 1381 003e 6B46     		mov	r3, sp
 1382 0040 0593     		str	r3, [sp, #20]
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1383              		.loc 1 691 0
 1384 0042 0C4B     		ldr	r3, .L103+20
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 72


 1385 0044 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1386              		.loc 1 692 0
 1387 0046 0C48     		ldr	r0, .L103+24
 1388 0048 0C4A     		ldr	r2, .L103+28
 1389 004a 1060     		str	r0, [r2]
 693:Generated_Source\PSoC4/CyLib.c **** 
 1390              		.loc 1 693 0
 1391 004c 1B68     		ldr	r3, [r3]
 810:Generated_Source\PSoC4/CyLib.c ****             {
 1392              		.loc 1 810 0
 1393 004e 0129     		cmp	r1, #1
 1394 0050 01D1     		bne	.L101
 812:Generated_Source\PSoC4/CyLib.c ****             }
 1395              		.loc 1 812 0
 1396 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1397              	.LVL112:
 1398              	.L101:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 1399              		.loc 1 823 0
 1400 0056 2800     		movs	r0, r5
 1401 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1402              	.LVL113:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1403              		.loc 1 824 0
 1404 005c 07B0     		add	sp, sp, #28
 1405              		@ sp needed
 1406              	.LVL114:
 1407              	.LVL115:
 1408 005e 30BD     		pop	{r4, r5, pc}
 1409              	.L104:
 1410              		.align	2
 1411              	.L103:
 1412 0060 08010B40 		.word	1074462984
 1413 0064 00010B40 		.word	1074462976
 1414 0068 00000000 		.word	.LANCHOR1
 1415 006c 30001040 		.word	1074790448
 1416 0070 B6EA0000 		.word	60086
 1417 0074 08001040 		.word	1074790408
 1418 0078 17000080 		.word	-2147483625
 1419 007c 04001040 		.word	1074790404
 1420              		.cfi_endproc
 1421              	.LFE10:
 1422              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1423              		.section	.text.CyDelayUs,"ax",%progbits
 1424              		.align	2
 1425              		.global	CyDelayUs
 1426              		.code	16
 1427              		.thumb_func
 1428              		.type	CyDelayUs, %function
 1429              	CyDelayUs:
 1430              	.LFB32:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 73


2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1431              		.loc 1 2583 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 0, uses_anonymous_args = 0
 1435              	.LVL116:
 1436 0000 10B5     		push	{r4, lr}
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 4, -8
 1439              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1440              		.loc 1 2584 0
 1441 0002 034B     		ldr	r3, .L106
 1442 0004 1B7B     		ldrb	r3, [r3, #12]
 1443 0006 5843     		muls	r0, r3
 1444              	.LVL117:
 1445 0008 FFF7FEFF 		bl	CyDelayCycles
 1446              	.LVL118:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1447              		.loc 1 2585 0
 1448              		@ sp needed
 1449 000c 10BD     		pop	{r4, pc}
 1450              	.L107:
 1451 000e C046     		.align	2
 1452              	.L106:
 1453 0010 00000000 		.word	.LANCHOR0
 1454              		.cfi_endproc
 1455              	.LFE32:
 1456              		.size	CyDelayUs, .-CyDelayUs
 1457              		.section	.text.CySysLvdEnable,"ax",%progbits
 1458              		.align	2
 1459              		.global	CySysLvdEnable
 1460              		.code	16
 1461              		.thumb_func
 1462              		.type	CySysLvdEnable, %function
 1463              	CySysLvdEnable:
 1464              	.LFB11:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1465              		.loc 1 2119 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
 1469              	.LVL119:
 1470 0000 70B5     		push	{r4, r5, r6, lr}
 1471              		.cfi_def_cfa_offset 16
 1472              		.cfi_offset 4, -16
 1473              		.cfi_offset 5, -12
 1474              		.cfi_offset 6, -8
 1475              		.cfi_offset 14, -4
 1476 0002 0300     		movs	r3, r0
2121:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 74


 1477              		.loc 1 2121 0
 1478 0004 0D4C     		ldr	r4, .L109
 1479 0006 2268     		ldr	r2, [r4]
 1480 0008 0225     		movs	r5, #2
 1481 000a AA43     		bics	r2, r5
 1482 000c 2260     		str	r2, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1483              		.loc 1 2124 0
 1484 000e 0C4A     		ldr	r2, .L109+4
 1485 0010 1168     		ldr	r1, [r2]
 1486 0012 1E20     		movs	r0, #30
 1487              	.LVL120:
 1488 0014 8143     		bics	r1, r0
2125:Generated_Source\PSoC4/CyLib.c **** 
 1489              		.loc 1 2125 0
 1490 0016 5B00     		lsls	r3, r3, #1
 1491              	.LVL121:
 1492 0018 1840     		ands	r0, r3
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1493              		.loc 1 2124 0
 1494 001a 0843     		orrs	r0, r1
 1495 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 1496              		.loc 1 2128 0
 1497 001e 1168     		ldr	r1, [r2]
 1498 0020 0123     		movs	r3, #1
 1499 0022 0B43     		orrs	r3, r1
 1500 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1501              		.loc 1 2131 0
 1502 0026 FA20     		movs	r0, #250
 1503 0028 8000     		lsls	r0, r0, #2
 1504 002a FFF7FEFF 		bl	CyDelayUs
 1505              	.LVL122:
2134:Generated_Source\PSoC4/CyLib.c **** 
 1506              		.loc 1 2134 0
 1507 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1508              	.LVL123:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1509              		.loc 1 2137 0
 1510 0032 2368     		ldr	r3, [r4]
 1511 0034 1D43     		orrs	r5, r3
 1512 0036 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1513              		.loc 1 2138 0
 1514              		@ sp needed
 1515 0038 70BD     		pop	{r4, r5, r6, pc}
 1516              	.L110:
 1517 003a C046     		.align	2
 1518              	.L109:
 1519 003c 08000B40 		.word	1074462728
 1520 0040 18000B40 		.word	1074462744
 1521              		.cfi_endproc
 1522              	.LFE11:
 1523              		.size	CySysLvdEnable, .-CySysLvdEnable
 1524              		.global	__aeabi_uidiv
 1525              		.section	.text.CyDelayFreq,"ax",%progbits
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 75


 1526              		.align	2
 1527              		.global	CyDelayFreq
 1528              		.code	16
 1529              		.thumb_func
 1530              		.type	CyDelayFreq, %function
 1531              	CyDelayFreq:
 1532              	.LFB33:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1533              		.loc 1 2597 0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 0, uses_anonymous_args = 0
 1537              	.LVL124:
 1538 0000 70B5     		push	{r4, r5, r6, lr}
 1539              		.cfi_def_cfa_offset 16
 1540              		.cfi_offset 4, -16
 1541              		.cfi_offset 5, -12
 1542              		.cfi_offset 6, -8
 1543              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1544              		.loc 1 2598 0
 1545 0002 0028     		cmp	r0, #0
 1546 0004 02D0     		beq	.L112
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1547              		.loc 1 2600 0
 1548 0006 0C4B     		ldr	r3, .L114
 1549 0008 1861     		str	r0, [r3, #16]
 1550 000a 02E0     		b	.L113
 1551              	.L112:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1552              		.loc 1 2604 0
 1553 000c 0B4A     		ldr	r2, .L114+4
 1554 000e 0A4B     		ldr	r3, .L114
 1555 0010 1A61     		str	r2, [r3, #16]
 1556              	.L113:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1557              		.loc 1 2607 0
 1558 0012 094C     		ldr	r4, .L114
 1559 0014 2569     		ldr	r5, [r4, #16]
 1560 0016 0A4B     		ldr	r3, .L114+8
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 76


 1561 0018 E818     		adds	r0, r5, r3
 1562              	.LVL125:
 1563 001a 0A49     		ldr	r1, .L114+12
 1564 001c FFF7FEFF 		bl	__aeabi_uidiv
 1565              	.LVL126:
 1566 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1567              		.loc 1 2608 0
 1568 0022 094B     		ldr	r3, .L114+16
 1569 0024 E818     		adds	r0, r5, r3
 1570 0026 FA21     		movs	r1, #250
 1571 0028 8900     		lsls	r1, r1, #2
 1572 002a FFF7FEFF 		bl	__aeabi_uidiv
 1573              	.LVL127:
 1574 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1575              		.loc 1 2609 0
 1576 0030 C003     		lsls	r0, r0, #15
 1577 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1578              		.loc 1 2610 0
 1579              		@ sp needed
 1580 0034 70BD     		pop	{r4, r5, r6, pc}
 1581              	.L115:
 1582 0036 C046     		.align	2
 1583              	.L114:
 1584 0038 00000000 		.word	.LANCHOR0
 1585 003c 006CDC02 		.word	48000000
 1586 0040 3F420F00 		.word	999999
 1587 0044 40420F00 		.word	1000000
 1588 0048 E7030000 		.word	999
 1589              		.cfi_endproc
 1590              	.LFE33:
 1591              		.size	CyDelayFreq, .-CyDelayFreq
 1592              		.section	.text.CySysTickStop,"ax",%progbits
 1593              		.align	2
 1594              		.global	CySysTickStop
 1595              		.code	16
 1596              		.thumb_func
 1597              		.type	CySysTickStop, %function
 1598              	CySysTickStop:
 1599              	.LFB37:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 77


2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 78


2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
 1600              		.loc 1 2705 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 0
 1603              		@ frame_needed = 0, uses_anonymous_args = 0
 1604              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1605              		.loc 1 2706 0
 1606 0000 024A     		ldr	r2, .L117
 1607 0002 1368     		ldr	r3, [r2]
 1608 0004 0121     		movs	r1, #1
 1609 0006 8B43     		bics	r3, r1
 1610 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** }
 1611              		.loc 1 2707 0
 1612              		@ sp needed
 1613 000a 7047     		bx	lr
 1614              	.L118:
 1615              		.align	2
 1616              	.L117:
 1617 000c 10E000E0 		.word	-536813552
 1618              		.cfi_endproc
 1619              	.LFE37:
 1620              		.size	CySysTickStop, .-CySysTickStop
 1621              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1622              		.align	2
 1623              		.global	CySysTickEnableInterrupt
 1624              		.code	16
 1625              		.thumb_func
 1626              		.type	CySysTickEnableInterrupt, %function
 1627              	CySysTickEnableInterrupt:
 1628              	.LFB38:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 79


2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
 1629              		.loc 1 2721 0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 0
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
 1633              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1634              		.loc 1 2722 0
 1635 0000 024A     		ldr	r2, .L120
 1636 0002 1168     		ldr	r1, [r2]
 1637 0004 0223     		movs	r3, #2
 1638 0006 0B43     		orrs	r3, r1
 1639 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** }
 1640              		.loc 1 2723 0
 1641              		@ sp needed
 1642 000a 7047     		bx	lr
 1643              	.L121:
 1644              		.align	2
 1645              	.L120:
 1646 000c 10E000E0 		.word	-536813552
 1647              		.cfi_endproc
 1648              	.LFE38:
 1649              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1650              		.section	.text.CySysTickEnable,"ax",%progbits
 1651              		.align	2
 1652              		.global	CySysTickEnable
 1653              		.code	16
 1654              		.thumb_func
 1655              		.type	CySysTickEnable, %function
 1656              	CySysTickEnable:
 1657              	.LFB36:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1658              		.loc 1 2688 0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 1662 0000 10B5     		push	{r4, lr}
 1663              		.cfi_def_cfa_offset 8
 1664              		.cfi_offset 4, -8
 1665              		.cfi_offset 14, -4
2689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1666              		.loc 1 2689 0
 1667 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1668              	.LVL128:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1669              		.loc 1 2690 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 80


 1670 0006 034A     		ldr	r2, .L123
 1671 0008 1168     		ldr	r1, [r2]
 1672 000a 0123     		movs	r3, #1
 1673 000c 0B43     		orrs	r3, r1
 1674 000e 1360     		str	r3, [r2]
2691:Generated_Source\PSoC4/CyLib.c **** 
 1675              		.loc 1 2691 0
 1676              		@ sp needed
 1677 0010 10BD     		pop	{r4, pc}
 1678              	.L124:
 1679 0012 C046     		.align	2
 1680              	.L123:
 1681 0014 10E000E0 		.word	-536813552
 1682              		.cfi_endproc
 1683              	.LFE36:
 1684              		.size	CySysTickEnable, .-CySysTickEnable
 1685              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1686              		.align	2
 1687              		.global	CySysTickDisableInterrupt
 1688              		.code	16
 1689              		.thumb_func
 1690              		.type	CySysTickDisableInterrupt, %function
 1691              	CySysTickDisableInterrupt:
 1692              	.LFB39:
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
 1693              		.loc 1 2737 0
 1694              		.cfi_startproc
 1695              		@ args = 0, pretend = 0, frame = 0
 1696              		@ frame_needed = 0, uses_anonymous_args = 0
 1697              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1698              		.loc 1 2738 0
 1699 0000 024A     		ldr	r2, .L126
 1700 0002 1368     		ldr	r3, [r2]
 1701 0004 0221     		movs	r1, #2
 1702 0006 8B43     		bics	r3, r1
 1703 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** }
 1704              		.loc 1 2739 0
 1705              		@ sp needed
 1706 000a 7047     		bx	lr
 1707              	.L127:
 1708              		.align	2
 1709              	.L126:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 81


 1710 000c 10E000E0 		.word	-536813552
 1711              		.cfi_endproc
 1712              	.LFE39:
 1713              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1714              		.section	.text.CySysTickSetReload,"ax",%progbits
 1715              		.align	2
 1716              		.global	CySysTickSetReload
 1717              		.code	16
 1718              		.thumb_func
 1719              		.type	CySysTickSetReload, %function
 1720              	CySysTickSetReload:
 1721              	.LFB40:
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
 1722              		.loc 1 2754 0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 0
 1725              		@ frame_needed = 0, uses_anonymous_args = 0
 1726              		@ link register save eliminated.
 1727              	.LVL129:
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1728              		.loc 1 2755 0
 1729 0000 0002     		lsls	r0, r0, #8
 1730              	.LVL130:
 1731 0002 000A     		lsrs	r0, r0, #8
 1732 0004 014B     		ldr	r3, .L129
 1733 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** }
 1734              		.loc 1 2756 0
 1735              		@ sp needed
 1736 0008 7047     		bx	lr
 1737              	.L130:
 1738 000a C046     		.align	2
 1739              	.L129:
 1740 000c 14E000E0 		.word	-536813548
 1741              		.cfi_endproc
 1742              	.LFE40:
 1743              		.size	CySysTickSetReload, .-CySysTickSetReload
 1744              		.section	.text.CySysTickGetReload,"ax",%progbits
 1745              		.align	2
 1746              		.global	CySysTickGetReload
 1747              		.code	16
 1748              		.thumb_func
 1749              		.type	CySysTickGetReload, %function
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 82


 1750              	CySysTickGetReload:
 1751              	.LFB41:
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
 1752              		.loc 1 2770 0
 1753              		.cfi_startproc
 1754              		@ args = 0, pretend = 0, frame = 0
 1755              		@ frame_needed = 0, uses_anonymous_args = 0
 1756              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1757              		.loc 1 2771 0
 1758 0000 024B     		ldr	r3, .L132
 1759 0002 1868     		ldr	r0, [r3]
 1760 0004 0002     		lsls	r0, r0, #8
 1761 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** }
 1762              		.loc 1 2772 0
 1763              		@ sp needed
 1764 0008 7047     		bx	lr
 1765              	.L133:
 1766 000a C046     		.align	2
 1767              	.L132:
 1768 000c 14E000E0 		.word	-536813548
 1769              		.cfi_endproc
 1770              	.LFE41:
 1771              		.size	CySysTickGetReload, .-CySysTickGetReload
 1772              		.section	.text.CySysTickGetValue,"ax",%progbits
 1773              		.align	2
 1774              		.global	CySysTickGetValue
 1775              		.code	16
 1776              		.thumb_func
 1777              		.type	CySysTickGetValue, %function
 1778              	CySysTickGetValue:
 1779              	.LFB42:
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 83


2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
 1780              		.loc 1 2786 0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 0
 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 1784              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1785              		.loc 1 2787 0
 1786 0000 024B     		ldr	r3, .L135
 1787 0002 1868     		ldr	r0, [r3]
 1788 0004 0002     		lsls	r0, r0, #8
 1789 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** }
 1790              		.loc 1 2788 0
 1791              		@ sp needed
 1792 0008 7047     		bx	lr
 1793              	.L136:
 1794 000a C046     		.align	2
 1795              	.L135:
 1796 000c 18E000E0 		.word	-536813544
 1797              		.cfi_endproc
 1798              	.LFE42:
 1799              		.size	CySysTickGetValue, .-CySysTickGetValue
 1800              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1801              		.align	2
 1802              		.global	CySysTickSetClockSource
 1803              		.code	16
 1804              		.thumb_func
 1805              		.type	CySysTickSetClockSource, %function
 1806              	CySysTickSetClockSource:
 1807              	.LFB43:
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 84


2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
 1808              		.loc 1 2818 0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 0
 1811              		@ frame_needed = 0, uses_anonymous_args = 0
 1812              		@ link register save eliminated.
 1813              	.LVL131:
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1814              		.loc 1 2819 0
 1815 0000 0128     		cmp	r0, #1
 1816 0002 05D1     		bne	.L138
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1817              		.loc 1 2821 0
 1818 0004 054A     		ldr	r2, .L140
 1819 0006 1168     		ldr	r1, [r2]
 1820 0008 0423     		movs	r3, #4
 1821 000a 0B43     		orrs	r3, r1
 1822 000c 1360     		str	r3, [r2]
 1823 000e 04E0     		b	.L137
 1824              	.L138:
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1825              		.loc 1 2825 0
 1826 0010 024A     		ldr	r2, .L140
 1827 0012 1368     		ldr	r3, [r2]
 1828 0014 0421     		movs	r1, #4
 1829 0016 8B43     		bics	r3, r1
 1830 0018 1360     		str	r3, [r2]
 1831              	.L137:
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
 1832              		.loc 1 2827 0
 1833              		@ sp needed
 1834 001a 7047     		bx	lr
 1835              	.L141:
 1836              		.align	2
 1837              	.L140:
 1838 001c 10E000E0 		.word	-536813552
 1839              		.cfi_endproc
 1840              	.LFE43:
 1841              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1842              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1843              		.align	2
 1844              		.global	CySysTickGetClockSource
 1845              		.code	16
 1846              		.thumb_func
 1847              		.type	CySysTickGetClockSource, %function
 1848              	CySysTickGetClockSource:
 1849              	.LFB44:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 85


2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
 1850              		.loc 1 2843 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1855              		.loc 1 2844 0
 1856 0000 024B     		ldr	r3, .L143
 1857 0002 1868     		ldr	r0, [r3]
 1858 0004 8008     		lsrs	r0, r0, #2
 1859 0006 0123     		movs	r3, #1
 1860 0008 1840     		ands	r0, r3
2845:Generated_Source\PSoC4/CyLib.c ****     }
 1861              		.loc 1 2845 0
 1862              		@ sp needed
 1863 000a 7047     		bx	lr
 1864              	.L144:
 1865              		.align	2
 1866              	.L143:
 1867 000c 10E000E0 		.word	-536813552
 1868              		.cfi_endproc
 1869              	.LFE44:
 1870              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1871              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1872              		.align	2
 1873              		.global	CySysTickGetCountFlag
 1874              		.code	16
 1875              		.thumb_func
 1876              		.type	CySysTickGetCountFlag, %function
 1877              	CySysTickGetCountFlag:
 1878              	.LFB45:
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 86


2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
 1879              		.loc 1 2866 0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 0, uses_anonymous_args = 0
 1883              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1884              		.loc 1 2867 0
 1885 0000 024B     		ldr	r3, .L146
 1886 0002 1868     		ldr	r0, [r3]
 1887 0004 000C     		lsrs	r0, r0, #16
 1888 0006 0123     		movs	r3, #1
 1889 0008 1840     		ands	r0, r3
2868:Generated_Source\PSoC4/CyLib.c **** }
 1890              		.loc 1 2868 0
 1891              		@ sp needed
 1892 000a 7047     		bx	lr
 1893              	.L147:
 1894              		.align	2
 1895              	.L146:
 1896 000c 10E000E0 		.word	-536813552
 1897              		.cfi_endproc
 1898              	.LFE45:
 1899              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1900              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1901              		.align	2
 1902              		.code	16
 1903              		.thumb_func
 1904              		.type	CySysTickServiceCallbacks, %function
 1905              	CySysTickServiceCallbacks:
 1906              	.LFB49:
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2881:Generated_Source\PSoC4/CyLib.c **** }
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 87


2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 88


2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 1907              		.loc 1 2951 0
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 0
 1910              		@ frame_needed = 0, uses_anonymous_args = 0
 1911 0000 10B5     		push	{r4, lr}
 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 4, -8
 1914              		.cfi_offset 14, -4
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1915              		.loc 1 2955 0
 1916 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1917              	.LVL132:
 1918 0006 0128     		cmp	r0, #1
 1919 0008 0BD1     		bne	.L148
 1920 000a 07E0     		b	.L153
 1921              	.LVL133:
 1922              	.L152:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1923              		.loc 1 2959 0
 1924 000c A300     		lsls	r3, r4, #2
 1925 000e 054A     		ldr	r2, .L154
 1926 0010 9B58     		ldr	r3, [r3, r2]
 1927 0012 002B     		cmp	r3, #0
 1928 0014 00D0     		beq	.L151
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1929              		.loc 1 2961 0
 1930 0016 9847     		blx	r3
 1931              	.LVL134:
 1932              	.L151:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 1933              		.loc 1 2957 0 discriminator 2
 1934 0018 0134     		adds	r4, r4, #1
 1935              	.LVL135:
 1936 001a 00E0     		b	.L149
 1937              	.LVL136:
 1938              	.L153:
 1939 001c 0024     		movs	r4, #0
 1940              	.L149:
 1941              	.LVL137:
2957:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 89


 1942              		.loc 1 2957 0 is_stmt 0 discriminator 1
 1943 001e 042C     		cmp	r4, #4
 1944 0020 F4D9     		bls	.L152
 1945              	.LVL138:
 1946              	.L148:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 1947              		.loc 1 2965 0 is_stmt 1
 1948              		@ sp needed
 1949 0022 10BD     		pop	{r4, pc}
 1950              	.L155:
 1951              		.align	2
 1952              	.L154:
 1953 0024 00000000 		.word	.LANCHOR2
 1954              		.cfi_endproc
 1955              	.LFE49:
 1956              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1957              		.section	.text.CySysTickClear,"ax",%progbits
 1958              		.align	2
 1959              		.global	CySysTickClear
 1960              		.code	16
 1961              		.thumb_func
 1962              		.type	CySysTickClear, %function
 1963              	CySysTickClear:
 1964              	.LFB46:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1965              		.loc 1 2879 0
 1966              		.cfi_startproc
 1967              		@ args = 0, pretend = 0, frame = 0
 1968              		@ frame_needed = 0, uses_anonymous_args = 0
 1969              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 1970              		.loc 1 2880 0
 1971 0000 0022     		movs	r2, #0
 1972 0002 014B     		ldr	r3, .L157
 1973 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
 1974              		.loc 1 2881 0
 1975              		@ sp needed
 1976 0006 7047     		bx	lr
 1977              	.L158:
 1978              		.align	2
 1979              	.L157:
 1980 0008 18E000E0 		.word	-536813544
 1981              		.cfi_endproc
 1982              	.LFE46:
 1983              		.size	CySysTickClear, .-CySysTickClear
 1984              		.section	.text.CySysTickInit,"ax",%progbits
 1985              		.align	2
 1986              		.global	CySysTickInit
 1987              		.code	16
 1988              		.thumb_func
 1989              		.type	CySysTickInit, %function
 1990              	CySysTickInit:
 1991              	.LFB35:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 90


2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1992              		.loc 1 2658 0
 1993              		.cfi_startproc
 1994              		@ args = 0, pretend = 0, frame = 0
 1995              		@ frame_needed = 0, uses_anonymous_args = 0
 1996 0000 10B5     		push	{r4, lr}
 1997              		.cfi_def_cfa_offset 8
 1998              		.cfi_offset 4, -8
 1999              		.cfi_offset 14, -4
 2000              	.LVL139:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2001              		.loc 1 2661 0
 2002 0002 0023     		movs	r3, #0
 2003 0004 04E0     		b	.L160
 2004              	.LVL140:
 2005              	.L161:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 2006              		.loc 1 2663 0 discriminator 3
 2007 0006 9900     		lsls	r1, r3, #2
 2008 0008 0020     		movs	r0, #0
 2009 000a 0B4A     		ldr	r2, .L162
 2010 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2011              		.loc 1 2661 0 discriminator 3
 2012 000e 0133     		adds	r3, r3, #1
 2013              	.LVL141:
 2014              	.L160:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2015              		.loc 1 2661 0 is_stmt 0 discriminator 1
 2016 0010 042B     		cmp	r3, #4
 2017 0012 F8D9     		bls	.L161
2666:Generated_Source\PSoC4/CyLib.c **** 
 2018              		.loc 1 2666 0 is_stmt 1
 2019 0014 0949     		ldr	r1, .L162+4
 2020 0016 0F20     		movs	r0, #15
 2021 0018 FFF7FEFF 		bl	CyIntSetSysVector
 2022              	.LVL142:
2669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 2023              		.loc 1 2669 0
 2024 001c 0120     		movs	r0, #1
 2025 001e FFF7FEFF 		bl	CySysTickSetClockSource
 2026              	.LVL143:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2027              		.loc 1 2672 0
 2028 0022 074B     		ldr	r3, .L162+8
 2029 0024 1869     		ldr	r0, [r3, #16]
 2030 0026 FA21     		movs	r1, #250
 2031 0028 8900     		lsls	r1, r1, #2
 2032 002a FFF7FEFF 		bl	__aeabi_uidiv
 2033              	.LVL144:
 2034 002e FFF7FEFF 		bl	CySysTickSetReload
 2035              	.LVL145:
2673:Generated_Source\PSoC4/CyLib.c **** }
 2036              		.loc 1 2673 0
 2037 0032 FFF7FEFF 		bl	CySysTickClear
 2038              	.LVL146:
2674:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 91


 2039              		.loc 1 2674 0
 2040              		@ sp needed
 2041 0036 10BD     		pop	{r4, pc}
 2042              	.L163:
 2043              		.align	2
 2044              	.L162:
 2045 0038 00000000 		.word	.LANCHOR2
 2046 003c 00000000 		.word	CySysTickServiceCallbacks
 2047 0040 00000000 		.word	.LANCHOR0
 2048              		.cfi_endproc
 2049              	.LFE35:
 2050              		.size	CySysTickInit, .-CySysTickInit
 2051              		.section	.text.CySysTickStart,"ax",%progbits
 2052              		.align	2
 2053              		.global	CySysTickStart
 2054              		.code	16
 2055              		.thumb_func
 2056              		.type	CySysTickStart, %function
 2057              	CySysTickStart:
 2058              	.LFB34:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2059              		.loc 1 2629 0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 0
 2062              		@ frame_needed = 0, uses_anonymous_args = 0
 2063 0000 10B5     		push	{r4, lr}
 2064              		.cfi_def_cfa_offset 8
 2065              		.cfi_offset 4, -8
 2066              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 2067              		.loc 1 2630 0
 2068 0002 064B     		ldr	r3, .L166
 2069 0004 5B69     		ldr	r3, [r3, #20]
 2070 0006 002B     		cmp	r3, #0
 2071 0008 04D1     		bne	.L165
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2072              		.loc 1 2632 0
 2073 000a FFF7FEFF 		bl	CySysTickInit
 2074              	.LVL147:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 2075              		.loc 1 2633 0
 2076 000e 0122     		movs	r2, #1
 2077 0010 024B     		ldr	r3, .L166
 2078 0012 5A61     		str	r2, [r3, #20]
 2079              	.L165:
2636:Generated_Source\PSoC4/CyLib.c **** }
 2080              		.loc 1 2636 0
 2081 0014 FFF7FEFF 		bl	CySysTickEnable
 2082              	.LVL148:
2637:Generated_Source\PSoC4/CyLib.c **** 
 2083              		.loc 1 2637 0
 2084              		@ sp needed
 2085 0018 10BD     		pop	{r4, pc}
 2086              	.L167:
 2087 001a C046     		.align	2
 2088              	.L166:
 2089 001c 00000000 		.word	.LANCHOR2
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 92


 2090              		.cfi_endproc
 2091              	.LFE34:
 2092              		.size	CySysTickStart, .-CySysTickStart
 2093              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2094              		.align	2
 2095              		.global	CySysTickSetCallback
 2096              		.code	16
 2097              		.thumb_func
 2098              		.type	CySysTickSetCallback, %function
 2099              	CySysTickSetCallback:
 2100              	.LFB47:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2101              		.loc 1 2914 0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 0, uses_anonymous_args = 0
 2105              		@ link register save eliminated.
 2106              	.LVL149:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2107              		.loc 1 2917 0
 2108 0000 024A     		ldr	r2, .L169
 2109 0002 8300     		lsls	r3, r0, #2
 2110 0004 9858     		ldr	r0, [r3, r2]
 2111              	.LVL150:
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2112              		.loc 1 2918 0
 2113 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 2114              		.loc 1 2920 0
 2115              		@ sp needed
 2116 0008 7047     		bx	lr
 2117              	.L170:
 2118 000a C046     		.align	2
 2119              	.L169:
 2120 000c 00000000 		.word	.LANCHOR2
 2121              		.cfi_endproc
 2122              	.LFE47:
 2123              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2124              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2125              		.align	2
 2126              		.global	CySysTickGetCallback
 2127              		.code	16
 2128              		.thumb_func
 2129              		.type	CySysTickGetCallback, %function
 2130              	CySysTickGetCallback:
 2131              	.LFB48:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2132              		.loc 1 2938 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
 2137              	.LVL151:
2939:Generated_Source\PSoC4/CyLib.c **** }
 2138              		.loc 1 2939 0
 2139 0000 8000     		lsls	r0, r0, #2
 2140              	.LVL152:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 93


 2141 0002 014B     		ldr	r3, .L172
 2142 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 2143              		.loc 1 2940 0
 2144              		@ sp needed
 2145 0006 7047     		bx	lr
 2146              	.L173:
 2147              		.align	2
 2148              	.L172:
 2149 0008 00000000 		.word	.LANCHOR2
 2150              		.cfi_endproc
 2151              	.LFE48:
 2152              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2153              		.section	.text.CyGetUniqueId,"ax",%progbits
 2154              		.align	2
 2155              		.global	CyGetUniqueId
 2156              		.code	16
 2157              		.thumb_func
 2158              		.type	CyGetUniqueId, %function
 2159              	CyGetUniqueId:
 2160              	.LFB50:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2161              		.loc 1 2983 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 0
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165              		@ link register save eliminated.
 2166              	.LVL153:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2167              		.loc 1 2985 0
 2168 0000 134B     		ldr	r3, .L175
 2169 0002 1B78     		ldrb	r3, [r3]
 2170 0004 DAB2     		uxtb	r2, r3
 2171 0006 0260     		str	r2, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2172              		.loc 1 2986 0
 2173 0008 124B     		ldr	r3, .L175+4
 2174 000a 1B78     		ldrb	r3, [r3]
 2175 000c 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 94


 2176 000e 1343     		orrs	r3, r2
 2177 0010 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2178              		.loc 1 2987 0
 2179 0012 114A     		ldr	r2, .L175+8
 2180 0014 1278     		ldrb	r2, [r2]
 2181 0016 1204     		lsls	r2, r2, #16
 2182 0018 1343     		orrs	r3, r2
 2183 001a 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2184              		.loc 1 2988 0
 2185 001c 0F4A     		ldr	r2, .L175+12
 2186 001e 1278     		ldrb	r2, [r2]
 2187 0020 1206     		lsls	r2, r2, #24
 2188 0022 1343     		orrs	r3, r2
 2189 0024 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2190              		.loc 1 2990 0
 2191 0026 0E4B     		ldr	r3, .L175+16
 2192 0028 1B78     		ldrb	r3, [r3]
 2193 002a DAB2     		uxtb	r2, r3
 2194 002c 4260     		str	r2, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2195              		.loc 1 2991 0
 2196 002e 0D4B     		ldr	r3, .L175+20
 2197 0030 1B78     		ldrb	r3, [r3]
 2198 0032 1B02     		lsls	r3, r3, #8
 2199 0034 1343     		orrs	r3, r2
 2200 0036 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2201              		.loc 1 2992 0
 2202 0038 0B4A     		ldr	r2, .L175+24
 2203 003a 1278     		ldrb	r2, [r2]
 2204 003c 1204     		lsls	r2, r2, #16
 2205 003e 1343     		orrs	r3, r2
 2206 0040 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2207              		.loc 1 2993 0
 2208 0042 0A4A     		ldr	r2, .L175+28
 2209 0044 1278     		ldrb	r2, [r2]
 2210 0046 1206     		lsls	r2, r2, #24
 2211 0048 1343     		orrs	r3, r2
 2212 004a 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2213              		.loc 1 3005 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 95


 2214              		@ sp needed
 2215 004c 7047     		bx	lr
 2216              	.L176:
 2217 004e C046     		.align	2
 2218              	.L175:
 2219 0050 78F1FF0F 		.word	268431736
 2220 0054 79F1FF0F 		.word	268431737
 2221 0058 7AF1FF0F 		.word	268431738
 2222 005c 7BF1FF0F 		.word	268431739
 2223 0060 7CF1FF0F 		.word	268431740
 2224 0064 7DF1FF0F 		.word	268431741
 2225 0068 7EF1FF0F 		.word	268431742
 2226 006c 7FF1FF0F 		.word	268431743
 2227              		.cfi_endproc
 2228              	.LFE50:
 2229              		.size	CyGetUniqueId, .-CyGetUniqueId
 2230              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2231              		.align	2
 2232              		.global	CySysSetRamAccessArbPriority
 2233              		.code	16
 2234              		.thumb_func
 2235              		.type	CySysSetRamAccessArbPriority, %function
 2236              	CySysSetRamAccessArbPriority:
 2237              	.LFB51:
3006:Generated_Source\PSoC4/CyLib.c **** 
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3012:Generated_Source\PSoC4/CyLib.c ****     *
3013:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3014:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3015:Generated_Source\PSoC4/CyLib.c ****     *  details.
3016:Generated_Source\PSoC4/CyLib.c ****     *
3017:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3018:Generated_Source\PSoC4/CyLib.c ****     *
3019:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3020:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3024:Generated_Source\PSoC4/CyLib.c ****     *
3025:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3027:Generated_Source\PSoC4/CyLib.c ****     {
 2238              		.loc 1 3027 0
 2239              		.cfi_startproc
 2240              		@ args = 0, pretend = 0, frame = 0
 2241              		@ frame_needed = 0, uses_anonymous_args = 0
 2242              		@ link register save eliminated.
 2243              	.LVL154:
3028:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3029:Generated_Source\PSoC4/CyLib.c **** 
3030:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2244              		.loc 1 3030 0
 2245 0000 0549     		ldr	r1, .L178
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 96


 2246 0002 0A68     		ldr	r2, [r1]
 2247 0004 054B     		ldr	r3, .L178+4
 2248 0006 1A40     		ands	r2, r3
 2249              	.LVL155:
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2250              		.loc 1 3031 0
 2251 0008 4004     		lsls	r0, r0, #17
 2252              	.LVL156:
 2253 000a C023     		movs	r3, #192
 2254 000c DB02     		lsls	r3, r3, #11
 2255 000e 1840     		ands	r0, r3
 2256 0010 1043     		orrs	r0, r2
 2257              	.LVL157:
3032:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2258              		.loc 1 3032 0
 2259 0012 0860     		str	r0, [r1]
3033:Generated_Source\PSoC4/CyLib.c ****     }
 2260              		.loc 1 3033 0
 2261              		@ sp needed
 2262 0014 7047     		bx	lr
 2263              	.L179:
 2264 0016 C046     		.align	2
 2265              	.L178:
 2266 0018 38001040 		.word	1074790456
 2267 001c FFFFF9FF 		.word	-393217
 2268              		.cfi_endproc
 2269              	.LFE51:
 2270              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2271              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2272              		.align	2
 2273              		.global	CySysSetFlashAccessArbPriority
 2274              		.code	16
 2275              		.thumb_func
 2276              		.type	CySysSetFlashAccessArbPriority, %function
 2277              	CySysSetFlashAccessArbPriority:
 2278              	.LFB52:
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3037:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3038:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3039:Generated_Source\PSoC4/CyLib.c ****     *
3040:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3041:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3042:Generated_Source\PSoC4/CyLib.c ****     *  details.
3043:Generated_Source\PSoC4/CyLib.c ****     *
3044:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3045:Generated_Source\PSoC4/CyLib.c ****     *
3046:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3047:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3051:Generated_Source\PSoC4/CyLib.c ****     *
3052:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3053:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3054:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 97


 2279              		.loc 1 3054 0
 2280              		.cfi_startproc
 2281              		@ args = 0, pretend = 0, frame = 0
 2282              		@ frame_needed = 0, uses_anonymous_args = 0
 2283              		@ link register save eliminated.
 2284              	.LVL158:
3055:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3056:Generated_Source\PSoC4/CyLib.c **** 
3057:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2285              		.loc 1 3057 0
 2286 0000 0549     		ldr	r1, .L181
 2287 0002 0A68     		ldr	r2, [r1]
 2288 0004 054B     		ldr	r3, .L181+4
 2289 0006 1A40     		ands	r2, r3
 2290              	.LVL159:
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2291              		.loc 1 3058 0
 2292 0008 4004     		lsls	r0, r0, #17
 2293              	.LVL160:
 2294 000a C023     		movs	r3, #192
 2295 000c DB02     		lsls	r3, r3, #11
 2296 000e 1840     		ands	r0, r3
 2297 0010 1043     		orrs	r0, r2
 2298              	.LVL161:
3059:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2299              		.loc 1 3059 0
 2300 0012 0860     		str	r0, [r1]
3060:Generated_Source\PSoC4/CyLib.c ****     }
 2301              		.loc 1 3060 0
 2302              		@ sp needed
 2303 0014 7047     		bx	lr
 2304              	.L182:
 2305 0016 C046     		.align	2
 2306              	.L181:
 2307 0018 30001040 		.word	1074790448
 2308 001c FFFFF9FF 		.word	-393217
 2309              		.cfi_endproc
 2310              	.LFE52:
 2311              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2312              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2313              		.align	2
 2314              		.global	CySysSetDmacAccessArbPriority
 2315              		.code	16
 2316              		.thumb_func
 2317              		.type	CySysSetDmacAccessArbPriority, %function
 2318              	CySysSetDmacAccessArbPriority:
 2319              	.LFB53:
3061:Generated_Source\PSoC4/CyLib.c **** 
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3064:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3065:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3066:Generated_Source\PSoC4/CyLib.c ****     *
3067:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3068:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3069:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3070:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 98


3071:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3072:Generated_Source\PSoC4/CyLib.c ****     *
3073:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3074:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3078:Generated_Source\PSoC4/CyLib.c ****     *
3079:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3080:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3081:Generated_Source\PSoC4/CyLib.c ****     {
 2320              		.loc 1 3081 0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324              		@ link register save eliminated.
 2325              	.LVL162:
3082:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3083:Generated_Source\PSoC4/CyLib.c **** 
3084:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2326              		.loc 1 3084 0
 2327 0000 0549     		ldr	r1, .L184
 2328 0002 0A68     		ldr	r2, [r1]
 2329 0004 054B     		ldr	r3, .L184+4
 2330 0006 1A40     		ands	r2, r3
 2331              	.LVL163:
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2332              		.loc 1 3085 0
 2333 0008 4004     		lsls	r0, r0, #17
 2334              	.LVL164:
 2335 000a C023     		movs	r3, #192
 2336 000c DB02     		lsls	r3, r3, #11
 2337 000e 1840     		ands	r0, r3
 2338 0010 1043     		orrs	r0, r2
 2339              	.LVL165:
3086:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2340              		.loc 1 3086 0
 2341 0012 0860     		str	r0, [r1]
3087:Generated_Source\PSoC4/CyLib.c ****     }
 2342              		.loc 1 3087 0
 2343              		@ sp needed
 2344 0014 7047     		bx	lr
 2345              	.L185:
 2346 0016 C046     		.align	2
 2347              	.L184:
 2348 0018 3C001040 		.word	1074790460
 2349 001c FFFFF9FF 		.word	-393217
 2350              		.cfi_endproc
 2351              	.LFE53:
 2352              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2353              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2354              		.align	2
 2355              		.global	CySysSetPeripheralAccessArbPriority
 2356              		.code	16
 2357              		.thumb_func
 2358              		.type	CySysSetPeripheralAccessArbPriority, %function
 2359              	CySysSetPeripheralAccessArbPriority:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 99


 2360              	.LFB54:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3092:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c ****     *
3094:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3095:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3096:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3097:Generated_Source\PSoC4/CyLib.c ****     *
3098:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3099:Generated_Source\PSoC4/CyLib.c ****     *
3100:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3101:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3102:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3103:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3107:Generated_Source\PSoC4/CyLib.c ****     *
3108:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3109:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3110:Generated_Source\PSoC4/CyLib.c ****     {
 2361              		.loc 1 3110 0
 2362              		.cfi_startproc
 2363              		@ args = 0, pretend = 0, frame = 0
 2364              		@ frame_needed = 0, uses_anonymous_args = 0
 2365              	.LVL166:
 2366 0000 10B5     		push	{r4, lr}
 2367              		.cfi_def_cfa_offset 8
 2368              		.cfi_offset 4, -8
 2369              		.cfi_offset 14, -4
3111:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3112:Generated_Source\PSoC4/CyLib.c **** 
3113:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2370              		.loc 1 3113 0
 2371 0002 0028     		cmp	r0, #0
 2372 0004 0AD1     		bne	.L187
3114:Generated_Source\PSoC4/CyLib.c ****         {
3115:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2373              		.loc 1 3115 0
 2374 0006 1448     		ldr	r0, .L191
 2375              	.LVL167:
 2376 0008 0268     		ldr	r2, [r0]
 2377 000a 144B     		ldr	r3, .L191+4
 2378 000c 1A40     		ands	r2, r3
 2379              	.LVL168:
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2380              		.loc 1 3116 0
 2381 000e 4904     		lsls	r1, r1, #17
 2382              	.LVL169:
 2383 0010 C023     		movs	r3, #192
 2384 0012 DB02     		lsls	r3, r3, #11
 2385 0014 1940     		ands	r1, r3
 2386 0016 1143     		orrs	r1, r2
 2387              	.LVL170:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 100


3117:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2388              		.loc 1 3117 0
 2389 0018 0160     		str	r1, [r0]
 2390 001a 1CE0     		b	.L186
 2391              	.LVL171:
 2392              	.L187:
3118:Generated_Source\PSoC4/CyLib.c ****         } else
3119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3120:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2393              		.loc 1 3120 0
 2394 001c 0128     		cmp	r0, #1
 2395 001e 0AD1     		bne	.L189
3121:Generated_Source\PSoC4/CyLib.c ****         {
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2396              		.loc 1 3122 0
 2397 0020 0F48     		ldr	r0, .L191+8
 2398              	.LVL172:
 2399 0022 0268     		ldr	r2, [r0]
 2400 0024 0D4B     		ldr	r3, .L191+4
 2401 0026 1A40     		ands	r2, r3
 2402              	.LVL173:
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2403              		.loc 1 3123 0
 2404 0028 4904     		lsls	r1, r1, #17
 2405              	.LVL174:
 2406 002a C023     		movs	r3, #192
 2407 002c DB02     		lsls	r3, r3, #11
 2408 002e 1940     		ands	r1, r3
 2409 0030 1143     		orrs	r1, r2
 2410              	.LVL175:
3124:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2411              		.loc 1 3124 0
 2412 0032 0160     		str	r1, [r0]
 2413 0034 0FE0     		b	.L186
 2414              	.LVL176:
 2415              	.L189:
3125:Generated_Source\PSoC4/CyLib.c ****         } else
3126:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3127:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3128:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2416              		.loc 1 3128 0
 2417 0036 0228     		cmp	r0, #2
 2418 0038 0AD1     		bne	.L190
3129:Generated_Source\PSoC4/CyLib.c ****         {
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2419              		.loc 1 3130 0
 2420 003a 0A48     		ldr	r0, .L191+12
 2421              	.LVL177:
 2422 003c 0268     		ldr	r2, [r0]
 2423 003e 074B     		ldr	r3, .L191+4
 2424 0040 1A40     		ands	r2, r3
 2425              	.LVL178:
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2426              		.loc 1 3131 0
 2427 0042 4904     		lsls	r1, r1, #17
 2428              	.LVL179:
 2429 0044 C023     		movs	r3, #192
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 101


 2430 0046 DB02     		lsls	r3, r3, #11
 2431 0048 1940     		ands	r1, r3
 2432 004a 1143     		orrs	r1, r2
 2433              	.LVL180:
3132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2434              		.loc 1 3132 0
 2435 004c 0160     		str	r1, [r0]
 2436 004e 02E0     		b	.L186
 2437              	.LVL181:
 2438              	.L190:
3133:Generated_Source\PSoC4/CyLib.c ****         } else
3134:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3135:Generated_Source\PSoC4/CyLib.c ****         {
3136:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3137:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2439              		.loc 1 3137 0 discriminator 1
 2440 0050 0020     		movs	r0, #0
 2441              	.LVL182:
 2442 0052 FFF7FEFF 		bl	CyHalt
 2443              	.LVL183:
 2444              	.L186:
3138:Generated_Source\PSoC4/CyLib.c ****         }
3139:Generated_Source\PSoC4/CyLib.c ****     }
 2445              		.loc 1 3139 0
 2446              		@ sp needed
 2447 0056 10BD     		pop	{r4, pc}
 2448              	.L192:
 2449              		.align	2
 2450              	.L191:
 2451 0058 00011040 		.word	1074790656
 2452 005c FFFFF9FF 		.word	-393217
 2453 0060 04011040 		.word	1074790660
 2454 0064 08011040 		.word	1074790664
 2455              		.cfi_endproc
 2456              	.LFE54:
 2457              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2458              		.global	CySysClkPumpConfig
 2459              		.global	cyImoFreqMhz2DpllOffset
 2460              		.global	cyImoFreqMhz2Reg
 2461              		.global	CySysTickInitVar
 2462              		.global	cydelay32kMs
 2463              		.global	cydelayFreqMhz
 2464              		.global	cydelayFreqKhz
 2465              		.global	cydelayFreqHz
 2466              		.section	.rodata
 2467              		.align	2
 2468              		.set	.LANCHOR1,. + 0
 2469              		.type	cyImoFreqMhz2Reg, %object
 2470              		.size	cyImoFreqMhz2Reg, 46
 2471              	cyImoFreqMhz2Reg:
 2472 0000 03       		.byte	3
 2473 0001 04       		.byte	4
 2474 0002 05       		.byte	5
 2475 0003 06       		.byte	6
 2476 0004 07       		.byte	7
 2477 0005 08       		.byte	8
 2478 0006 09       		.byte	9
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 102


 2479 0007 0A       		.byte	10
 2480 0008 0B       		.byte	11
 2481 0009 0C       		.byte	12
 2482 000a 0E       		.byte	14
 2483 000b 0F       		.byte	15
 2484 000c 10       		.byte	16
 2485 000d 11       		.byte	17
 2486 000e 12       		.byte	18
 2487 000f 13       		.byte	19
 2488 0010 14       		.byte	20
 2489 0011 15       		.byte	21
 2490 0012 16       		.byte	22
 2491 0013 17       		.byte	23
 2492 0014 18       		.byte	24
 2493 0015 19       		.byte	25
 2494 0016 1B       		.byte	27
 2495 0017 1C       		.byte	28
 2496 0018 1D       		.byte	29
 2497 0019 1E       		.byte	30
 2498 001a 1F       		.byte	31
 2499 001b 20       		.byte	32
 2500 001c 21       		.byte	33
 2501 001d 22       		.byte	34
 2502 001e 23       		.byte	35
 2503 001f 25       		.byte	37
 2504 0020 26       		.byte	38
 2505 0021 27       		.byte	39
 2506 0022 28       		.byte	40
 2507 0023 29       		.byte	41
 2508 0024 2A       		.byte	42
 2509 0025 2B       		.byte	43
 2510 0026 2E       		.byte	46
 2511 0027 2F       		.byte	47
 2512 0028 30       		.byte	48
 2513 0029 31       		.byte	49
 2514 002a 32       		.byte	50
 2515 002b 33       		.byte	51
 2516 002c 34       		.byte	52
 2517 002d 35       		.byte	53
 2518 002e 0000     		.space	2
 2519              		.type	cyImoFreqMhz2DpllOffset, %object
 2520              		.size	cyImoFreqMhz2DpllOffset, 23
 2521              	cyImoFreqMhz2DpllOffset:
 2522 0030 EE       		.byte	-18
 2523 0031 DB       		.byte	-37
 2524 0032 C9       		.byte	-55
 2525 0033 B9       		.byte	-71
 2526 0034 AA       		.byte	-86
 2527 0035 9B       		.byte	-101
 2528 0036 8E       		.byte	-114
 2529 0037 82       		.byte	-126
 2530 0038 76       		.byte	118
 2531 0039 6B       		.byte	107
 2532 003a 60       		.byte	96
 2533 003b 56       		.byte	86
 2534 003c 4D       		.byte	77
 2535 003d 44       		.byte	68
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 103


 2536 003e 3B       		.byte	59
 2537 003f 33       		.byte	51
 2538 0040 2C       		.byte	44
 2539 0041 24       		.byte	36
 2540 0042 1D       		.byte	29
 2541 0043 17       		.byte	23
 2542 0044 10       		.byte	16
 2543 0045 0A       		.byte	10
 2544 0046 04       		.byte	4
 2545              		.data
 2546              		.align	2
 2547              		.set	.LANCHOR0,. + 0
 2548              		.type	CySysClkPumpConfig, %object
 2549              		.size	CySysClkPumpConfig, 4
 2550              	CySysClkPumpConfig:
 2551 0000 01000000 		.word	1
 2552              		.type	cydelay32kMs, %object
 2553              		.size	cydelay32kMs, 4
 2554              	cydelay32kMs:
 2555 0004 0000C05D 		.word	1572864000
 2556              		.type	cydelayFreqKhz, %object
 2557              		.size	cydelayFreqKhz, 4
 2558              	cydelayFreqKhz:
 2559 0008 80BB0000 		.word	48000
 2560              		.type	cydelayFreqMhz, %object
 2561              		.size	cydelayFreqMhz, 1
 2562              	cydelayFreqMhz:
 2563 000c 30       		.byte	48
 2564 000d 000000   		.space	3
 2565              		.type	cydelayFreqHz, %object
 2566              		.size	cydelayFreqHz, 4
 2567              	cydelayFreqHz:
 2568 0010 006CDC02 		.word	48000000
 2569              		.bss
 2570              		.align	2
 2571              		.set	.LANCHOR2,. + 0
 2572              		.type	CySysTickCallbacks, %object
 2573              		.size	CySysTickCallbacks, 20
 2574              	CySysTickCallbacks:
 2575 0000 00000000 		.space	20
 2575      00000000 
 2575      00000000 
 2575      00000000 
 2575      00000000 
 2576              		.type	CySysTickInitVar, %object
 2577              		.size	CySysTickInitVar, 4
 2578              	CySysTickInitVar:
 2579 0014 00000000 		.space	4
 2580              		.text
 2581              	.Letext0:
 2582              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2583              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2584              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2585              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2586              		.section	.debug_info,"",%progbits
 2587              	.Ldebug_info0:
 2588 0000 2B0D0000 		.4byte	0xd2b
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 104


 2589 0004 0400     		.2byte	0x4
 2590 0006 00000000 		.4byte	.Ldebug_abbrev0
 2591 000a 04       		.byte	0x4
 2592 000b 01       		.uleb128 0x1
 2593 000c 75000000 		.4byte	.LASF121
 2594 0010 0C       		.byte	0xc
 2595 0011 73070000 		.4byte	.LASF122
 2596 0015 D3070000 		.4byte	.LASF123
 2597 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2598 001d 00000000 		.4byte	0
 2599 0021 00000000 		.4byte	.Ldebug_line0
 2600 0025 02       		.uleb128 0x2
 2601 0026 01       		.byte	0x1
 2602 0027 06       		.byte	0x6
 2603 0028 87010000 		.4byte	.LASF0
 2604 002c 02       		.uleb128 0x2
 2605 002d 01       		.byte	0x1
 2606 002e 08       		.byte	0x8
 2607 002f C4050000 		.4byte	.LASF1
 2608 0033 02       		.uleb128 0x2
 2609 0034 02       		.byte	0x2
 2610 0035 05       		.byte	0x5
 2611 0036 D2050000 		.4byte	.LASF2
 2612 003a 02       		.uleb128 0x2
 2613 003b 02       		.byte	0x2
 2614 003c 07       		.byte	0x7
 2615 003d 94030000 		.4byte	.LASF3
 2616 0041 02       		.uleb128 0x2
 2617 0042 04       		.byte	0x4
 2618 0043 05       		.byte	0x5
 2619 0044 EC010000 		.4byte	.LASF4
 2620 0048 02       		.uleb128 0x2
 2621 0049 04       		.byte	0x4
 2622 004a 07       		.byte	0x7
 2623 004b 07030000 		.4byte	.LASF5
 2624 004f 02       		.uleb128 0x2
 2625 0050 08       		.byte	0x8
 2626 0051 05       		.byte	0x5
 2627 0052 79010000 		.4byte	.LASF6
 2628 0056 02       		.uleb128 0x2
 2629 0057 08       		.byte	0x8
 2630 0058 07       		.byte	0x7
 2631 0059 03010000 		.4byte	.LASF7
 2632 005d 03       		.uleb128 0x3
 2633 005e 04       		.byte	0x4
 2634 005f 05       		.byte	0x5
 2635 0060 696E7400 		.ascii	"int\000"
 2636 0064 02       		.uleb128 0x2
 2637 0065 04       		.byte	0x4
 2638 0066 07       		.byte	0x7
 2639 0067 EB020000 		.4byte	.LASF8
 2640 006b 04       		.uleb128 0x4
 2641 006c 0C020000 		.4byte	.LASF9
 2642 0070 02       		.byte	0x2
 2643 0071 D201     		.2byte	0x1d2
 2644 0073 2C000000 		.4byte	0x2c
 2645 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 105


 2646 0078 0F000000 		.4byte	.LASF10
 2647 007c 02       		.byte	0x2
 2648 007d D301     		.2byte	0x1d3
 2649 007f 3A000000 		.4byte	0x3a
 2650 0083 04       		.uleb128 0x4
 2651 0084 4C020000 		.4byte	.LASF11
 2652 0088 02       		.byte	0x2
 2653 0089 D401     		.2byte	0x1d4
 2654 008b 48000000 		.4byte	0x48
 2655 008f 02       		.uleb128 0x2
 2656 0090 04       		.byte	0x4
 2657 0091 04       		.byte	0x4
 2658 0092 2A050000 		.4byte	.LASF12
 2659 0096 02       		.uleb128 0x2
 2660 0097 08       		.byte	0x8
 2661 0098 04       		.byte	0x4
 2662 0099 28020000 		.4byte	.LASF13
 2663 009d 02       		.uleb128 0x2
 2664 009e 01       		.byte	0x1
 2665 009f 08       		.byte	0x8
 2666 00a0 15060000 		.4byte	.LASF14
 2667 00a4 04       		.uleb128 0x4
 2668 00a5 91050000 		.4byte	.LASF15
 2669 00a9 02       		.byte	0x2
 2670 00aa 7C02     		.2byte	0x27c
 2671 00ac B0000000 		.4byte	0xb0
 2672 00b0 05       		.uleb128 0x5
 2673 00b1 6B000000 		.4byte	0x6b
 2674 00b5 04       		.uleb128 0x4
 2675 00b6 45040000 		.4byte	.LASF16
 2676 00ba 02       		.byte	0x2
 2677 00bb 7E02     		.2byte	0x27e
 2678 00bd C1000000 		.4byte	0xc1
 2679 00c1 05       		.uleb128 0x5
 2680 00c2 83000000 		.4byte	0x83
 2681 00c6 04       		.uleb128 0x4
 2682 00c7 32060000 		.4byte	.LASF17
 2683 00cb 02       		.byte	0x2
 2684 00cc 8E02     		.2byte	0x28e
 2685 00ce D2000000 		.4byte	0xd2
 2686 00d2 06       		.uleb128 0x6
 2687 00d3 04       		.byte	0x4
 2688 00d4 D8000000 		.4byte	0xd8
 2689 00d8 07       		.uleb128 0x7
 2690 00d9 02       		.uleb128 0x2
 2691 00da 08       		.byte	0x8
 2692 00db 04       		.byte	0x4
 2693 00dc BE040000 		.4byte	.LASF18
 2694 00e0 02       		.uleb128 0x2
 2695 00e1 04       		.byte	0x4
 2696 00e2 07       		.byte	0x7
 2697 00e3 6E040000 		.4byte	.LASF19
 2698 00e7 08       		.uleb128 0x8
 2699 00e8 55050000 		.4byte	.LASF20
 2700 00ec 03       		.byte	0x3
 2701 00ed F5       		.byte	0xf5
 2702 00ee D2000000 		.4byte	0xd2
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 106


 2703 00f2 09       		.uleb128 0x9
 2704 00f3 4A070000 		.4byte	.LASF21
 2705 00f7 01       		.byte	0x1
 2706 00f8 6B       		.byte	0x6b
 2707 00f9 00000000 		.4byte	.LFB1
 2708 00fd 14000000 		.4byte	.LFE1-.LFB1
 2709 0101 01       		.uleb128 0x1
 2710 0102 9C       		.byte	0x9c
 2711 0103 0A       		.uleb128 0xa
 2712 0104 2B040000 		.4byte	.LASF22
 2713 0108 01       		.byte	0x1
 2714 0109 1D01     		.2byte	0x11d
 2715 010b 00000000 		.4byte	.LFB4
 2716 010f 14000000 		.4byte	.LFE4-.LFB4
 2717 0113 01       		.uleb128 0x1
 2718 0114 9C       		.byte	0x9c
 2719 0115 0B       		.uleb128 0xb
 2720 0116 34030000 		.4byte	.LASF23
 2721 011a 01       		.byte	0x1
 2722 011b 8B       		.byte	0x8b
 2723 011c 00000000 		.4byte	.LFB2
 2724 0120 18000000 		.4byte	.LFE2-.LFB2
 2725 0124 01       		.uleb128 0x1
 2726 0125 9C       		.byte	0x9c
 2727 0126 34010000 		.4byte	0x134
 2728 012a 0C       		.uleb128 0xc
 2729 012b 06000000 		.4byte	.LVL0
 2730 012f 03010000 		.4byte	0x103
 2731 0133 00       		.byte	0
 2732 0134 0D       		.uleb128 0xd
 2733 0135 CE010000 		.4byte	.LASF34
 2734 0139 01       		.byte	0x1
 2735 013a 3001     		.2byte	0x130
 2736 013c 83000000 		.4byte	0x83
 2737 0140 00000000 		.4byte	.LFB5
 2738 0144 14000000 		.4byte	.LFE5-.LFB5
 2739 0148 01       		.uleb128 0x1
 2740 0149 9C       		.byte	0x9c
 2741 014a 0E       		.uleb128 0xe
 2742 014b 1F000000 		.4byte	.LASF24
 2743 014f 01       		.byte	0x1
 2744 0150 AD01     		.2byte	0x1ad
 2745 0152 00000000 		.4byte	.LFB6
 2746 0156 20000000 		.4byte	.LFE6-.LFB6
 2747 015a 01       		.uleb128 0x1
 2748 015b 9C       		.byte	0x9c
 2749 015c A3010000 		.4byte	0x1a3
 2750 0160 0F       		.uleb128 0xf
 2751 0161 FA050000 		.4byte	.LASF28
 2752 0165 01       		.byte	0x1
 2753 0166 AD01     		.2byte	0x1ad
 2754 0168 83000000 		.4byte	0x83
 2755 016c 00000000 		.4byte	.LLST0
 2756 0170 10       		.uleb128 0x10
 2757 0171 A4010000 		.4byte	.LASF25
 2758 0175 01       		.byte	0x1
 2759 0176 AF01     		.2byte	0x1af
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 107


 2760 0178 6B000000 		.4byte	0x6b
 2761 017c 2C000000 		.4byte	.LLST1
 2762 0180 10       		.uleb128 0x10
 2763 0181 9F070000 		.4byte	.LASF26
 2764 0185 01       		.byte	0x1
 2765 0186 B001     		.2byte	0x1b0
 2766 0188 83000000 		.4byte	0x83
 2767 018c 3F000000 		.4byte	.LLST2
 2768 0190 0C       		.uleb128 0xc
 2769 0191 08000000 		.4byte	.LVL2
 2770 0195 F70C0000 		.4byte	0xcf7
 2771 0199 0C       		.uleb128 0xc
 2772 019a 1A000000 		.4byte	.LVL6
 2773 019e 020D0000 		.4byte	0xd02
 2774 01a2 00       		.byte	0
 2775 01a3 0E       		.uleb128 0xe
 2776 01a4 4B000000 		.4byte	.LASF27
 2777 01a8 01       		.byte	0x1
 2778 01a9 D901     		.2byte	0x1d9
 2779 01ab 00000000 		.4byte	.LFB7
 2780 01af 38000000 		.4byte	.LFE7-.LFB7
 2781 01b3 01       		.uleb128 0x1
 2782 01b4 9C       		.byte	0x9c
 2783 01b5 C8010000 		.4byte	0x1c8
 2784 01b9 11       		.uleb128 0x11
 2785 01ba 21020000 		.4byte	.LASF29
 2786 01be 01       		.byte	0x1
 2787 01bf D901     		.2byte	0x1d9
 2788 01c1 83000000 		.4byte	0x83
 2789 01c5 01       		.uleb128 0x1
 2790 01c6 50       		.byte	0x50
 2791 01c7 00       		.byte	0
 2792 01c8 12       		.uleb128 0x12
 2793 01c9 58020000 		.4byte	.LASF37
 2794 01cd 01       		.byte	0x1
 2795 01ce FE01     		.2byte	0x1fe
 2796 01d0 83000000 		.4byte	0x83
 2797 01d4 00000000 		.4byte	.LFB8
 2798 01d8 1C000000 		.4byte	.LFE8-.LFB8
 2799 01dc 01       		.uleb128 0x1
 2800 01dd 9C       		.byte	0x9c
 2801 01de 15020000 		.4byte	0x215
 2802 01e2 10       		.uleb128 0x10
 2803 01e3 A4010000 		.4byte	.LASF25
 2804 01e7 01       		.byte	0x1
 2805 01e8 0002     		.2byte	0x200
 2806 01ea 6B000000 		.4byte	0x6b
 2807 01ee 5D000000 		.4byte	.LLST3
 2808 01f2 10       		.uleb128 0x10
 2809 01f3 D2040000 		.4byte	.LASF30
 2810 01f7 01       		.byte	0x1
 2811 01f8 0102     		.2byte	0x201
 2812 01fa 83000000 		.4byte	0x83
 2813 01fe 70000000 		.4byte	.LLST4
 2814 0202 0C       		.uleb128 0xc
 2815 0203 06000000 		.4byte	.LVL9
 2816 0207 F70C0000 		.4byte	0xcf7
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 108


 2817 020b 0C       		.uleb128 0xc
 2818 020c 12000000 		.4byte	.LVL11
 2819 0210 020D0000 		.4byte	0xd02
 2820 0214 00       		.byte	0
 2821 0215 0E       		.uleb128 0xe
 2822 0216 4F060000 		.4byte	.LASF31
 2823 021a 01       		.byte	0x1
 2824 021b 3502     		.2byte	0x235
 2825 021d 00000000 		.4byte	.LFB9
 2826 0221 30000000 		.4byte	.LFE9-.LFB9
 2827 0225 01       		.uleb128 0x1
 2828 0226 9C       		.byte	0x9c
 2829 0227 5E020000 		.4byte	0x25e
 2830 022b 0F       		.uleb128 0xf
 2831 022c 42070000 		.4byte	.LASF32
 2832 0230 01       		.byte	0x1
 2833 0231 3502     		.2byte	0x235
 2834 0233 83000000 		.4byte	0x83
 2835 0237 8E000000 		.4byte	.LLST5
 2836 023b 10       		.uleb128 0x10
 2837 023c A4010000 		.4byte	.LASF25
 2838 0240 01       		.byte	0x1
 2839 0241 3702     		.2byte	0x237
 2840 0243 6B000000 		.4byte	0x6b
 2841 0247 BA000000 		.4byte	.LLST6
 2842 024b 0C       		.uleb128 0xc
 2843 024c 08000000 		.4byte	.LVL14
 2844 0250 F70C0000 		.4byte	0xcf7
 2845 0254 0C       		.uleb128 0xc
 2846 0255 24000000 		.4byte	.LVL16
 2847 0259 020D0000 		.4byte	0xd02
 2848 025d 00       		.byte	0
 2849 025e 0A       		.uleb128 0xa
 2850 025f DD060000 		.4byte	.LASF33
 2851 0263 01       		.byte	0x1
 2852 0264 6408     		.2byte	0x864
 2853 0266 00000000 		.4byte	.LFB12
 2854 026a 20000000 		.4byte	.LFE12-.LFB12
 2855 026e 01       		.uleb128 0x1
 2856 026f 9C       		.byte	0x9c
 2857 0270 0D       		.uleb128 0xd
 2858 0271 19030000 		.4byte	.LASF35
 2859 0275 01       		.byte	0x1
 2860 0276 7608     		.2byte	0x876
 2861 0278 83000000 		.4byte	0x83
 2862 027c 00000000 		.4byte	.LFB13
 2863 0280 10000000 		.4byte	.LFE13-.LFB13
 2864 0284 01       		.uleb128 0x1
 2865 0285 9C       		.byte	0x9c
 2866 0286 0A       		.uleb128 0xa
 2867 0287 35020000 		.4byte	.LASF36
 2868 028b 01       		.byte	0x1
 2869 028c 8608     		.2byte	0x886
 2870 028e 00000000 		.4byte	.LFB14
 2871 0292 0C000000 		.4byte	.LFE14-.LFB14
 2872 0296 01       		.uleb128 0x1
 2873 0297 9C       		.byte	0x9c
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 109


 2874 0298 12       		.uleb128 0x12
 2875 0299 80030000 		.4byte	.LASF38
 2876 029d 01       		.byte	0x1
 2877 029e A008     		.2byte	0x8a0
 2878 02a0 83000000 		.4byte	0x83
 2879 02a4 00000000 		.4byte	.LFB15
 2880 02a8 14000000 		.4byte	.LFE15-.LFB15
 2881 02ac 01       		.uleb128 0x1
 2882 02ad 9C       		.byte	0x9c
 2883 02ae D1020000 		.4byte	0x2d1
 2884 02b2 0F       		.uleb128 0xf
 2885 02b3 0E060000 		.4byte	.LASF39
 2886 02b7 01       		.byte	0x1
 2887 02b8 A008     		.2byte	0x8a0
 2888 02ba 83000000 		.4byte	0x83
 2889 02be CD000000 		.4byte	.LLST7
 2890 02c2 13       		.uleb128 0x13
 2891 02c3 5A040000 		.4byte	.LASF40
 2892 02c7 01       		.byte	0x1
 2893 02c8 A208     		.2byte	0x8a2
 2894 02ca 83000000 		.4byte	0x83
 2895 02ce 01       		.uleb128 0x1
 2896 02cf 50       		.byte	0x50
 2897 02d0 00       		.byte	0
 2898 02d1 12       		.uleb128 0x12
 2899 02d2 67000000 		.4byte	.LASF41
 2900 02d6 01       		.byte	0x1
 2901 02d7 B708     		.2byte	0x8b7
 2902 02d9 83000000 		.4byte	0x83
 2903 02dd 00000000 		.4byte	.LFB16
 2904 02e1 10000000 		.4byte	.LFE16-.LFB16
 2905 02e5 01       		.uleb128 0x1
 2906 02e6 9C       		.byte	0x9c
 2907 02e7 FA020000 		.4byte	0x2fa
 2908 02eb 13       		.uleb128 0x13
 2909 02ec 16000000 		.4byte	.LASF42
 2910 02f0 01       		.byte	0x1
 2911 02f1 B908     		.2byte	0x8b9
 2912 02f3 83000000 		.4byte	0x83
 2913 02f7 01       		.uleb128 0x1
 2914 02f8 50       		.byte	0x50
 2915 02f9 00       		.byte	0
 2916 02fa 0E       		.uleb128 0xe
 2917 02fb 25010000 		.4byte	.LASF43
 2918 02ff 01       		.byte	0x1
 2919 0300 CE08     		.2byte	0x8ce
 2920 0302 00000000 		.4byte	.LFB17
 2921 0306 0C000000 		.4byte	.LFE17-.LFB17
 2922 030a 01       		.uleb128 0x1
 2923 030b 9C       		.byte	0x9c
 2924 030c 1F030000 		.4byte	0x31f
 2925 0310 11       		.uleb128 0x11
 2926 0311 53020000 		.4byte	.LASF44
 2927 0315 01       		.byte	0x1
 2928 0316 CE08     		.2byte	0x8ce
 2929 0318 83000000 		.4byte	0x83
 2930 031c 01       		.uleb128 0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 110


 2931 031d 50       		.byte	0x50
 2932 031e 00       		.byte	0
 2933 031f 0E       		.uleb128 0xe
 2934 0320 DC050000 		.4byte	.LASF45
 2935 0324 01       		.byte	0x1
 2936 0325 8509     		.2byte	0x985
 2937 0327 00000000 		.4byte	.LFB24
 2938 032b 14000000 		.4byte	.LFE24-.LFB24
 2939 032f 01       		.uleb128 0x1
 2940 0330 9C       		.byte	0x9c
 2941 0331 46030000 		.4byte	0x346
 2942 0335 0F       		.uleb128 0xf
 2943 0336 D5030000 		.4byte	.LASF46
 2944 033a 01       		.byte	0x1
 2945 033b 8509     		.2byte	0x985
 2946 033d 6B000000 		.4byte	0x6b
 2947 0341 EB000000 		.4byte	.LLST8
 2948 0345 00       		.byte	0
 2949 0346 12       		.uleb128 0x12
 2950 0347 6B010000 		.4byte	.LASF47
 2951 034b 01       		.byte	0x1
 2952 034c 9709     		.2byte	0x997
 2953 034e 6B000000 		.4byte	0x6b
 2954 0352 00000000 		.4byte	.LFB25
 2955 0356 18000000 		.4byte	.LFE25-.LFB25
 2956 035a 01       		.uleb128 0x1
 2957 035b 9C       		.byte	0x9c
 2958 035c 71030000 		.4byte	0x371
 2959 0360 0F       		.uleb128 0xf
 2960 0361 D5030000 		.4byte	.LASF46
 2961 0365 01       		.byte	0x1
 2962 0366 9709     		.2byte	0x997
 2963 0368 6B000000 		.4byte	0x6b
 2964 036c 0C010000 		.4byte	.LLST9
 2965 0370 00       		.byte	0
 2966 0371 0E       		.uleb128 0xe
 2967 0372 F5010000 		.4byte	.LASF48
 2968 0376 01       		.byte	0x1
 2969 0377 A709     		.2byte	0x9a7
 2970 0379 00000000 		.4byte	.LFB26
 2971 037d 14000000 		.4byte	.LFE26-.LFB26
 2972 0381 01       		.uleb128 0x1
 2973 0382 9C       		.byte	0x9c
 2974 0383 98030000 		.4byte	0x398
 2975 0387 0F       		.uleb128 0xf
 2976 0388 D5030000 		.4byte	.LASF46
 2977 038c 01       		.byte	0x1
 2978 038d A709     		.2byte	0x9a7
 2979 038f 6B000000 		.4byte	0x6b
 2980 0393 2D010000 		.4byte	.LLST10
 2981 0397 00       		.byte	0
 2982 0398 0E       		.uleb128 0xe
 2983 0399 5B030000 		.4byte	.LASF49
 2984 039d 01       		.byte	0x1
 2985 039e B509     		.2byte	0x9b5
 2986 03a0 00000000 		.4byte	.LFB27
 2987 03a4 14000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 111


 2988 03a8 01       		.uleb128 0x1
 2989 03a9 9C       		.byte	0x9c
 2990 03aa BF030000 		.4byte	0x3bf
 2991 03ae 0F       		.uleb128 0xf
 2992 03af D5030000 		.4byte	.LASF46
 2993 03b3 01       		.byte	0x1
 2994 03b4 B509     		.2byte	0x9b5
 2995 03b6 6B000000 		.4byte	0x6b
 2996 03ba 4E010000 		.4byte	.LLST11
 2997 03be 00       		.byte	0
 2998 03bf 0E       		.uleb128 0xe
 2999 03c0 AC040000 		.4byte	.LASF50
 3000 03c4 01       		.byte	0x1
 3001 03c5 C409     		.2byte	0x9c4
 3002 03c7 00000000 		.4byte	.LFB28
 3003 03cb 14000000 		.4byte	.LFE28-.LFB28
 3004 03cf 01       		.uleb128 0x1
 3005 03d0 9C       		.byte	0x9c
 3006 03d1 E6030000 		.4byte	0x3e6
 3007 03d5 0F       		.uleb128 0xf
 3008 03d6 D5030000 		.4byte	.LASF46
 3009 03da 01       		.byte	0x1
 3010 03db C409     		.2byte	0x9c4
 3011 03dd 6B000000 		.4byte	0x6b
 3012 03e1 6F010000 		.4byte	.LLST12
 3013 03e5 00       		.byte	0
 3014 03e6 0E       		.uleb128 0xe
 3015 03e7 A0050000 		.4byte	.LASF51
 3016 03eb 01       		.byte	0x1
 3017 03ec D309     		.2byte	0x9d3
 3018 03ee 00000000 		.4byte	.LFB29
 3019 03f2 04000000 		.4byte	.LFE29-.LFB29
 3020 03f6 01       		.uleb128 0x1
 3021 03f7 9C       		.byte	0x9c
 3022 03f8 0B040000 		.4byte	0x40b
 3023 03fc 11       		.uleb128 0x11
 3024 03fd 0E060000 		.4byte	.LASF39
 3025 0401 01       		.byte	0x1
 3026 0402 D309     		.2byte	0x9d3
 3027 0404 6B000000 		.4byte	0x6b
 3028 0408 01       		.uleb128 0x1
 3029 0409 50       		.byte	0x50
 3030 040a 00       		.byte	0
 3031 040b 12       		.uleb128 0x12
 3032 040c 19040000 		.4byte	.LASF52
 3033 0410 01       		.byte	0x1
 3034 0411 E708     		.2byte	0x8e7
 3035 0413 C6000000 		.4byte	0xc6
 3036 0417 00000000 		.4byte	.LFB18
 3037 041b 20000000 		.4byte	.LFE18-.LFB18
 3038 041f 01       		.uleb128 0x1
 3039 0420 9C       		.byte	0x9c
 3040 0421 73040000 		.4byte	0x473
 3041 0425 0F       		.uleb128 0xf
 3042 0426 D5030000 		.4byte	.LASF46
 3043 042a 01       		.byte	0x1
 3044 042b E708     		.2byte	0x8e7
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 112


 3045 042d 6B000000 		.4byte	0x6b
 3046 0431 90010000 		.4byte	.LLST13
 3047 0435 0F       		.uleb128 0xf
 3048 0436 CA040000 		.4byte	.LASF53
 3049 043a 01       		.byte	0x1
 3050 043b E708     		.2byte	0x8e7
 3051 043d C6000000 		.4byte	0xc6
 3052 0441 B1010000 		.4byte	.LLST14
 3053 0445 13       		.uleb128 0x13
 3054 0446 ED060000 		.4byte	.LASF54
 3055 044a 01       		.byte	0x1
 3056 044b E908     		.2byte	0x8e9
 3057 044d C6000000 		.4byte	0xc6
 3058 0451 01       		.uleb128 0x1
 3059 0452 50       		.byte	0x50
 3060 0453 14       		.uleb128 0x14
 3061 0454 00000000 		.4byte	.LASF55
 3062 0458 01       		.byte	0x1
 3063 0459 EA08     		.2byte	0x8ea
 3064 045b 73040000 		.4byte	0x473
 3065 045f 00000020 		.4byte	0x20000000
 3066 0463 15       		.uleb128 0x15
 3067 0464 10000000 		.4byte	.LVL37
 3068 0468 E6030000 		.4byte	0x3e6
 3069 046c 16       		.uleb128 0x16
 3070 046d 01       		.uleb128 0x1
 3071 046e 50       		.byte	0x50
 3072 046f 01       		.uleb128 0x1
 3073 0470 30       		.byte	0x30
 3074 0471 00       		.byte	0
 3075 0472 00       		.byte	0
 3076 0473 06       		.uleb128 0x6
 3077 0474 04       		.byte	0x4
 3078 0475 C6000000 		.4byte	0xc6
 3079 0479 12       		.uleb128 0x12
 3080 047a E8050000 		.4byte	.LASF56
 3081 047e 01       		.byte	0x1
 3082 047f 0909     		.2byte	0x909
 3083 0481 C6000000 		.4byte	0xc6
 3084 0485 00000000 		.4byte	.LFB19
 3085 0489 1C000000 		.4byte	.LFE19-.LFB19
 3086 048d 01       		.uleb128 0x1
 3087 048e 9C       		.byte	0x9c
 3088 048f C3040000 		.4byte	0x4c3
 3089 0493 0F       		.uleb128 0xf
 3090 0494 D5030000 		.4byte	.LASF46
 3091 0498 01       		.byte	0x1
 3092 0499 0909     		.2byte	0x909
 3093 049b 6B000000 		.4byte	0x6b
 3094 049f DD010000 		.4byte	.LLST15
 3095 04a3 14       		.uleb128 0x14
 3096 04a4 00000000 		.4byte	.LASF55
 3097 04a8 01       		.byte	0x1
 3098 04a9 0B09     		.2byte	0x90b
 3099 04ab 73040000 		.4byte	0x473
 3100 04af 00000020 		.4byte	0x20000000
 3101 04b3 15       		.uleb128 0x15
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 113


 3102 04b4 0E000000 		.4byte	.LVL43
 3103 04b8 E6030000 		.4byte	0x3e6
 3104 04bc 16       		.uleb128 0x16
 3105 04bd 01       		.uleb128 0x1
 3106 04be 50       		.byte	0x50
 3107 04bf 01       		.uleb128 0x1
 3108 04c0 30       		.byte	0x30
 3109 04c1 00       		.byte	0
 3110 04c2 00       		.byte	0
 3111 04c3 12       		.uleb128 0x12
 3112 04c4 C6030000 		.4byte	.LASF57
 3113 04c8 01       		.byte	0x1
 3114 04c9 1F09     		.2byte	0x91f
 3115 04cb C6000000 		.4byte	0xc6
 3116 04cf 00000000 		.4byte	.LFB20
 3117 04d3 22000000 		.4byte	.LFE20-.LFB20
 3118 04d7 01       		.uleb128 0x1
 3119 04d8 9C       		.byte	0x9c
 3120 04d9 2B050000 		.4byte	0x52b
 3121 04dd 0F       		.uleb128 0xf
 3122 04de D5030000 		.4byte	.LASF46
 3123 04e2 01       		.byte	0x1
 3124 04e3 1F09     		.2byte	0x91f
 3125 04e5 6B000000 		.4byte	0x6b
 3126 04e9 FE010000 		.4byte	.LLST16
 3127 04ed 0F       		.uleb128 0xf
 3128 04ee CA040000 		.4byte	.LASF53
 3129 04f2 01       		.byte	0x1
 3130 04f3 1F09     		.2byte	0x91f
 3131 04f5 C6000000 		.4byte	0xc6
 3132 04f9 1F020000 		.4byte	.LLST17
 3133 04fd 13       		.uleb128 0x13
 3134 04fe ED060000 		.4byte	.LASF54
 3135 0502 01       		.byte	0x1
 3136 0503 2109     		.2byte	0x921
 3137 0505 C6000000 		.4byte	0xc6
 3138 0509 01       		.uleb128 0x1
 3139 050a 50       		.byte	0x50
 3140 050b 14       		.uleb128 0x14
 3141 050c 00000000 		.4byte	.LASF55
 3142 0510 01       		.byte	0x1
 3143 0511 2209     		.2byte	0x922
 3144 0513 73040000 		.4byte	0x473
 3145 0517 00000020 		.4byte	0x20000000
 3146 051b 15       		.uleb128 0x15
 3147 051c 10000000 		.4byte	.LVL47
 3148 0520 E6030000 		.4byte	0x3e6
 3149 0524 16       		.uleb128 0x16
 3150 0525 01       		.uleb128 0x1
 3151 0526 50       		.byte	0x50
 3152 0527 01       		.uleb128 0x1
 3153 0528 30       		.byte	0x30
 3154 0529 00       		.byte	0
 3155 052a 00       		.byte	0
 3156 052b 12       		.uleb128 0x12
 3157 052c 67050000 		.4byte	.LASF58
 3158 0530 01       		.byte	0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 114


 3159 0531 3B09     		.2byte	0x93b
 3160 0533 C6000000 		.4byte	0xc6
 3161 0537 00000000 		.4byte	.LFB21
 3162 053b 1E000000 		.4byte	.LFE21-.LFB21
 3163 053f 01       		.uleb128 0x1
 3164 0540 9C       		.byte	0x9c
 3165 0541 75050000 		.4byte	0x575
 3166 0545 0F       		.uleb128 0xf
 3167 0546 D5030000 		.4byte	.LASF46
 3168 054a 01       		.byte	0x1
 3169 054b 3B09     		.2byte	0x93b
 3170 054d 6B000000 		.4byte	0x6b
 3171 0551 4B020000 		.4byte	.LLST18
 3172 0555 14       		.uleb128 0x14
 3173 0556 00000000 		.4byte	.LASF55
 3174 055a 01       		.byte	0x1
 3175 055b 3D09     		.2byte	0x93d
 3176 055d 73040000 		.4byte	0x473
 3177 0561 00000020 		.4byte	0x20000000
 3178 0565 15       		.uleb128 0x15
 3179 0566 0E000000 		.4byte	.LVL53
 3180 056a E6030000 		.4byte	0x3e6
 3181 056e 16       		.uleb128 0x16
 3182 056f 01       		.uleb128 0x1
 3183 0570 50       		.byte	0x50
 3184 0571 01       		.uleb128 0x1
 3185 0572 30       		.byte	0x30
 3186 0573 00       		.byte	0
 3187 0574 00       		.byte	0
 3188 0575 0E       		.uleb128 0xe
 3189 0576 19050000 		.4byte	.LASF59
 3190 057a 01       		.byte	0x1
 3191 057b 4E09     		.2byte	0x94e
 3192 057d 00000000 		.4byte	.LFB22
 3193 0581 4C000000 		.4byte	.LFE22-.LFB22
 3194 0585 01       		.uleb128 0x1
 3195 0586 9C       		.byte	0x9c
 3196 0587 14060000 		.4byte	0x614
 3197 058b 0F       		.uleb128 0xf
 3198 058c D5030000 		.4byte	.LASF46
 3199 0590 01       		.byte	0x1
 3200 0591 4E09     		.2byte	0x94e
 3201 0593 6B000000 		.4byte	0x6b
 3202 0597 6C020000 		.4byte	.LLST19
 3203 059b 0F       		.uleb128 0xf
 3204 059c DC030000 		.4byte	.LASF60
 3205 05a0 01       		.byte	0x1
 3206 05a1 4E09     		.2byte	0x94e
 3207 05a3 6B000000 		.4byte	0x6b
 3208 05a7 8D020000 		.4byte	.LLST20
 3209 05ab 10       		.uleb128 0x10
 3210 05ac A4010000 		.4byte	.LASF25
 3211 05b0 01       		.byte	0x1
 3212 05b1 5009     		.2byte	0x950
 3213 05b3 6B000000 		.4byte	0x6b
 3214 05b7 AE020000 		.4byte	.LLST21
 3215 05bb 10       		.uleb128 0x10
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 115


 3216 05bc 2F020000 		.4byte	.LASF61
 3217 05c0 01       		.byte	0x1
 3218 05c1 5109     		.2byte	0x951
 3219 05c3 83000000 		.4byte	0x83
 3220 05c7 C1020000 		.4byte	.LLST22
 3221 05cb 10       		.uleb128 0x10
 3222 05cc B5020000 		.4byte	.LASF62
 3223 05d0 01       		.byte	0x1
 3224 05d1 5209     		.2byte	0x952
 3225 05d3 83000000 		.4byte	0x83
 3226 05d7 D4020000 		.4byte	.LLST23
 3227 05db 17       		.uleb128 0x17
 3228 05dc 10000000 		.4byte	.LVL56
 3229 05e0 E6030000 		.4byte	0x3e6
 3230 05e4 EE050000 		.4byte	0x5ee
 3231 05e8 16       		.uleb128 0x16
 3232 05e9 01       		.uleb128 0x1
 3233 05ea 50       		.byte	0x50
 3234 05eb 01       		.uleb128 0x1
 3235 05ec 30       		.byte	0x30
 3236 05ed 00       		.byte	0
 3237 05ee 17       		.uleb128 0x17
 3238 05ef 1A000000 		.4byte	.LVL57
 3239 05f3 E6030000 		.4byte	0x3e6
 3240 05f7 01060000 		.4byte	0x601
 3241 05fb 16       		.uleb128 0x16
 3242 05fc 01       		.uleb128 0x1
 3243 05fd 50       		.byte	0x50
 3244 05fe 01       		.uleb128 0x1
 3245 05ff 30       		.byte	0x30
 3246 0600 00       		.byte	0
 3247 0601 0C       		.uleb128 0xc
 3248 0602 26000000 		.4byte	.LVL59
 3249 0606 F70C0000 		.4byte	0xcf7
 3250 060a 0C       		.uleb128 0xc
 3251 060b 46000000 		.4byte	.LVL65
 3252 060f 020D0000 		.4byte	0xd02
 3253 0613 00       		.byte	0
 3254 0614 12       		.uleb128 0x12
 3255 0615 89020000 		.4byte	.LASF63
 3256 0619 01       		.byte	0x1
 3257 061a 7009     		.2byte	0x970
 3258 061c 6B000000 		.4byte	0x6b
 3259 0620 00000000 		.4byte	.LFB23
 3260 0624 2C000000 		.4byte	.LFE23-.LFB23
 3261 0628 01       		.uleb128 0x1
 3262 0629 9C       		.byte	0x9c
 3263 062a 5E060000 		.4byte	0x65e
 3264 062e 0F       		.uleb128 0xf
 3265 062f D5030000 		.4byte	.LASF46
 3266 0633 01       		.byte	0x1
 3267 0634 7009     		.2byte	0x970
 3268 0636 6B000000 		.4byte	0x6b
 3269 063a 08030000 		.4byte	.LLST24
 3270 063e 10       		.uleb128 0x10
 3271 063f DC030000 		.4byte	.LASF60
 3272 0643 01       		.byte	0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 116


 3273 0644 7209     		.2byte	0x972
 3274 0646 6B000000 		.4byte	0x6b
 3275 064a 29030000 		.4byte	.LLST25
 3276 064e 15       		.uleb128 0x15
 3277 064f 0E000000 		.4byte	.LVL69
 3278 0653 E6030000 		.4byte	0x3e6
 3279 0657 16       		.uleb128 0x16
 3280 0658 01       		.uleb128 0x1
 3281 0659 50       		.byte	0x50
 3282 065a 01       		.uleb128 0x1
 3283 065b 30       		.byte	0x30
 3284 065c 00       		.byte	0
 3285 065d 00       		.byte	0
 3286 065e 0A       		.uleb128 0xa
 3287 065f 42010000 		.4byte	.LASF64
 3288 0663 01       		.byte	0x1
 3289 0664 EB09     		.2byte	0x9eb
 3290 0666 00000000 		.4byte	.LFB30
 3291 066a 18000000 		.4byte	.LFE30-.LFB30
 3292 066e 01       		.uleb128 0x1
 3293 066f 9C       		.byte	0x9c
 3294 0670 0E       		.uleb128 0xe
 3295 0671 A3060000 		.4byte	.LASF65
 3296 0675 01       		.byte	0x1
 3297 0676 FF09     		.2byte	0x9ff
 3298 0678 00000000 		.4byte	.LFB31
 3299 067c 30000000 		.4byte	.LFE31-.LFB31
 3300 0680 01       		.uleb128 0x1
 3301 0681 9C       		.byte	0x9c
 3302 0682 A9060000 		.4byte	0x6a9
 3303 0686 0F       		.uleb128 0xf
 3304 0687 76050000 		.4byte	.LASF66
 3305 068b 01       		.byte	0x1
 3306 068c FF09     		.2byte	0x9ff
 3307 068e 83000000 		.4byte	0x83
 3308 0692 3C030000 		.4byte	.LLST26
 3309 0696 0C       		.uleb128 0xc
 3310 0697 0E000000 		.4byte	.LVL74
 3311 069b 0D0D0000 		.4byte	0xd0d
 3312 069f 0C       		.uleb128 0xc
 3313 06a0 26000000 		.4byte	.LVL76
 3314 06a4 0D0D0000 		.4byte	0xd0d
 3315 06a8 00       		.byte	0
 3316 06a9 0B       		.uleb128 0xb
 3317 06aa 70020000 		.4byte	.LASF67
 3318 06ae 01       		.byte	0x1
 3319 06af AF       		.byte	0xaf
 3320 06b0 00000000 		.4byte	.LFB3
 3321 06b4 F0000000 		.4byte	.LFE3-.LFB3
 3322 06b8 01       		.uleb128 0x1
 3323 06b9 9C       		.byte	0x9c
 3324 06ba 5F070000 		.4byte	0x75f
 3325 06be 18       		.uleb128 0x18
 3326 06bf 6900     		.ascii	"i\000"
 3327 06c1 01       		.byte	0x1
 3328 06c2 B2       		.byte	0xb2
 3329 06c3 83000000 		.4byte	0x83
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 117


 3330 06c7 5A030000 		.4byte	.LLST27
 3331 06cb 19       		.uleb128 0x19
 3332 06cc 93010000 		.4byte	.LASF68
 3333 06d0 01       		.byte	0x1
 3334 06d1 B5       		.byte	0xb5
 3335 06d2 83000000 		.4byte	0x83
 3336 06d6 91030000 		.4byte	.LLST28
 3337 06da 19       		.uleb128 0x19
 3338 06db A4010000 		.4byte	.LASF25
 3339 06df 01       		.byte	0x1
 3340 06e0 B6       		.byte	0xb6
 3341 06e1 6B000000 		.4byte	0x6b
 3342 06e5 DF030000 		.4byte	.LLST29
 3343 06e9 19       		.uleb128 0x19
 3344 06ea A7030000 		.4byte	.LASF69
 3345 06ee 01       		.byte	0x1
 3346 06ef B7       		.byte	0xb7
 3347 06f0 83000000 		.4byte	0x83
 3348 06f4 F2030000 		.4byte	.LLST30
 3349 06f8 19       		.uleb128 0x19
 3350 06f9 B3010000 		.4byte	.LASF70
 3351 06fd 01       		.byte	0x1
 3352 06fe B8       		.byte	0xb8
 3353 06ff 83000000 		.4byte	0x83
 3354 0703 31040000 		.4byte	.LLST31
 3355 0707 1A       		.uleb128 0x1a
 3356 0708 97060000 		.4byte	.LASF71
 3357 070c 01       		.byte	0x1
 3358 070d B9       		.byte	0xb9
 3359 070e C1000000 		.4byte	0xc1
 3360 0712 02       		.uleb128 0x2
 3361 0713 91       		.byte	0x91
 3362 0714 6C       		.sleb128 -20
 3363 0715 0C       		.uleb128 0xc
 3364 0716 08000000 		.4byte	.LVL79
 3365 071a 180D0000 		.4byte	0xd18
 3366 071e 0C       		.uleb128 0xc
 3367 071f 10000000 		.4byte	.LVL80
 3368 0723 F70C0000 		.4byte	0xcf7
 3369 0727 17       		.uleb128 0x17
 3370 0728 A6000000 		.4byte	.LVL99
 3371 072c 230D0000 		.4byte	0xd23
 3372 0730 3B070000 		.4byte	0x73b
 3373 0734 16       		.uleb128 0x16
 3374 0735 01       		.uleb128 0x1
 3375 0736 50       		.byte	0x50
 3376 0737 02       		.uleb128 0x2
 3377 0738 08       		.byte	0x8
 3378 0739 30       		.byte	0x30
 3379 073a 00       		.byte	0
 3380 073b 17       		.uleb128 0x17
 3381 073c B8000000 		.4byte	.LVL100
 3382 0740 70060000 		.4byte	0x670
 3383 0744 4E070000 		.4byte	0x74e
 3384 0748 16       		.uleb128 0x16
 3385 0749 01       		.uleb128 0x1
 3386 074a 50       		.byte	0x50
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 118


 3387 074b 01       		.uleb128 0x1
 3388 074c 44       		.byte	0x44
 3389 074d 00       		.byte	0
 3390 074e 15       		.uleb128 0x15
 3391 074f C2000000 		.4byte	.LVL101
 3392 0753 020D0000 		.4byte	0xd02
 3393 0757 16       		.uleb128 0x16
 3394 0758 01       		.uleb128 0x1
 3395 0759 50       		.byte	0x50
 3396 075a 02       		.uleb128 0x2
 3397 075b 74       		.byte	0x74
 3398 075c 00       		.sleb128 0
 3399 075d 00       		.byte	0
 3400 075e 00       		.byte	0
 3401 075f 0E       		.uleb128 0xe
 3402 0760 E5030000 		.4byte	.LASF72
 3403 0764 01       		.byte	0x1
 3404 0765 6F02     		.2byte	0x26f
 3405 0767 00000000 		.4byte	.LFB10
 3406 076b 80000000 		.4byte	.LFE10-.LFB10
 3407 076f 01       		.uleb128 0x1
 3408 0770 9C       		.byte	0x9c
 3409 0771 F8070000 		.4byte	0x7f8
 3410 0775 0F       		.uleb128 0xf
 3411 0776 93010000 		.4byte	.LASF68
 3412 077a 01       		.byte	0x1
 3413 077b 6F02     		.2byte	0x26f
 3414 077d 83000000 		.4byte	0x83
 3415 0781 50040000 		.4byte	.LLST32
 3416 0785 13       		.uleb128 0x13
 3417 0786 1A010000 		.4byte	.LASF73
 3418 078a 01       		.byte	0x1
 3419 078b 7202     		.2byte	0x272
 3420 078d 08080000 		.4byte	0x808
 3421 0791 02       		.uleb128 0x2
 3422 0792 91       		.byte	0x91
 3423 0793 68       		.sleb128 -24
 3424 0794 13       		.uleb128 0x13
 3425 0795 02020000 		.4byte	.LASF74
 3426 0799 01       		.byte	0x1
 3427 079a 7302     		.2byte	0x273
 3428 079c 1D080000 		.4byte	0x81d
 3429 07a0 02       		.uleb128 0x2
 3430 07a1 91       		.byte	0x91
 3431 07a2 58       		.sleb128 -40
 3432 07a3 10       		.uleb128 0x10
 3433 07a4 E4010000 		.4byte	.LASF75
 3434 07a8 01       		.byte	0x1
 3435 07a9 7D02     		.2byte	0x27d
 3436 07ab 83000000 		.4byte	0x83
 3437 07af 89040000 		.4byte	.LLST33
 3438 07b3 10       		.uleb128 0x10
 3439 07b4 A4010000 		.4byte	.LASF25
 3440 07b8 01       		.byte	0x1
 3441 07b9 8402     		.2byte	0x284
 3442 07bb 6B000000 		.4byte	0x6b
 3443 07bf C0040000 		.4byte	.LLST34
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 119


 3444 07c3 0C       		.uleb128 0xc
 3445 07c4 0A000000 		.4byte	.LVL104
 3446 07c8 F70C0000 		.4byte	0xcf7
 3447 07cc 0C       		.uleb128 0xc
 3448 07cd 10000000 		.4byte	.LVL106
 3449 07d1 34010000 		.4byte	0x134
 3450 07d5 0C       		.uleb128 0xc
 3451 07d6 18000000 		.4byte	.LVL108
 3452 07da 03010000 		.4byte	0x103
 3453 07de 0C       		.uleb128 0xc
 3454 07df 56000000 		.4byte	.LVL112
 3455 07e3 A9060000 		.4byte	0x6a9
 3456 07e7 15       		.uleb128 0x15
 3457 07e8 5C000000 		.4byte	.LVL113
 3458 07ec 020D0000 		.4byte	0xd02
 3459 07f0 16       		.uleb128 0x16
 3460 07f1 01       		.uleb128 0x1
 3461 07f2 50       		.byte	0x50
 3462 07f3 02       		.uleb128 0x2
 3463 07f4 75       		.byte	0x75
 3464 07f5 00       		.sleb128 0
 3465 07f6 00       		.byte	0
 3466 07f7 00       		.byte	0
 3467 07f8 1B       		.uleb128 0x1b
 3468 07f9 C1000000 		.4byte	0xc1
 3469 07fd 08080000 		.4byte	0x808
 3470 0801 1C       		.uleb128 0x1c
 3471 0802 E0000000 		.4byte	0xe0
 3472 0806 01       		.byte	0x1
 3473 0807 00       		.byte	0
 3474 0808 05       		.uleb128 0x5
 3475 0809 F8070000 		.4byte	0x7f8
 3476 080d 1B       		.uleb128 0x1b
 3477 080e C1000000 		.4byte	0xc1
 3478 0812 1D080000 		.4byte	0x81d
 3479 0816 1C       		.uleb128 0x1c
 3480 0817 E0000000 		.4byte	0xe0
 3481 081b 03       		.byte	0x3
 3482 081c 00       		.byte	0
 3483 081d 05       		.uleb128 0x5
 3484 081e 0D080000 		.4byte	0x80d
 3485 0822 0E       		.uleb128 0xe
 3486 0823 04060000 		.4byte	.LASF76
 3487 0827 01       		.byte	0x1
 3488 0828 160A     		.2byte	0xa16
 3489 082a 00000000 		.4byte	.LFB32
 3490 082e 14000000 		.4byte	.LFE32-.LFB32
 3491 0832 01       		.uleb128 0x1
 3492 0833 9C       		.byte	0x9c
 3493 0834 52080000 		.4byte	0x852
 3494 0838 0F       		.uleb128 0xf
 3495 0839 92070000 		.4byte	.LASF77
 3496 083d 01       		.byte	0x1
 3497 083e 160A     		.2byte	0xa16
 3498 0840 77000000 		.4byte	0x77
 3499 0844 D3040000 		.4byte	.LLST35
 3500 0848 0C       		.uleb128 0xc
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 120


 3501 0849 0C000000 		.4byte	.LVL118
 3502 084d 0D0D0000 		.4byte	0xd0d
 3503 0851 00       		.byte	0
 3504 0852 0E       		.uleb128 0xe
 3505 0853 46050000 		.4byte	.LASF78
 3506 0857 01       		.byte	0x1
 3507 0858 4608     		.2byte	0x846
 3508 085a 00000000 		.4byte	.LFB11
 3509 085e 44000000 		.4byte	.LFE11-.LFB11
 3510 0862 01       		.uleb128 0x1
 3511 0863 9C       		.byte	0x9c
 3512 0864 97080000 		.4byte	0x897
 3513 0868 0F       		.uleb128 0xf
 3514 0869 96050000 		.4byte	.LASF79
 3515 086d 01       		.byte	0x1
 3516 086e 4608     		.2byte	0x846
 3517 0870 83000000 		.4byte	0x83
 3518 0874 F4040000 		.4byte	.LLST36
 3519 0878 17       		.uleb128 0x17
 3520 0879 2E000000 		.4byte	.LVL122
 3521 087d 22080000 		.4byte	0x822
 3522 0881 8D080000 		.4byte	0x88d
 3523 0885 16       		.uleb128 0x16
 3524 0886 01       		.uleb128 0x1
 3525 0887 50       		.byte	0x50
 3526 0888 03       		.uleb128 0x3
 3527 0889 0A       		.byte	0xa
 3528 088a E803     		.2byte	0x3e8
 3529 088c 00       		.byte	0
 3530 088d 0C       		.uleb128 0xc
 3531 088e 32000000 		.4byte	.LVL123
 3532 0892 86020000 		.4byte	0x286
 3533 0896 00       		.byte	0
 3534 0897 1D       		.uleb128 0x1d
 3535 0898 98010000 		.4byte	.LASF80
 3536 089c 01       		.byte	0x1
 3537 089d 240A     		.2byte	0xa24
 3538 089f 00000000 		.4byte	.LFB33
 3539 08a3 4C000000 		.4byte	.LFE33-.LFB33
 3540 08a7 01       		.uleb128 0x1
 3541 08a8 9C       		.byte	0x9c
 3542 08a9 BE080000 		.4byte	0x8be
 3543 08ad 0F       		.uleb128 0xf
 3544 08ae 93010000 		.4byte	.LASF68
 3545 08b2 01       		.byte	0x1
 3546 08b3 240A     		.2byte	0xa24
 3547 08b5 83000000 		.4byte	0x83
 3548 08b9 20050000 		.4byte	.LLST37
 3549 08bd 00       		.byte	0
 3550 08be 0A       		.uleb128 0xa
 3551 08bf 34070000 		.4byte	.LASF81
 3552 08c3 01       		.byte	0x1
 3553 08c4 900A     		.2byte	0xa90
 3554 08c6 00000000 		.4byte	.LFB37
 3555 08ca 10000000 		.4byte	.LFE37-.LFB37
 3556 08ce 01       		.uleb128 0x1
 3557 08cf 9C       		.byte	0x9c
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 121


 3558 08d0 0A       		.uleb128 0xa
 3559 08d1 52010000 		.4byte	.LASF82
 3560 08d5 01       		.byte	0x1
 3561 08d6 A00A     		.2byte	0xaa0
 3562 08d8 00000000 		.4byte	.LFB38
 3563 08dc 10000000 		.4byte	.LFE38-.LFB38
 3564 08e0 01       		.uleb128 0x1
 3565 08e1 9C       		.byte	0x9c
 3566 08e2 0E       		.uleb128 0xe
 3567 08e3 3F060000 		.4byte	.LASF83
 3568 08e7 01       		.byte	0x1
 3569 08e8 7F0A     		.2byte	0xa7f
 3570 08ea 00000000 		.4byte	.LFB36
 3571 08ee 18000000 		.4byte	.LFE36-.LFB36
 3572 08f2 01       		.uleb128 0x1
 3573 08f3 9C       		.byte	0x9c
 3574 08f4 02090000 		.4byte	0x902
 3575 08f8 0C       		.uleb128 0xc
 3576 08f9 06000000 		.4byte	.LVL128
 3577 08fd D0080000 		.4byte	0x8d0
 3578 0901 00       		.byte	0
 3579 0902 0A       		.uleb128 0xa
 3580 0903 C3060000 		.4byte	.LASF84
 3581 0907 01       		.byte	0x1
 3582 0908 B00A     		.2byte	0xab0
 3583 090a 00000000 		.4byte	.LFB39
 3584 090e 10000000 		.4byte	.LFE39-.LFB39
 3585 0912 01       		.uleb128 0x1
 3586 0913 9C       		.byte	0x9c
 3587 0914 0E       		.uleb128 0xe
 3588 0915 A6070000 		.4byte	.LASF85
 3589 0919 01       		.byte	0x1
 3590 091a C10A     		.2byte	0xac1
 3591 091c 00000000 		.4byte	.LFB40
 3592 0920 10000000 		.4byte	.LFE40-.LFB40
 3593 0924 01       		.uleb128 0x1
 3594 0925 9C       		.byte	0x9c
 3595 0926 3B090000 		.4byte	0x93b
 3596 092a 0F       		.uleb128 0xf
 3597 092b B5020000 		.4byte	.LASF62
 3598 092f 01       		.byte	0x1
 3599 0930 C10A     		.2byte	0xac1
 3600 0932 83000000 		.4byte	0x83
 3601 0936 41050000 		.4byte	.LLST38
 3602 093a 00       		.byte	0
 3603 093b 0D       		.uleb128 0xd
 3604 093c BB010000 		.4byte	.LASF86
 3605 0940 01       		.byte	0x1
 3606 0941 D10A     		.2byte	0xad1
 3607 0943 83000000 		.4byte	0x83
 3608 0947 00000000 		.4byte	.LFB41
 3609 094b 10000000 		.4byte	.LFE41-.LFB41
 3610 094f 01       		.uleb128 0x1
 3611 0950 9C       		.byte	0x9c
 3612 0951 0D       		.uleb128 0xd
 3613 0952 F9040000 		.4byte	.LASF87
 3614 0956 01       		.byte	0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 122


 3615 0957 E10A     		.2byte	0xae1
 3616 0959 83000000 		.4byte	0x83
 3617 095d 00000000 		.4byte	.LFB42
 3618 0961 10000000 		.4byte	.LFE42-.LFB42
 3619 0965 01       		.uleb128 0x1
 3620 0966 9C       		.byte	0x9c
 3621 0967 0E       		.uleb128 0xe
 3622 0968 AE030000 		.4byte	.LASF88
 3623 096c 01       		.byte	0x1
 3624 096d 010B     		.2byte	0xb01
 3625 096f 00000000 		.4byte	.LFB43
 3626 0973 20000000 		.4byte	.LFE43-.LFB43
 3627 0977 01       		.uleb128 0x1
 3628 0978 9C       		.byte	0x9c
 3629 0979 8C090000 		.4byte	0x98c
 3630 097d 11       		.uleb128 0x11
 3631 097e BB020000 		.4byte	.LASF89
 3632 0982 01       		.byte	0x1
 3633 0983 010B     		.2byte	0xb01
 3634 0985 83000000 		.4byte	0x83
 3635 0989 01       		.uleb128 0x1
 3636 098a 50       		.byte	0x50
 3637 098b 00       		.byte	0
 3638 098c 0D       		.uleb128 0xd
 3639 098d AB060000 		.4byte	.LASF90
 3640 0991 01       		.byte	0x1
 3641 0992 1A0B     		.2byte	0xb1a
 3642 0994 83000000 		.4byte	0x83
 3643 0998 00000000 		.4byte	.LFB44
 3644 099c 10000000 		.4byte	.LFE44-.LFB44
 3645 09a0 01       		.uleb128 0x1
 3646 09a1 9C       		.byte	0x9c
 3647 09a2 0D       		.uleb128 0xd
 3648 09a3 D5020000 		.4byte	.LASF91
 3649 09a7 01       		.byte	0x1
 3650 09a8 310B     		.2byte	0xb31
 3651 09aa 83000000 		.4byte	0x83
 3652 09ae 00000000 		.4byte	.LFB45
 3653 09b2 10000000 		.4byte	.LFE45-.LFB45
 3654 09b6 01       		.uleb128 0x1
 3655 09b7 9C       		.byte	0x9c
 3656 09b8 1E       		.uleb128 0x1e
 3657 09b9 B9070000 		.4byte	.LASF124
 3658 09bd 01       		.byte	0x1
 3659 09be 860B     		.2byte	0xb86
 3660 09c0 00000000 		.4byte	.LFB49
 3661 09c4 28000000 		.4byte	.LFE49-.LFB49
 3662 09c8 01       		.uleb128 0x1
 3663 09c9 9C       		.byte	0x9c
 3664 09ca E6090000 		.4byte	0x9e6
 3665 09ce 1F       		.uleb128 0x1f
 3666 09cf 6900     		.ascii	"i\000"
 3667 09d1 01       		.byte	0x1
 3668 09d2 880B     		.2byte	0xb88
 3669 09d4 83000000 		.4byte	0x83
 3670 09d8 62050000 		.4byte	.LLST39
 3671 09dc 0C       		.uleb128 0xc
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 123


 3672 09dd 06000000 		.4byte	.LVL132
 3673 09e1 A2090000 		.4byte	0x9a2
 3674 09e5 00       		.byte	0
 3675 09e6 0A       		.uleb128 0xa
 3676 09e7 F8020000 		.4byte	.LASF92
 3677 09eb 01       		.byte	0x1
 3678 09ec 3E0B     		.2byte	0xb3e
 3679 09ee 00000000 		.4byte	.LFB46
 3680 09f2 0C000000 		.4byte	.LFE46-.LFB46
 3681 09f6 01       		.uleb128 0x1
 3682 09f7 9C       		.byte	0x9c
 3683 09f8 1D       		.uleb128 0x1d
 3684 09f9 A7020000 		.4byte	.LASF93
 3685 09fd 01       		.byte	0x1
 3686 09fe 610A     		.2byte	0xa61
 3687 0a00 00000000 		.4byte	.LFB35
 3688 0a04 44000000 		.4byte	.LFE35-.LFB35
 3689 0a08 01       		.uleb128 0x1
 3690 0a09 9C       		.byte	0x9c
 3691 0a0a 5E0A0000 		.4byte	0xa5e
 3692 0a0e 1F       		.uleb128 0x1f
 3693 0a0f 6900     		.ascii	"i\000"
 3694 0a11 01       		.byte	0x1
 3695 0a12 630A     		.2byte	0xa63
 3696 0a14 83000000 		.4byte	0x83
 3697 0a18 80050000 		.4byte	.LLST40
 3698 0a1c 17       		.uleb128 0x17
 3699 0a1d 1C000000 		.4byte	.LVL142
 3700 0a21 0B040000 		.4byte	0x40b
 3701 0a25 380A0000 		.4byte	0xa38
 3702 0a29 16       		.uleb128 0x16
 3703 0a2a 01       		.uleb128 0x1
 3704 0a2b 50       		.byte	0x50
 3705 0a2c 01       		.uleb128 0x1
 3706 0a2d 3F       		.byte	0x3f
 3707 0a2e 16       		.uleb128 0x16
 3708 0a2f 01       		.uleb128 0x1
 3709 0a30 51       		.byte	0x51
 3710 0a31 05       		.uleb128 0x5
 3711 0a32 03       		.byte	0x3
 3712 0a33 00000000 		.4byte	CySysTickServiceCallbacks
 3713 0a37 00       		.byte	0
 3714 0a38 17       		.uleb128 0x17
 3715 0a39 22000000 		.4byte	.LVL143
 3716 0a3d 67090000 		.4byte	0x967
 3717 0a41 4B0A0000 		.4byte	0xa4b
 3718 0a45 16       		.uleb128 0x16
 3719 0a46 01       		.uleb128 0x1
 3720 0a47 50       		.byte	0x50
 3721 0a48 01       		.uleb128 0x1
 3722 0a49 31       		.byte	0x31
 3723 0a4a 00       		.byte	0
 3724 0a4b 0C       		.uleb128 0xc
 3725 0a4c 32000000 		.4byte	.LVL145
 3726 0a50 14090000 		.4byte	0x914
 3727 0a54 0C       		.uleb128 0xc
 3728 0a55 36000000 		.4byte	.LVL146
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 124


 3729 0a59 E6090000 		.4byte	0x9e6
 3730 0a5d 00       		.byte	0
 3731 0a5e 0E       		.uleb128 0xe
 3732 0a5f 4B040000 		.4byte	.LASF94
 3733 0a63 01       		.byte	0x1
 3734 0a64 440A     		.2byte	0xa44
 3735 0a66 00000000 		.4byte	.LFB34
 3736 0a6a 20000000 		.4byte	.LFE34-.LFB34
 3737 0a6e 01       		.uleb128 0x1
 3738 0a6f 9C       		.byte	0x9c
 3739 0a70 870A0000 		.4byte	0xa87
 3740 0a74 0C       		.uleb128 0xc
 3741 0a75 0E000000 		.4byte	.LVL147
 3742 0a79 F8090000 		.4byte	0x9f8
 3743 0a7d 0C       		.uleb128 0xc
 3744 0a7e 18000000 		.4byte	.LVL148
 3745 0a82 E2080000 		.4byte	0x8e2
 3746 0a86 00       		.byte	0
 3747 0a87 12       		.uleb128 0x12
 3748 0a88 66060000 		.4byte	.LASF95
 3749 0a8c 01       		.byte	0x1
 3750 0a8d 610B     		.2byte	0xb61
 3751 0a8f E7000000 		.4byte	0xe7
 3752 0a93 00000000 		.4byte	.LFB47
 3753 0a97 10000000 		.4byte	.LFE47-.LFB47
 3754 0a9b 01       		.uleb128 0x1
 3755 0a9c 9C       		.byte	0x9c
 3756 0a9d CE0A0000 		.4byte	0xace
 3757 0aa1 0F       		.uleb128 0xf
 3758 0aa2 D5030000 		.4byte	.LASF46
 3759 0aa6 01       		.byte	0x1
 3760 0aa7 610B     		.2byte	0xb61
 3761 0aa9 83000000 		.4byte	0x83
 3762 0aad 9F050000 		.4byte	.LLST41
 3763 0ab1 11       		.uleb128 0x11
 3764 0ab2 DF040000 		.4byte	.LASF96
 3765 0ab6 01       		.byte	0x1
 3766 0ab7 610B     		.2byte	0xb61
 3767 0ab9 E7000000 		.4byte	0xe7
 3768 0abd 01       		.uleb128 0x1
 3769 0abe 51       		.byte	0x51
 3770 0abf 13       		.uleb128 0x13
 3771 0ac0 60000000 		.4byte	.LASF97
 3772 0ac4 01       		.byte	0x1
 3773 0ac5 630B     		.2byte	0xb63
 3774 0ac7 E7000000 		.4byte	0xe7
 3775 0acb 01       		.uleb128 0x1
 3776 0acc 50       		.byte	0x50
 3777 0acd 00       		.byte	0
 3778 0ace 12       		.uleb128 0x12
 3779 0acf 6B030000 		.4byte	.LASF98
 3780 0ad3 01       		.byte	0x1
 3781 0ad4 790B     		.2byte	0xb79
 3782 0ad6 E7000000 		.4byte	0xe7
 3783 0ada 00000000 		.4byte	.LFB48
 3784 0ade 0C000000 		.4byte	.LFE48-.LFB48
 3785 0ae2 01       		.uleb128 0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 125


 3786 0ae3 9C       		.byte	0x9c
 3787 0ae4 F90A0000 		.4byte	0xaf9
 3788 0ae8 0F       		.uleb128 0xf
 3789 0ae9 D5030000 		.4byte	.LASF46
 3790 0aed 01       		.byte	0x1
 3791 0aee 790B     		.2byte	0xb79
 3792 0af0 83000000 		.4byte	0x83
 3793 0af4 C0050000 		.4byte	.LLST42
 3794 0af8 00       		.byte	0
 3795 0af9 0E       		.uleb128 0xe
 3796 0afa C7020000 		.4byte	.LASF99
 3797 0afe 01       		.byte	0x1
 3798 0aff A60B     		.2byte	0xba6
 3799 0b01 00000000 		.4byte	.LFB50
 3800 0b05 70000000 		.4byte	.LFE50-.LFB50
 3801 0b09 01       		.uleb128 0x1
 3802 0b0a 9C       		.byte	0x9c
 3803 0b0b 1E0B0000 		.4byte	0xb1e
 3804 0b0f 11       		.uleb128 0x11
 3805 0b10 8E060000 		.4byte	.LASF100
 3806 0b14 01       		.byte	0x1
 3807 0b15 A60B     		.2byte	0xba6
 3808 0b17 1E0B0000 		.4byte	0xb1e
 3809 0b1b 01       		.uleb128 0x1
 3810 0b1c 50       		.byte	0x50
 3811 0b1d 00       		.byte	0
 3812 0b1e 06       		.uleb128 0x6
 3813 0b1f 04       		.byte	0x4
 3814 0b20 83000000 		.4byte	0x83
 3815 0b24 0E       		.uleb128 0xe
 3816 0b25 A7050000 		.4byte	.LASF101
 3817 0b29 01       		.byte	0x1
 3818 0b2a D20B     		.2byte	0xbd2
 3819 0b2c 00000000 		.4byte	.LFB51
 3820 0b30 20000000 		.4byte	.LFE51-.LFB51
 3821 0b34 01       		.uleb128 0x1
 3822 0b35 9C       		.byte	0x9c
 3823 0b36 5B0B0000 		.4byte	0xb5b
 3824 0b3a 0F       		.uleb128 0xf
 3825 0b3b 67040000 		.4byte	.LASF102
 3826 0b3f 01       		.byte	0x1
 3827 0b40 D20B     		.2byte	0xbd2
 3828 0b42 83000000 		.4byte	0x83
 3829 0b46 E1050000 		.4byte	.LLST43
 3830 0b4a 10       		.uleb128 0x10
 3831 0b4b A7030000 		.4byte	.LASF69
 3832 0b4f 01       		.byte	0x1
 3833 0b50 D40B     		.2byte	0xbd4
 3834 0b52 83000000 		.4byte	0x83
 3835 0b56 02060000 		.4byte	.LLST44
 3836 0b5a 00       		.byte	0
 3837 0b5b 0E       		.uleb128 0xe
 3838 0b5c FA030000 		.4byte	.LASF103
 3839 0b60 01       		.byte	0x1
 3840 0b61 ED0B     		.2byte	0xbed
 3841 0b63 00000000 		.4byte	.LFB52
 3842 0b67 20000000 		.4byte	.LFE52-.LFB52
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 126


 3843 0b6b 01       		.uleb128 0x1
 3844 0b6c 9C       		.byte	0x9c
 3845 0b6d 920B0000 		.4byte	0xb92
 3846 0b71 0F       		.uleb128 0xf
 3847 0b72 67040000 		.4byte	.LASF102
 3848 0b76 01       		.byte	0x1
 3849 0b77 ED0B     		.2byte	0xbed
 3850 0b79 83000000 		.4byte	0x83
 3851 0b7d 20060000 		.4byte	.LLST45
 3852 0b81 10       		.uleb128 0x10
 3853 0b82 A7030000 		.4byte	.LASF69
 3854 0b86 01       		.byte	0x1
 3855 0b87 EF0B     		.2byte	0xbef
 3856 0b89 83000000 		.4byte	0x83
 3857 0b8d 41060000 		.4byte	.LLST46
 3858 0b91 00       		.byte	0
 3859 0b92 0E       		.uleb128 0xe
 3860 0b93 16070000 		.4byte	.LASF104
 3861 0b97 01       		.byte	0x1
 3862 0b98 080C     		.2byte	0xc08
 3863 0b9a 00000000 		.4byte	.LFB53
 3864 0b9e 20000000 		.4byte	.LFE53-.LFB53
 3865 0ba2 01       		.uleb128 0x1
 3866 0ba3 9C       		.byte	0x9c
 3867 0ba4 C90B0000 		.4byte	0xbc9
 3868 0ba8 0F       		.uleb128 0xf
 3869 0ba9 67040000 		.4byte	.LASF102
 3870 0bad 01       		.byte	0x1
 3871 0bae 080C     		.2byte	0xc08
 3872 0bb0 83000000 		.4byte	0x83
 3873 0bb4 5F060000 		.4byte	.LLST47
 3874 0bb8 10       		.uleb128 0x10
 3875 0bb9 A7030000 		.4byte	.LASF69
 3876 0bbd 01       		.byte	0x1
 3877 0bbe 0A0C     		.2byte	0xc0a
 3878 0bc0 83000000 		.4byte	0x83
 3879 0bc4 80060000 		.4byte	.LLST48
 3880 0bc8 00       		.byte	0
 3881 0bc9 0E       		.uleb128 0xe
 3882 0bca 88040000 		.4byte	.LASF105
 3883 0bce 01       		.byte	0x1
 3884 0bcf 250C     		.2byte	0xc25
 3885 0bd1 00000000 		.4byte	.LFB54
 3886 0bd5 68000000 		.4byte	.LFE54-.LFB54
 3887 0bd9 01       		.uleb128 0x1
 3888 0bda 9C       		.byte	0x9c
 3889 0bdb 1F0C0000 		.4byte	0xc1f
 3890 0bdf 0F       		.uleb128 0xf
 3891 0be0 32010000 		.4byte	.LASF106
 3892 0be4 01       		.byte	0x1
 3893 0be5 250C     		.2byte	0xc25
 3894 0be7 83000000 		.4byte	0x83
 3895 0beb 9E060000 		.4byte	.LLST49
 3896 0bef 0F       		.uleb128 0xf
 3897 0bf0 67040000 		.4byte	.LASF102
 3898 0bf4 01       		.byte	0x1
 3899 0bf5 250C     		.2byte	0xc25
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 127


 3900 0bf7 83000000 		.4byte	0x83
 3901 0bfb 0A070000 		.4byte	.LLST50
 3902 0bff 10       		.uleb128 0x10
 3903 0c00 A7030000 		.4byte	.LASF69
 3904 0c04 01       		.byte	0x1
 3905 0c05 270C     		.2byte	0xc27
 3906 0c07 83000000 		.4byte	0x83
 3907 0c0b 76070000 		.4byte	.LLST51
 3908 0c0f 15       		.uleb128 0x15
 3909 0c10 56000000 		.4byte	.LVL183
 3910 0c14 E6030000 		.4byte	0x3e6
 3911 0c18 16       		.uleb128 0x16
 3912 0c19 01       		.uleb128 0x1
 3913 0c1a 50       		.byte	0x50
 3914 0c1b 01       		.uleb128 0x1
 3915 0c1c 30       		.byte	0x30
 3916 0c1d 00       		.byte	0
 3917 0c1e 00       		.byte	0
 3918 0c1f 1B       		.uleb128 0x1b
 3919 0c20 E7000000 		.4byte	0xe7
 3920 0c24 2F0C0000 		.4byte	0xc2f
 3921 0c28 1C       		.uleb128 0x1c
 3922 0c29 E0000000 		.4byte	0xe0
 3923 0c2d 04       		.byte	0x4
 3924 0c2e 00       		.byte	0
 3925 0c2f 1A       		.uleb128 0x1a
 3926 0c30 7B060000 		.4byte	.LASF107
 3927 0c34 01       		.byte	0x1
 3928 0c35 22       		.byte	0x22
 3929 0c36 1F0C0000 		.4byte	0xc1f
 3930 0c3a 05       		.uleb128 0x5
 3931 0c3b 03       		.byte	0x3
 3932 0c3c 00000000 		.4byte	CySysTickCallbacks
 3933 0c40 20       		.uleb128 0x20
 3934 0c41 0B050000 		.4byte	.LASF108
 3935 0c45 01       		.byte	0x1
 3936 0c46 1B       		.byte	0x1b
 3937 0c47 83000000 		.4byte	0x83
 3938 0c4b 05       		.uleb128 0x5
 3939 0c4c 03       		.byte	0x3
 3940 0c4d 00000000 		.4byte	cydelayFreqHz
 3941 0c51 20       		.uleb128 0x20
 3942 0c52 12020000 		.4byte	.LASF109
 3943 0c56 01       		.byte	0x1
 3944 0c57 1C       		.byte	0x1c
 3945 0c58 83000000 		.4byte	0x83
 3946 0c5c 05       		.uleb128 0x5
 3947 0c5d 03       		.byte	0x3
 3948 0c5e 00000000 		.4byte	cydelayFreqKhz
 3949 0c62 20       		.uleb128 0x20
 3950 0c63 F4060000 		.4byte	.LASF110
 3951 0c67 01       		.byte	0x1
 3952 0c68 1D       		.byte	0x1d
 3953 0c69 6B000000 		.4byte	0x6b
 3954 0c6d 05       		.uleb128 0x5
 3955 0c6e 03       		.byte	0x3
 3956 0c6f 00000000 		.4byte	cydelayFreqMhz
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 128


 3957 0c73 20       		.uleb128 0x20
 3958 0c74 9A020000 		.4byte	.LASF111
 3959 0c78 01       		.byte	0x1
 3960 0c79 1E       		.byte	0x1e
 3961 0c7a 83000000 		.4byte	0x83
 3962 0c7e 05       		.uleb128 0x5
 3963 0c7f 03       		.byte	0x3
 3964 0c80 00000000 		.4byte	cydelay32kMs
 3965 0c84 20       		.uleb128 0x20
 3966 0c85 77040000 		.4byte	.LASF112
 3967 0c89 01       		.byte	0x1
 3968 0c8a 36       		.byte	0x36
 3969 0c8b 83000000 		.4byte	0x83
 3970 0c8f 05       		.uleb128 0x5
 3971 0c90 03       		.byte	0x3
 3972 0c91 00000000 		.4byte	CySysTickInitVar
 3973 0c95 1B       		.uleb128 0x1b
 3974 0c96 A50C0000 		.4byte	0xca5
 3975 0c9a A50C0000 		.4byte	0xca5
 3976 0c9e 1C       		.uleb128 0x1c
 3977 0c9f E0000000 		.4byte	0xe0
 3978 0ca3 2D       		.byte	0x2d
 3979 0ca4 00       		.byte	0
 3980 0ca5 21       		.uleb128 0x21
 3981 0ca6 6B000000 		.4byte	0x6b
 3982 0caa 20       		.uleb128 0x20
 3983 0cab E8040000 		.4byte	.LASF113
 3984 0caf 01       		.byte	0x1
 3985 0cb0 3B       		.byte	0x3b
 3986 0cb1 BB0C0000 		.4byte	0xcbb
 3987 0cb5 05       		.uleb128 0x5
 3988 0cb6 03       		.byte	0x3
 3989 0cb7 00000000 		.4byte	cyImoFreqMhz2Reg
 3990 0cbb 21       		.uleb128 0x21
 3991 0cbc 950C0000 		.4byte	0xc95
 3992 0cc0 1B       		.uleb128 0x1b
 3993 0cc1 A50C0000 		.4byte	0xca5
 3994 0cc5 D00C0000 		.4byte	0xcd0
 3995 0cc9 1C       		.uleb128 0x1c
 3996 0cca E0000000 		.4byte	0xe0
 3997 0cce 16       		.byte	0x16
 3998 0ccf 00       		.byte	0
 3999 0cd0 20       		.uleb128 0x20
 4000 0cd1 1A060000 		.4byte	.LASF114
 4001 0cd5 01       		.byte	0x1
 4002 0cd6 4C       		.byte	0x4c
 4003 0cd7 E10C0000 		.4byte	0xce1
 4004 0cdb 05       		.uleb128 0x5
 4005 0cdc 03       		.byte	0x3
 4006 0cdd 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4007 0ce1 21       		.uleb128 0x21
 4008 0ce2 C00C0000 		.4byte	0xcc0
 4009 0ce6 20       		.uleb128 0x20
 4010 0ce7 38000000 		.4byte	.LASF115
 4011 0ceb 01       		.byte	0x1
 4012 0cec 5B       		.byte	0x5b
 4013 0ced 83000000 		.4byte	0x83
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 129


 4014 0cf1 05       		.uleb128 0x5
 4015 0cf2 03       		.byte	0x3
 4016 0cf3 00000000 		.4byte	CySysClkPumpConfig
 4017 0cf7 22       		.uleb128 0x22
 4018 0cf8 44030000 		.4byte	.LASF116
 4019 0cfc 44030000 		.4byte	.LASF116
 4020 0d00 03       		.byte	0x3
 4021 0d01 E5       		.byte	0xe5
 4022 0d02 22       		.uleb128 0x22
 4023 0d03 30050000 		.4byte	.LASF117
 4024 0d07 30050000 		.4byte	.LASF117
 4025 0d0b 03       		.byte	0x3
 4026 0d0c E6       		.byte	0xe6
 4027 0d0d 22       		.uleb128 0x22
 4028 0d0e 83050000 		.4byte	.LASF118
 4029 0d12 83050000 		.4byte	.LASF118
 4030 0d16 03       		.byte	0x3
 4031 0d17 DC       		.byte	0xdc
 4032 0d18 22       		.uleb128 0x22
 4033 0d19 03070000 		.4byte	.LASF119
 4034 0d1d 03070000 		.4byte	.LASF119
 4035 0d21 04       		.byte	0x4
 4036 0d22 54       		.byte	0x54
 4037 0d23 22       		.uleb128 0x22
 4038 0d24 5B070000 		.4byte	.LASF120
 4039 0d28 5B070000 		.4byte	.LASF120
 4040 0d2c 05       		.byte	0x5
 4041 0d2d 52       		.byte	0x52
 4042 0d2e 00       		.byte	0
 4043              		.section	.debug_abbrev,"",%progbits
 4044              	.Ldebug_abbrev0:
 4045 0000 01       		.uleb128 0x1
 4046 0001 11       		.uleb128 0x11
 4047 0002 01       		.byte	0x1
 4048 0003 25       		.uleb128 0x25
 4049 0004 0E       		.uleb128 0xe
 4050 0005 13       		.uleb128 0x13
 4051 0006 0B       		.uleb128 0xb
 4052 0007 03       		.uleb128 0x3
 4053 0008 0E       		.uleb128 0xe
 4054 0009 1B       		.uleb128 0x1b
 4055 000a 0E       		.uleb128 0xe
 4056 000b 55       		.uleb128 0x55
 4057 000c 17       		.uleb128 0x17
 4058 000d 11       		.uleb128 0x11
 4059 000e 01       		.uleb128 0x1
 4060 000f 10       		.uleb128 0x10
 4061 0010 17       		.uleb128 0x17
 4062 0011 00       		.byte	0
 4063 0012 00       		.byte	0
 4064 0013 02       		.uleb128 0x2
 4065 0014 24       		.uleb128 0x24
 4066 0015 00       		.byte	0
 4067 0016 0B       		.uleb128 0xb
 4068 0017 0B       		.uleb128 0xb
 4069 0018 3E       		.uleb128 0x3e
 4070 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 130


 4071 001a 03       		.uleb128 0x3
 4072 001b 0E       		.uleb128 0xe
 4073 001c 00       		.byte	0
 4074 001d 00       		.byte	0
 4075 001e 03       		.uleb128 0x3
 4076 001f 24       		.uleb128 0x24
 4077 0020 00       		.byte	0
 4078 0021 0B       		.uleb128 0xb
 4079 0022 0B       		.uleb128 0xb
 4080 0023 3E       		.uleb128 0x3e
 4081 0024 0B       		.uleb128 0xb
 4082 0025 03       		.uleb128 0x3
 4083 0026 08       		.uleb128 0x8
 4084 0027 00       		.byte	0
 4085 0028 00       		.byte	0
 4086 0029 04       		.uleb128 0x4
 4087 002a 16       		.uleb128 0x16
 4088 002b 00       		.byte	0
 4089 002c 03       		.uleb128 0x3
 4090 002d 0E       		.uleb128 0xe
 4091 002e 3A       		.uleb128 0x3a
 4092 002f 0B       		.uleb128 0xb
 4093 0030 3B       		.uleb128 0x3b
 4094 0031 05       		.uleb128 0x5
 4095 0032 49       		.uleb128 0x49
 4096 0033 13       		.uleb128 0x13
 4097 0034 00       		.byte	0
 4098 0035 00       		.byte	0
 4099 0036 05       		.uleb128 0x5
 4100 0037 35       		.uleb128 0x35
 4101 0038 00       		.byte	0
 4102 0039 49       		.uleb128 0x49
 4103 003a 13       		.uleb128 0x13
 4104 003b 00       		.byte	0
 4105 003c 00       		.byte	0
 4106 003d 06       		.uleb128 0x6
 4107 003e 0F       		.uleb128 0xf
 4108 003f 00       		.byte	0
 4109 0040 0B       		.uleb128 0xb
 4110 0041 0B       		.uleb128 0xb
 4111 0042 49       		.uleb128 0x49
 4112 0043 13       		.uleb128 0x13
 4113 0044 00       		.byte	0
 4114 0045 00       		.byte	0
 4115 0046 07       		.uleb128 0x7
 4116 0047 15       		.uleb128 0x15
 4117 0048 00       		.byte	0
 4118 0049 27       		.uleb128 0x27
 4119 004a 19       		.uleb128 0x19
 4120 004b 00       		.byte	0
 4121 004c 00       		.byte	0
 4122 004d 08       		.uleb128 0x8
 4123 004e 16       		.uleb128 0x16
 4124 004f 00       		.byte	0
 4125 0050 03       		.uleb128 0x3
 4126 0051 0E       		.uleb128 0xe
 4127 0052 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 131


 4128 0053 0B       		.uleb128 0xb
 4129 0054 3B       		.uleb128 0x3b
 4130 0055 0B       		.uleb128 0xb
 4131 0056 49       		.uleb128 0x49
 4132 0057 13       		.uleb128 0x13
 4133 0058 00       		.byte	0
 4134 0059 00       		.byte	0
 4135 005a 09       		.uleb128 0x9
 4136 005b 2E       		.uleb128 0x2e
 4137 005c 00       		.byte	0
 4138 005d 3F       		.uleb128 0x3f
 4139 005e 19       		.uleb128 0x19
 4140 005f 03       		.uleb128 0x3
 4141 0060 0E       		.uleb128 0xe
 4142 0061 3A       		.uleb128 0x3a
 4143 0062 0B       		.uleb128 0xb
 4144 0063 3B       		.uleb128 0x3b
 4145 0064 0B       		.uleb128 0xb
 4146 0065 27       		.uleb128 0x27
 4147 0066 19       		.uleb128 0x19
 4148 0067 11       		.uleb128 0x11
 4149 0068 01       		.uleb128 0x1
 4150 0069 12       		.uleb128 0x12
 4151 006a 06       		.uleb128 0x6
 4152 006b 40       		.uleb128 0x40
 4153 006c 18       		.uleb128 0x18
 4154 006d 9742     		.uleb128 0x2117
 4155 006f 19       		.uleb128 0x19
 4156 0070 00       		.byte	0
 4157 0071 00       		.byte	0
 4158 0072 0A       		.uleb128 0xa
 4159 0073 2E       		.uleb128 0x2e
 4160 0074 00       		.byte	0
 4161 0075 3F       		.uleb128 0x3f
 4162 0076 19       		.uleb128 0x19
 4163 0077 03       		.uleb128 0x3
 4164 0078 0E       		.uleb128 0xe
 4165 0079 3A       		.uleb128 0x3a
 4166 007a 0B       		.uleb128 0xb
 4167 007b 3B       		.uleb128 0x3b
 4168 007c 05       		.uleb128 0x5
 4169 007d 27       		.uleb128 0x27
 4170 007e 19       		.uleb128 0x19
 4171 007f 11       		.uleb128 0x11
 4172 0080 01       		.uleb128 0x1
 4173 0081 12       		.uleb128 0x12
 4174 0082 06       		.uleb128 0x6
 4175 0083 40       		.uleb128 0x40
 4176 0084 18       		.uleb128 0x18
 4177 0085 9742     		.uleb128 0x2117
 4178 0087 19       		.uleb128 0x19
 4179 0088 00       		.byte	0
 4180 0089 00       		.byte	0
 4181 008a 0B       		.uleb128 0xb
 4182 008b 2E       		.uleb128 0x2e
 4183 008c 01       		.byte	0x1
 4184 008d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 132


 4185 008e 19       		.uleb128 0x19
 4186 008f 03       		.uleb128 0x3
 4187 0090 0E       		.uleb128 0xe
 4188 0091 3A       		.uleb128 0x3a
 4189 0092 0B       		.uleb128 0xb
 4190 0093 3B       		.uleb128 0x3b
 4191 0094 0B       		.uleb128 0xb
 4192 0095 27       		.uleb128 0x27
 4193 0096 19       		.uleb128 0x19
 4194 0097 11       		.uleb128 0x11
 4195 0098 01       		.uleb128 0x1
 4196 0099 12       		.uleb128 0x12
 4197 009a 06       		.uleb128 0x6
 4198 009b 40       		.uleb128 0x40
 4199 009c 18       		.uleb128 0x18
 4200 009d 9742     		.uleb128 0x2117
 4201 009f 19       		.uleb128 0x19
 4202 00a0 01       		.uleb128 0x1
 4203 00a1 13       		.uleb128 0x13
 4204 00a2 00       		.byte	0
 4205 00a3 00       		.byte	0
 4206 00a4 0C       		.uleb128 0xc
 4207 00a5 898201   		.uleb128 0x4109
 4208 00a8 00       		.byte	0
 4209 00a9 11       		.uleb128 0x11
 4210 00aa 01       		.uleb128 0x1
 4211 00ab 31       		.uleb128 0x31
 4212 00ac 13       		.uleb128 0x13
 4213 00ad 00       		.byte	0
 4214 00ae 00       		.byte	0
 4215 00af 0D       		.uleb128 0xd
 4216 00b0 2E       		.uleb128 0x2e
 4217 00b1 00       		.byte	0
 4218 00b2 3F       		.uleb128 0x3f
 4219 00b3 19       		.uleb128 0x19
 4220 00b4 03       		.uleb128 0x3
 4221 00b5 0E       		.uleb128 0xe
 4222 00b6 3A       		.uleb128 0x3a
 4223 00b7 0B       		.uleb128 0xb
 4224 00b8 3B       		.uleb128 0x3b
 4225 00b9 05       		.uleb128 0x5
 4226 00ba 27       		.uleb128 0x27
 4227 00bb 19       		.uleb128 0x19
 4228 00bc 49       		.uleb128 0x49
 4229 00bd 13       		.uleb128 0x13
 4230 00be 11       		.uleb128 0x11
 4231 00bf 01       		.uleb128 0x1
 4232 00c0 12       		.uleb128 0x12
 4233 00c1 06       		.uleb128 0x6
 4234 00c2 40       		.uleb128 0x40
 4235 00c3 18       		.uleb128 0x18
 4236 00c4 9742     		.uleb128 0x2117
 4237 00c6 19       		.uleb128 0x19
 4238 00c7 00       		.byte	0
 4239 00c8 00       		.byte	0
 4240 00c9 0E       		.uleb128 0xe
 4241 00ca 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 133


 4242 00cb 01       		.byte	0x1
 4243 00cc 3F       		.uleb128 0x3f
 4244 00cd 19       		.uleb128 0x19
 4245 00ce 03       		.uleb128 0x3
 4246 00cf 0E       		.uleb128 0xe
 4247 00d0 3A       		.uleb128 0x3a
 4248 00d1 0B       		.uleb128 0xb
 4249 00d2 3B       		.uleb128 0x3b
 4250 00d3 05       		.uleb128 0x5
 4251 00d4 27       		.uleb128 0x27
 4252 00d5 19       		.uleb128 0x19
 4253 00d6 11       		.uleb128 0x11
 4254 00d7 01       		.uleb128 0x1
 4255 00d8 12       		.uleb128 0x12
 4256 00d9 06       		.uleb128 0x6
 4257 00da 40       		.uleb128 0x40
 4258 00db 18       		.uleb128 0x18
 4259 00dc 9742     		.uleb128 0x2117
 4260 00de 19       		.uleb128 0x19
 4261 00df 01       		.uleb128 0x1
 4262 00e0 13       		.uleb128 0x13
 4263 00e1 00       		.byte	0
 4264 00e2 00       		.byte	0
 4265 00e3 0F       		.uleb128 0xf
 4266 00e4 05       		.uleb128 0x5
 4267 00e5 00       		.byte	0
 4268 00e6 03       		.uleb128 0x3
 4269 00e7 0E       		.uleb128 0xe
 4270 00e8 3A       		.uleb128 0x3a
 4271 00e9 0B       		.uleb128 0xb
 4272 00ea 3B       		.uleb128 0x3b
 4273 00eb 05       		.uleb128 0x5
 4274 00ec 49       		.uleb128 0x49
 4275 00ed 13       		.uleb128 0x13
 4276 00ee 02       		.uleb128 0x2
 4277 00ef 17       		.uleb128 0x17
 4278 00f0 00       		.byte	0
 4279 00f1 00       		.byte	0
 4280 00f2 10       		.uleb128 0x10
 4281 00f3 34       		.uleb128 0x34
 4282 00f4 00       		.byte	0
 4283 00f5 03       		.uleb128 0x3
 4284 00f6 0E       		.uleb128 0xe
 4285 00f7 3A       		.uleb128 0x3a
 4286 00f8 0B       		.uleb128 0xb
 4287 00f9 3B       		.uleb128 0x3b
 4288 00fa 05       		.uleb128 0x5
 4289 00fb 49       		.uleb128 0x49
 4290 00fc 13       		.uleb128 0x13
 4291 00fd 02       		.uleb128 0x2
 4292 00fe 17       		.uleb128 0x17
 4293 00ff 00       		.byte	0
 4294 0100 00       		.byte	0
 4295 0101 11       		.uleb128 0x11
 4296 0102 05       		.uleb128 0x5
 4297 0103 00       		.byte	0
 4298 0104 03       		.uleb128 0x3
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 134


 4299 0105 0E       		.uleb128 0xe
 4300 0106 3A       		.uleb128 0x3a
 4301 0107 0B       		.uleb128 0xb
 4302 0108 3B       		.uleb128 0x3b
 4303 0109 05       		.uleb128 0x5
 4304 010a 49       		.uleb128 0x49
 4305 010b 13       		.uleb128 0x13
 4306 010c 02       		.uleb128 0x2
 4307 010d 18       		.uleb128 0x18
 4308 010e 00       		.byte	0
 4309 010f 00       		.byte	0
 4310 0110 12       		.uleb128 0x12
 4311 0111 2E       		.uleb128 0x2e
 4312 0112 01       		.byte	0x1
 4313 0113 3F       		.uleb128 0x3f
 4314 0114 19       		.uleb128 0x19
 4315 0115 03       		.uleb128 0x3
 4316 0116 0E       		.uleb128 0xe
 4317 0117 3A       		.uleb128 0x3a
 4318 0118 0B       		.uleb128 0xb
 4319 0119 3B       		.uleb128 0x3b
 4320 011a 05       		.uleb128 0x5
 4321 011b 27       		.uleb128 0x27
 4322 011c 19       		.uleb128 0x19
 4323 011d 49       		.uleb128 0x49
 4324 011e 13       		.uleb128 0x13
 4325 011f 11       		.uleb128 0x11
 4326 0120 01       		.uleb128 0x1
 4327 0121 12       		.uleb128 0x12
 4328 0122 06       		.uleb128 0x6
 4329 0123 40       		.uleb128 0x40
 4330 0124 18       		.uleb128 0x18
 4331 0125 9742     		.uleb128 0x2117
 4332 0127 19       		.uleb128 0x19
 4333 0128 01       		.uleb128 0x1
 4334 0129 13       		.uleb128 0x13
 4335 012a 00       		.byte	0
 4336 012b 00       		.byte	0
 4337 012c 13       		.uleb128 0x13
 4338 012d 34       		.uleb128 0x34
 4339 012e 00       		.byte	0
 4340 012f 03       		.uleb128 0x3
 4341 0130 0E       		.uleb128 0xe
 4342 0131 3A       		.uleb128 0x3a
 4343 0132 0B       		.uleb128 0xb
 4344 0133 3B       		.uleb128 0x3b
 4345 0134 05       		.uleb128 0x5
 4346 0135 49       		.uleb128 0x49
 4347 0136 13       		.uleb128 0x13
 4348 0137 02       		.uleb128 0x2
 4349 0138 18       		.uleb128 0x18
 4350 0139 00       		.byte	0
 4351 013a 00       		.byte	0
 4352 013b 14       		.uleb128 0x14
 4353 013c 34       		.uleb128 0x34
 4354 013d 00       		.byte	0
 4355 013e 03       		.uleb128 0x3
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 135


 4356 013f 0E       		.uleb128 0xe
 4357 0140 3A       		.uleb128 0x3a
 4358 0141 0B       		.uleb128 0xb
 4359 0142 3B       		.uleb128 0x3b
 4360 0143 05       		.uleb128 0x5
 4361 0144 49       		.uleb128 0x49
 4362 0145 13       		.uleb128 0x13
 4363 0146 1C       		.uleb128 0x1c
 4364 0147 06       		.uleb128 0x6
 4365 0148 00       		.byte	0
 4366 0149 00       		.byte	0
 4367 014a 15       		.uleb128 0x15
 4368 014b 898201   		.uleb128 0x4109
 4369 014e 01       		.byte	0x1
 4370 014f 11       		.uleb128 0x11
 4371 0150 01       		.uleb128 0x1
 4372 0151 31       		.uleb128 0x31
 4373 0152 13       		.uleb128 0x13
 4374 0153 00       		.byte	0
 4375 0154 00       		.byte	0
 4376 0155 16       		.uleb128 0x16
 4377 0156 8A8201   		.uleb128 0x410a
 4378 0159 00       		.byte	0
 4379 015a 02       		.uleb128 0x2
 4380 015b 18       		.uleb128 0x18
 4381 015c 9142     		.uleb128 0x2111
 4382 015e 18       		.uleb128 0x18
 4383 015f 00       		.byte	0
 4384 0160 00       		.byte	0
 4385 0161 17       		.uleb128 0x17
 4386 0162 898201   		.uleb128 0x4109
 4387 0165 01       		.byte	0x1
 4388 0166 11       		.uleb128 0x11
 4389 0167 01       		.uleb128 0x1
 4390 0168 31       		.uleb128 0x31
 4391 0169 13       		.uleb128 0x13
 4392 016a 01       		.uleb128 0x1
 4393 016b 13       		.uleb128 0x13
 4394 016c 00       		.byte	0
 4395 016d 00       		.byte	0
 4396 016e 18       		.uleb128 0x18
 4397 016f 34       		.uleb128 0x34
 4398 0170 00       		.byte	0
 4399 0171 03       		.uleb128 0x3
 4400 0172 08       		.uleb128 0x8
 4401 0173 3A       		.uleb128 0x3a
 4402 0174 0B       		.uleb128 0xb
 4403 0175 3B       		.uleb128 0x3b
 4404 0176 0B       		.uleb128 0xb
 4405 0177 49       		.uleb128 0x49
 4406 0178 13       		.uleb128 0x13
 4407 0179 02       		.uleb128 0x2
 4408 017a 17       		.uleb128 0x17
 4409 017b 00       		.byte	0
 4410 017c 00       		.byte	0
 4411 017d 19       		.uleb128 0x19
 4412 017e 34       		.uleb128 0x34
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 136


 4413 017f 00       		.byte	0
 4414 0180 03       		.uleb128 0x3
 4415 0181 0E       		.uleb128 0xe
 4416 0182 3A       		.uleb128 0x3a
 4417 0183 0B       		.uleb128 0xb
 4418 0184 3B       		.uleb128 0x3b
 4419 0185 0B       		.uleb128 0xb
 4420 0186 49       		.uleb128 0x49
 4421 0187 13       		.uleb128 0x13
 4422 0188 02       		.uleb128 0x2
 4423 0189 17       		.uleb128 0x17
 4424 018a 00       		.byte	0
 4425 018b 00       		.byte	0
 4426 018c 1A       		.uleb128 0x1a
 4427 018d 34       		.uleb128 0x34
 4428 018e 00       		.byte	0
 4429 018f 03       		.uleb128 0x3
 4430 0190 0E       		.uleb128 0xe
 4431 0191 3A       		.uleb128 0x3a
 4432 0192 0B       		.uleb128 0xb
 4433 0193 3B       		.uleb128 0x3b
 4434 0194 0B       		.uleb128 0xb
 4435 0195 49       		.uleb128 0x49
 4436 0196 13       		.uleb128 0x13
 4437 0197 02       		.uleb128 0x2
 4438 0198 18       		.uleb128 0x18
 4439 0199 00       		.byte	0
 4440 019a 00       		.byte	0
 4441 019b 1B       		.uleb128 0x1b
 4442 019c 01       		.uleb128 0x1
 4443 019d 01       		.byte	0x1
 4444 019e 49       		.uleb128 0x49
 4445 019f 13       		.uleb128 0x13
 4446 01a0 01       		.uleb128 0x1
 4447 01a1 13       		.uleb128 0x13
 4448 01a2 00       		.byte	0
 4449 01a3 00       		.byte	0
 4450 01a4 1C       		.uleb128 0x1c
 4451 01a5 21       		.uleb128 0x21
 4452 01a6 00       		.byte	0
 4453 01a7 49       		.uleb128 0x49
 4454 01a8 13       		.uleb128 0x13
 4455 01a9 2F       		.uleb128 0x2f
 4456 01aa 0B       		.uleb128 0xb
 4457 01ab 00       		.byte	0
 4458 01ac 00       		.byte	0
 4459 01ad 1D       		.uleb128 0x1d
 4460 01ae 2E       		.uleb128 0x2e
 4461 01af 01       		.byte	0x1
 4462 01b0 3F       		.uleb128 0x3f
 4463 01b1 19       		.uleb128 0x19
 4464 01b2 03       		.uleb128 0x3
 4465 01b3 0E       		.uleb128 0xe
 4466 01b4 3A       		.uleb128 0x3a
 4467 01b5 0B       		.uleb128 0xb
 4468 01b6 3B       		.uleb128 0x3b
 4469 01b7 05       		.uleb128 0x5
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 137


 4470 01b8 27       		.uleb128 0x27
 4471 01b9 19       		.uleb128 0x19
 4472 01ba 11       		.uleb128 0x11
 4473 01bb 01       		.uleb128 0x1
 4474 01bc 12       		.uleb128 0x12
 4475 01bd 06       		.uleb128 0x6
 4476 01be 40       		.uleb128 0x40
 4477 01bf 18       		.uleb128 0x18
 4478 01c0 9642     		.uleb128 0x2116
 4479 01c2 19       		.uleb128 0x19
 4480 01c3 01       		.uleb128 0x1
 4481 01c4 13       		.uleb128 0x13
 4482 01c5 00       		.byte	0
 4483 01c6 00       		.byte	0
 4484 01c7 1E       		.uleb128 0x1e
 4485 01c8 2E       		.uleb128 0x2e
 4486 01c9 01       		.byte	0x1
 4487 01ca 03       		.uleb128 0x3
 4488 01cb 0E       		.uleb128 0xe
 4489 01cc 3A       		.uleb128 0x3a
 4490 01cd 0B       		.uleb128 0xb
 4491 01ce 3B       		.uleb128 0x3b
 4492 01cf 05       		.uleb128 0x5
 4493 01d0 27       		.uleb128 0x27
 4494 01d1 19       		.uleb128 0x19
 4495 01d2 11       		.uleb128 0x11
 4496 01d3 01       		.uleb128 0x1
 4497 01d4 12       		.uleb128 0x12
 4498 01d5 06       		.uleb128 0x6
 4499 01d6 40       		.uleb128 0x40
 4500 01d7 18       		.uleb128 0x18
 4501 01d8 9642     		.uleb128 0x2116
 4502 01da 19       		.uleb128 0x19
 4503 01db 01       		.uleb128 0x1
 4504 01dc 13       		.uleb128 0x13
 4505 01dd 00       		.byte	0
 4506 01de 00       		.byte	0
 4507 01df 1F       		.uleb128 0x1f
 4508 01e0 34       		.uleb128 0x34
 4509 01e1 00       		.byte	0
 4510 01e2 03       		.uleb128 0x3
 4511 01e3 08       		.uleb128 0x8
 4512 01e4 3A       		.uleb128 0x3a
 4513 01e5 0B       		.uleb128 0xb
 4514 01e6 3B       		.uleb128 0x3b
 4515 01e7 05       		.uleb128 0x5
 4516 01e8 49       		.uleb128 0x49
 4517 01e9 13       		.uleb128 0x13
 4518 01ea 02       		.uleb128 0x2
 4519 01eb 17       		.uleb128 0x17
 4520 01ec 00       		.byte	0
 4521 01ed 00       		.byte	0
 4522 01ee 20       		.uleb128 0x20
 4523 01ef 34       		.uleb128 0x34
 4524 01f0 00       		.byte	0
 4525 01f1 03       		.uleb128 0x3
 4526 01f2 0E       		.uleb128 0xe
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 138


 4527 01f3 3A       		.uleb128 0x3a
 4528 01f4 0B       		.uleb128 0xb
 4529 01f5 3B       		.uleb128 0x3b
 4530 01f6 0B       		.uleb128 0xb
 4531 01f7 49       		.uleb128 0x49
 4532 01f8 13       		.uleb128 0x13
 4533 01f9 3F       		.uleb128 0x3f
 4534 01fa 19       		.uleb128 0x19
 4535 01fb 02       		.uleb128 0x2
 4536 01fc 18       		.uleb128 0x18
 4537 01fd 00       		.byte	0
 4538 01fe 00       		.byte	0
 4539 01ff 21       		.uleb128 0x21
 4540 0200 26       		.uleb128 0x26
 4541 0201 00       		.byte	0
 4542 0202 49       		.uleb128 0x49
 4543 0203 13       		.uleb128 0x13
 4544 0204 00       		.byte	0
 4545 0205 00       		.byte	0
 4546 0206 22       		.uleb128 0x22
 4547 0207 2E       		.uleb128 0x2e
 4548 0208 00       		.byte	0
 4549 0209 3F       		.uleb128 0x3f
 4550 020a 19       		.uleb128 0x19
 4551 020b 3C       		.uleb128 0x3c
 4552 020c 19       		.uleb128 0x19
 4553 020d 6E       		.uleb128 0x6e
 4554 020e 0E       		.uleb128 0xe
 4555 020f 03       		.uleb128 0x3
 4556 0210 0E       		.uleb128 0xe
 4557 0211 3A       		.uleb128 0x3a
 4558 0212 0B       		.uleb128 0xb
 4559 0213 3B       		.uleb128 0x3b
 4560 0214 0B       		.uleb128 0xb
 4561 0215 00       		.byte	0
 4562 0216 00       		.byte	0
 4563 0217 00       		.byte	0
 4564              		.section	.debug_loc,"",%progbits
 4565              	.Ldebug_loc0:
 4566              	.LLST0:
 4567 0000 00000000 		.4byte	.LVL1
 4568 0004 07000000 		.4byte	.LVL2-1
 4569 0008 0100     		.2byte	0x1
 4570 000a 50       		.byte	0x50
 4571 000b 07000000 		.4byte	.LVL2-1
 4572 000f 12000000 		.4byte	.LVL4
 4573 0013 0100     		.2byte	0x1
 4574 0015 54       		.byte	0x54
 4575 0016 12000000 		.4byte	.LVL4
 4576 001a 20000000 		.4byte	.LFE6
 4577 001e 0400     		.2byte	0x4
 4578 0020 F3       		.byte	0xf3
 4579 0021 01       		.uleb128 0x1
 4580 0022 50       		.byte	0x50
 4581 0023 9F       		.byte	0x9f
 4582 0024 00000000 		.4byte	0
 4583 0028 00000000 		.4byte	0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 139


 4584              	.LLST1:
 4585 002c 08000000 		.4byte	.LVL2
 4586 0030 19000000 		.4byte	.LVL6-1
 4587 0034 0100     		.2byte	0x1
 4588 0036 50       		.byte	0x50
 4589 0037 00000000 		.4byte	0
 4590 003b 00000000 		.4byte	0
 4591              	.LLST2:
 4592 003f 10000000 		.4byte	.LVL3
 4593 0043 14000000 		.4byte	.LVL5
 4594 0047 0100     		.2byte	0x1
 4595 0049 53       		.byte	0x53
 4596 004a 14000000 		.4byte	.LVL5
 4597 004e 1A000000 		.4byte	.LVL7
 4598 0052 0100     		.2byte	0x1
 4599 0054 54       		.byte	0x54
 4600 0055 00000000 		.4byte	0
 4601 0059 00000000 		.4byte	0
 4602              	.LLST3:
 4603 005d 06000000 		.4byte	.LVL9
 4604 0061 11000000 		.4byte	.LVL11-1
 4605 0065 0100     		.2byte	0x1
 4606 0067 50       		.byte	0x50
 4607 0068 00000000 		.4byte	0
 4608 006c 00000000 		.4byte	0
 4609              	.LLST4:
 4610 0070 0E000000 		.4byte	.LVL10
 4611 0074 14000000 		.4byte	.LVL12
 4612 0078 0100     		.2byte	0x1
 4613 007a 54       		.byte	0x54
 4614 007b 14000000 		.4byte	.LVL12
 4615 007f 1C000000 		.4byte	.LFE8
 4616 0083 0100     		.2byte	0x1
 4617 0085 50       		.byte	0x50
 4618 0086 00000000 		.4byte	0
 4619 008a 00000000 		.4byte	0
 4620              	.LLST5:
 4621 008e 00000000 		.4byte	.LVL13
 4622 0092 07000000 		.4byte	.LVL14-1
 4623 0096 0100     		.2byte	0x1
 4624 0098 50       		.byte	0x50
 4625 0099 07000000 		.4byte	.LVL14-1
 4626 009d 14000000 		.4byte	.LVL15
 4627 00a1 0100     		.2byte	0x1
 4628 00a3 54       		.byte	0x54
 4629 00a4 14000000 		.4byte	.LVL15
 4630 00a8 30000000 		.4byte	.LFE9
 4631 00ac 0400     		.2byte	0x4
 4632 00ae F3       		.byte	0xf3
 4633 00af 01       		.uleb128 0x1
 4634 00b0 50       		.byte	0x50
 4635 00b1 9F       		.byte	0x9f
 4636 00b2 00000000 		.4byte	0
 4637 00b6 00000000 		.4byte	0
 4638              	.LLST6:
 4639 00ba 08000000 		.4byte	.LVL14
 4640 00be 23000000 		.4byte	.LVL16-1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 140


 4641 00c2 0100     		.2byte	0x1
 4642 00c4 50       		.byte	0x50
 4643 00c5 00000000 		.4byte	0
 4644 00c9 00000000 		.4byte	0
 4645              	.LLST7:
 4646 00cd 00000000 		.4byte	.LVL17
 4647 00d1 04000000 		.4byte	.LVL18
 4648 00d5 0100     		.2byte	0x1
 4649 00d7 50       		.byte	0x50
 4650 00d8 04000000 		.4byte	.LVL18
 4651 00dc 14000000 		.4byte	.LFE15
 4652 00e0 0100     		.2byte	0x1
 4653 00e2 52       		.byte	0x52
 4654 00e3 00000000 		.4byte	0
 4655 00e7 00000000 		.4byte	0
 4656              	.LLST8:
 4657 00eb 00000000 		.4byte	.LVL23
 4658 00ef 04000000 		.4byte	.LVL24
 4659 00f3 0100     		.2byte	0x1
 4660 00f5 50       		.byte	0x50
 4661 00f6 04000000 		.4byte	.LVL24
 4662 00fa 14000000 		.4byte	.LFE24
 4663 00fe 0400     		.2byte	0x4
 4664 0100 F3       		.byte	0xf3
 4665 0101 01       		.uleb128 0x1
 4666 0102 50       		.byte	0x50
 4667 0103 9F       		.byte	0x9f
 4668 0104 00000000 		.4byte	0
 4669 0108 00000000 		.4byte	0
 4670              	.LLST9:
 4671 010c 00000000 		.4byte	.LVL25
 4672 0110 08000000 		.4byte	.LVL26
 4673 0114 0100     		.2byte	0x1
 4674 0116 50       		.byte	0x50
 4675 0117 08000000 		.4byte	.LVL26
 4676 011b 18000000 		.4byte	.LFE25
 4677 011f 0400     		.2byte	0x4
 4678 0121 F3       		.byte	0xf3
 4679 0122 01       		.uleb128 0x1
 4680 0123 50       		.byte	0x50
 4681 0124 9F       		.byte	0x9f
 4682 0125 00000000 		.4byte	0
 4683 0129 00000000 		.4byte	0
 4684              	.LLST10:
 4685 012d 00000000 		.4byte	.LVL27
 4686 0131 04000000 		.4byte	.LVL28
 4687 0135 0100     		.2byte	0x1
 4688 0137 50       		.byte	0x50
 4689 0138 04000000 		.4byte	.LVL28
 4690 013c 14000000 		.4byte	.LFE26
 4691 0140 0400     		.2byte	0x4
 4692 0142 F3       		.byte	0xf3
 4693 0143 01       		.uleb128 0x1
 4694 0144 50       		.byte	0x50
 4695 0145 9F       		.byte	0x9f
 4696 0146 00000000 		.4byte	0
 4697 014a 00000000 		.4byte	0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 141


 4698              	.LLST11:
 4699 014e 00000000 		.4byte	.LVL29
 4700 0152 04000000 		.4byte	.LVL30
 4701 0156 0100     		.2byte	0x1
 4702 0158 50       		.byte	0x50
 4703 0159 04000000 		.4byte	.LVL30
 4704 015d 14000000 		.4byte	.LFE27
 4705 0161 0400     		.2byte	0x4
 4706 0163 F3       		.byte	0xf3
 4707 0164 01       		.uleb128 0x1
 4708 0165 50       		.byte	0x50
 4709 0166 9F       		.byte	0x9f
 4710 0167 00000000 		.4byte	0
 4711 016b 00000000 		.4byte	0
 4712              	.LLST12:
 4713 016f 00000000 		.4byte	.LVL31
 4714 0173 04000000 		.4byte	.LVL32
 4715 0177 0100     		.2byte	0x1
 4716 0179 50       		.byte	0x50
 4717 017a 04000000 		.4byte	.LVL32
 4718 017e 14000000 		.4byte	.LFE28
 4719 0182 0400     		.2byte	0x4
 4720 0184 F3       		.byte	0xf3
 4721 0185 01       		.uleb128 0x1
 4722 0186 50       		.byte	0x50
 4723 0187 9F       		.byte	0x9f
 4724 0188 00000000 		.4byte	0
 4725 018c 00000000 		.4byte	0
 4726              	.LLST13:
 4727 0190 00000000 		.4byte	.LVL34
 4728 0194 0C000000 		.4byte	.LVL36
 4729 0198 0100     		.2byte	0x1
 4730 019a 50       		.byte	0x50
 4731 019b 0C000000 		.4byte	.LVL36
 4732 019f 20000000 		.4byte	.LFE18
 4733 01a3 0400     		.2byte	0x4
 4734 01a5 F3       		.byte	0xf3
 4735 01a6 01       		.uleb128 0x1
 4736 01a7 50       		.byte	0x50
 4737 01a8 9F       		.byte	0x9f
 4738 01a9 00000000 		.4byte	0
 4739 01ad 00000000 		.4byte	0
 4740              	.LLST14:
 4741 01b1 00000000 		.4byte	.LVL34
 4742 01b5 0F000000 		.4byte	.LVL37-1
 4743 01b9 0100     		.2byte	0x1
 4744 01bb 51       		.byte	0x51
 4745 01bc 0F000000 		.4byte	.LVL37-1
 4746 01c0 1E000000 		.4byte	.LVL39
 4747 01c4 0100     		.2byte	0x1
 4748 01c6 55       		.byte	0x55
 4749 01c7 1E000000 		.4byte	.LVL39
 4750 01cb 20000000 		.4byte	.LFE18
 4751 01cf 0400     		.2byte	0x4
 4752 01d1 F3       		.byte	0xf3
 4753 01d2 01       		.uleb128 0x1
 4754 01d3 51       		.byte	0x51
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 142


 4755 01d4 9F       		.byte	0x9f
 4756 01d5 00000000 		.4byte	0
 4757 01d9 00000000 		.4byte	0
 4758              	.LLST15:
 4759 01dd 00000000 		.4byte	.LVL40
 4760 01e1 0A000000 		.4byte	.LVL42
 4761 01e5 0100     		.2byte	0x1
 4762 01e7 50       		.byte	0x50
 4763 01e8 0A000000 		.4byte	.LVL42
 4764 01ec 1C000000 		.4byte	.LFE19
 4765 01f0 0400     		.2byte	0x4
 4766 01f2 F3       		.byte	0xf3
 4767 01f3 01       		.uleb128 0x1
 4768 01f4 50       		.byte	0x50
 4769 01f5 9F       		.byte	0x9f
 4770 01f6 00000000 		.4byte	0
 4771 01fa 00000000 		.4byte	0
 4772              	.LLST16:
 4773 01fe 00000000 		.4byte	.LVL44
 4774 0202 0C000000 		.4byte	.LVL46
 4775 0206 0100     		.2byte	0x1
 4776 0208 50       		.byte	0x50
 4777 0209 0C000000 		.4byte	.LVL46
 4778 020d 22000000 		.4byte	.LFE20
 4779 0211 0400     		.2byte	0x4
 4780 0213 F3       		.byte	0xf3
 4781 0214 01       		.uleb128 0x1
 4782 0215 50       		.byte	0x50
 4783 0216 9F       		.byte	0x9f
 4784 0217 00000000 		.4byte	0
 4785 021b 00000000 		.4byte	0
 4786              	.LLST17:
 4787 021f 00000000 		.4byte	.LVL44
 4788 0223 0F000000 		.4byte	.LVL47-1
 4789 0227 0100     		.2byte	0x1
 4790 0229 51       		.byte	0x51
 4791 022a 0F000000 		.4byte	.LVL47-1
 4792 022e 20000000 		.4byte	.LVL49
 4793 0232 0100     		.2byte	0x1
 4794 0234 55       		.byte	0x55
 4795 0235 20000000 		.4byte	.LVL49
 4796 0239 22000000 		.4byte	.LFE20
 4797 023d 0400     		.2byte	0x4
 4798 023f F3       		.byte	0xf3
 4799 0240 01       		.uleb128 0x1
 4800 0241 51       		.byte	0x51
 4801 0242 9F       		.byte	0x9f
 4802 0243 00000000 		.4byte	0
 4803 0247 00000000 		.4byte	0
 4804              	.LLST18:
 4805 024b 00000000 		.4byte	.LVL50
 4806 024f 0A000000 		.4byte	.LVL52
 4807 0253 0100     		.2byte	0x1
 4808 0255 50       		.byte	0x50
 4809 0256 0A000000 		.4byte	.LVL52
 4810 025a 1E000000 		.4byte	.LFE21
 4811 025e 0400     		.2byte	0x4
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 143


 4812 0260 F3       		.byte	0xf3
 4813 0261 01       		.uleb128 0x1
 4814 0262 50       		.byte	0x50
 4815 0263 9F       		.byte	0x9f
 4816 0264 00000000 		.4byte	0
 4817 0268 00000000 		.4byte	0
 4818              	.LLST19:
 4819 026c 00000000 		.4byte	.LVL54
 4820 0270 0C000000 		.4byte	.LVL55
 4821 0274 0100     		.2byte	0x1
 4822 0276 50       		.byte	0x50
 4823 0277 0C000000 		.4byte	.LVL55
 4824 027b 4C000000 		.4byte	.LFE22
 4825 027f 0400     		.2byte	0x4
 4826 0281 F3       		.byte	0xf3
 4827 0282 01       		.uleb128 0x1
 4828 0283 50       		.byte	0x50
 4829 0284 9F       		.byte	0x9f
 4830 0285 00000000 		.4byte	0
 4831 0289 00000000 		.4byte	0
 4832              	.LLST20:
 4833 028d 00000000 		.4byte	.LVL54
 4834 0291 0F000000 		.4byte	.LVL56-1
 4835 0295 0100     		.2byte	0x1
 4836 0297 51       		.byte	0x51
 4837 0298 0F000000 		.4byte	.LVL56-1
 4838 029c 4C000000 		.4byte	.LFE22
 4839 02a0 0400     		.2byte	0x4
 4840 02a2 F3       		.byte	0xf3
 4841 02a3 01       		.uleb128 0x1
 4842 02a4 51       		.byte	0x51
 4843 02a5 9F       		.byte	0x9f
 4844 02a6 00000000 		.4byte	0
 4845 02aa 00000000 		.4byte	0
 4846              	.LLST21:
 4847 02ae 26000000 		.4byte	.LVL59
 4848 02b2 45000000 		.4byte	.LVL65-1
 4849 02b6 0100     		.2byte	0x1
 4850 02b8 50       		.byte	0x50
 4851 02b9 00000000 		.4byte	0
 4852 02bd 00000000 		.4byte	0
 4853              	.LLST22:
 4854 02c1 22000000 		.4byte	.LVL58
 4855 02c5 46000000 		.4byte	.LVL66
 4856 02c9 0100     		.2byte	0x1
 4857 02cb 55       		.byte	0x55
 4858 02cc 00000000 		.4byte	0
 4859 02d0 00000000 		.4byte	0
 4860              	.LLST23:
 4861 02d4 32000000 		.4byte	.LVL60
 4862 02d8 38000000 		.4byte	.LVL61
 4863 02dc 0100     		.2byte	0x1
 4864 02de 51       		.byte	0x51
 4865 02df 3A000000 		.4byte	.LVL62
 4866 02e3 3C000000 		.4byte	.LVL63
 4867 02e7 0100     		.2byte	0x1
 4868 02e9 51       		.byte	0x51
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 144


 4869 02ea 3C000000 		.4byte	.LVL63
 4870 02ee 40000000 		.4byte	.LVL64
 4871 02f2 0100     		.2byte	0x1
 4872 02f4 53       		.byte	0x53
 4873 02f5 40000000 		.4byte	.LVL64
 4874 02f9 45000000 		.4byte	.LVL65-1
 4875 02fd 0100     		.2byte	0x1
 4876 02ff 51       		.byte	0x51
 4877 0300 00000000 		.4byte	0
 4878 0304 00000000 		.4byte	0
 4879              	.LLST24:
 4880 0308 00000000 		.4byte	.LVL67
 4881 030c 0A000000 		.4byte	.LVL68
 4882 0310 0100     		.2byte	0x1
 4883 0312 50       		.byte	0x50
 4884 0313 0A000000 		.4byte	.LVL68
 4885 0317 2C000000 		.4byte	.LFE23
 4886 031b 0400     		.2byte	0x4
 4887 031d F3       		.byte	0xf3
 4888 031e 01       		.uleb128 0x1
 4889 031f 50       		.byte	0x50
 4890 0320 9F       		.byte	0x9f
 4891 0321 00000000 		.4byte	0
 4892 0325 00000000 		.4byte	0
 4893              	.LLST25:
 4894 0329 24000000 		.4byte	.LVL70
 4895 032d 26000000 		.4byte	.LVL71
 4896 0331 0100     		.2byte	0x1
 4897 0333 50       		.byte	0x50
 4898 0334 00000000 		.4byte	0
 4899 0338 00000000 		.4byte	0
 4900              	.LLST26:
 4901 033c 00000000 		.4byte	.LVL72
 4902 0340 06000000 		.4byte	.LVL73
 4903 0344 0100     		.2byte	0x1
 4904 0346 50       		.byte	0x50
 4905 0347 06000000 		.4byte	.LVL73
 4906 034b 26000000 		.4byte	.LVL77
 4907 034f 0100     		.2byte	0x1
 4908 0351 54       		.byte	0x54
 4909 0352 00000000 		.4byte	0
 4910 0356 00000000 		.4byte	0
 4911              	.LLST27:
 4912 035a 12000000 		.4byte	.LVL81
 4913 035e 16000000 		.4byte	.LVL82
 4914 0362 0200     		.2byte	0x2
 4915 0364 30       		.byte	0x30
 4916 0365 9F       		.byte	0x9f
 4917 0366 16000000 		.4byte	.LVL82
 4918 036a 28000000 		.4byte	.LVL83
 4919 036e 0100     		.2byte	0x1
 4920 0370 53       		.byte	0x53
 4921 0371 28000000 		.4byte	.LVL83
 4922 0375 2A000000 		.4byte	.LVL84
 4923 0379 0300     		.2byte	0x3
 4924 037b 73       		.byte	0x73
 4925 037c 7D       		.sleb128 -3
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 145


 4926 037d 9F       		.byte	0x9f
 4927 037e 2A000000 		.4byte	.LVL84
 4928 0382 32000000 		.4byte	.LVL86
 4929 0386 0100     		.2byte	0x1
 4930 0388 53       		.byte	0x53
 4931 0389 00000000 		.4byte	0
 4932 038d 00000000 		.4byte	0
 4933              	.LLST28:
 4934 0391 12000000 		.4byte	.LVL81
 4935 0395 28000000 		.4byte	.LVL83
 4936 0399 0200     		.2byte	0x2
 4937 039b 33       		.byte	0x33
 4938 039c 9F       		.byte	0x9f
 4939 039d 28000000 		.4byte	.LVL83
 4940 03a1 2A000000 		.4byte	.LVL84
 4941 03a5 0100     		.2byte	0x1
 4942 03a7 53       		.byte	0x53
 4943 03a8 2A000000 		.4byte	.LVL84
 4944 03ac 32000000 		.4byte	.LVL86
 4945 03b0 0200     		.2byte	0x2
 4946 03b2 33       		.byte	0x33
 4947 03b3 9F       		.byte	0x9f
 4948 03b4 32000000 		.4byte	.LVL86
 4949 03b8 74000000 		.4byte	.LVL90
 4950 03bc 0100     		.2byte	0x1
 4951 03be 53       		.byte	0x53
 4952 03bf 78000000 		.4byte	.LVL92
 4953 03c3 80000000 		.4byte	.LVL93
 4954 03c7 0100     		.2byte	0x1
 4955 03c9 53       		.byte	0x53
 4956 03ca 80000000 		.4byte	.LVL93
 4957 03ce 86000000 		.4byte	.LVL94
 4958 03d2 0300     		.2byte	0x3
 4959 03d4 73       		.byte	0x73
 4960 03d5 1A       		.sleb128 26
 4961 03d6 9F       		.byte	0x9f
 4962 03d7 00000000 		.4byte	0
 4963 03db 00000000 		.4byte	0
 4964              	.LLST29:
 4965 03df 12000000 		.4byte	.LVL81
 4966 03e3 C2000000 		.4byte	.LVL101
 4967 03e7 0100     		.2byte	0x1
 4968 03e9 54       		.byte	0x54
 4969 03ea 00000000 		.4byte	0
 4970 03ee 00000000 		.4byte	0
 4971              	.LLST30:
 4972 03f2 50000000 		.4byte	.LVL87
 4973 03f6 6E000000 		.4byte	.LVL89
 4974 03fa 0100     		.2byte	0x1
 4975 03fc 52       		.byte	0x52
 4976 03fd 6E000000 		.4byte	.LVL89
 4977 0401 76000000 		.4byte	.LVL91
 4978 0405 0100     		.2byte	0x1
 4979 0407 50       		.byte	0x50
 4980 0408 76000000 		.4byte	.LVL91
 4981 040c 78000000 		.4byte	.LVL92
 4982 0410 0100     		.2byte	0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 146


 4983 0412 52       		.byte	0x52
 4984 0413 78000000 		.4byte	.LVL92
 4985 0417 96000000 		.4byte	.LVL98
 4986 041b 0100     		.2byte	0x1
 4987 041d 50       		.byte	0x50
 4988 041e 96000000 		.4byte	.LVL98
 4989 0422 A5000000 		.4byte	.LVL99-1
 4990 0426 0100     		.2byte	0x1
 4991 0428 52       		.byte	0x52
 4992 0429 00000000 		.4byte	0
 4993 042d 00000000 		.4byte	0
 4994              	.LLST31:
 4995 0431 04000000 		.4byte	.LVL78
 4996 0435 8A000000 		.4byte	.LVL95
 4997 0439 0200     		.2byte	0x2
 4998 043b 30       		.byte	0x30
 4999 043c 9F       		.byte	0x9f
 5000 043d 90000000 		.4byte	.LVL96
 5001 0441 92000000 		.4byte	.LVL97
 5002 0445 0100     		.2byte	0x1
 5003 0447 53       		.byte	0x53
 5004 0448 00000000 		.4byte	0
 5005 044c 00000000 		.4byte	0
 5006              	.LLST32:
 5007 0450 00000000 		.4byte	.LVL102
 5008 0454 09000000 		.4byte	.LVL104-1
 5009 0458 0100     		.2byte	0x1
 5010 045a 50       		.byte	0x50
 5011 045b 09000000 		.4byte	.LVL104-1
 5012 045f 2C000000 		.4byte	.LVL111
 5013 0463 0100     		.2byte	0x1
 5014 0465 54       		.byte	0x54
 5015 0466 2C000000 		.4byte	.LVL111
 5016 046a 5E000000 		.4byte	.LVL114
 5017 046e 0300     		.2byte	0x3
 5018 0470 74       		.byte	0x74
 5019 0471 03       		.sleb128 3
 5020 0472 9F       		.byte	0x9f
 5021 0473 5E000000 		.4byte	.LVL114
 5022 0477 80000000 		.4byte	.LFE10
 5023 047b 0400     		.2byte	0x4
 5024 047d F3       		.byte	0xf3
 5025 047e 01       		.uleb128 0x1
 5026 047f 50       		.byte	0x50
 5027 0480 9F       		.byte	0x9f
 5028 0481 00000000 		.4byte	0
 5029 0485 00000000 		.4byte	0
 5030              	.LLST33:
 5031 0489 06000000 		.4byte	.LVL103
 5032 048d 14000000 		.4byte	.LVL107
 5033 0491 0200     		.2byte	0x2
 5034 0493 30       		.byte	0x30
 5035 0494 9F       		.byte	0x9f
 5036 0495 14000000 		.4byte	.LVL107
 5037 0499 1C000000 		.4byte	.LVL109
 5038 049d 0200     		.2byte	0x2
 5039 049f 31       		.byte	0x31
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 147


 5040 04a0 9F       		.byte	0x9f
 5041 04a1 1C000000 		.4byte	.LVL109
 5042 04a5 1E000000 		.4byte	.LVL110
 5043 04a9 0200     		.2byte	0x2
 5044 04ab 30       		.byte	0x30
 5045 04ac 9F       		.byte	0x9f
 5046 04ad 1E000000 		.4byte	.LVL110
 5047 04b1 55000000 		.4byte	.LVL112-1
 5048 04b5 0100     		.2byte	0x1
 5049 04b7 51       		.byte	0x51
 5050 04b8 00000000 		.4byte	0
 5051 04bc 00000000 		.4byte	0
 5052              	.LLST34:
 5053 04c0 0C000000 		.4byte	.LVL105
 5054 04c4 5E000000 		.4byte	.LVL115
 5055 04c8 0100     		.2byte	0x1
 5056 04ca 55       		.byte	0x55
 5057 04cb 00000000 		.4byte	0
 5058 04cf 00000000 		.4byte	0
 5059              	.LLST35:
 5060 04d3 00000000 		.4byte	.LVL116
 5061 04d7 08000000 		.4byte	.LVL117
 5062 04db 0100     		.2byte	0x1
 5063 04dd 50       		.byte	0x50
 5064 04de 08000000 		.4byte	.LVL117
 5065 04e2 14000000 		.4byte	.LFE32
 5066 04e6 0400     		.2byte	0x4
 5067 04e8 F3       		.byte	0xf3
 5068 04e9 01       		.uleb128 0x1
 5069 04ea 50       		.byte	0x50
 5070 04eb 9F       		.byte	0x9f
 5071 04ec 00000000 		.4byte	0
 5072 04f0 00000000 		.4byte	0
 5073              	.LLST36:
 5074 04f4 00000000 		.4byte	.LVL119
 5075 04f8 14000000 		.4byte	.LVL120
 5076 04fc 0100     		.2byte	0x1
 5077 04fe 50       		.byte	0x50
 5078 04ff 14000000 		.4byte	.LVL120
 5079 0503 18000000 		.4byte	.LVL121
 5080 0507 0100     		.2byte	0x1
 5081 0509 53       		.byte	0x53
 5082 050a 18000000 		.4byte	.LVL121
 5083 050e 44000000 		.4byte	.LFE11
 5084 0512 0400     		.2byte	0x4
 5085 0514 F3       		.byte	0xf3
 5086 0515 01       		.uleb128 0x1
 5087 0516 50       		.byte	0x50
 5088 0517 9F       		.byte	0x9f
 5089 0518 00000000 		.4byte	0
 5090 051c 00000000 		.4byte	0
 5091              	.LLST37:
 5092 0520 00000000 		.4byte	.LVL124
 5093 0524 1A000000 		.4byte	.LVL125
 5094 0528 0100     		.2byte	0x1
 5095 052a 50       		.byte	0x50
 5096 052b 1A000000 		.4byte	.LVL125
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 148


 5097 052f 4C000000 		.4byte	.LFE33
 5098 0533 0400     		.2byte	0x4
 5099 0535 F3       		.byte	0xf3
 5100 0536 01       		.uleb128 0x1
 5101 0537 50       		.byte	0x50
 5102 0538 9F       		.byte	0x9f
 5103 0539 00000000 		.4byte	0
 5104 053d 00000000 		.4byte	0
 5105              	.LLST38:
 5106 0541 00000000 		.4byte	.LVL129
 5107 0545 02000000 		.4byte	.LVL130
 5108 0549 0100     		.2byte	0x1
 5109 054b 50       		.byte	0x50
 5110 054c 02000000 		.4byte	.LVL130
 5111 0550 10000000 		.4byte	.LFE40
 5112 0554 0400     		.2byte	0x4
 5113 0556 F3       		.byte	0xf3
 5114 0557 01       		.uleb128 0x1
 5115 0558 50       		.byte	0x50
 5116 0559 9F       		.byte	0x9f
 5117 055a 00000000 		.4byte	0
 5118 055e 00000000 		.4byte	0
 5119              	.LLST39:
 5120 0562 0C000000 		.4byte	.LVL133
 5121 0566 1C000000 		.4byte	.LVL136
 5122 056a 0100     		.2byte	0x1
 5123 056c 54       		.byte	0x54
 5124 056d 1E000000 		.4byte	.LVL137
 5125 0571 22000000 		.4byte	.LVL138
 5126 0575 0100     		.2byte	0x1
 5127 0577 54       		.byte	0x54
 5128 0578 00000000 		.4byte	0
 5129 057c 00000000 		.4byte	0
 5130              	.LLST40:
 5131 0580 02000000 		.4byte	.LVL139
 5132 0584 06000000 		.4byte	.LVL140
 5133 0588 0200     		.2byte	0x2
 5134 058a 30       		.byte	0x30
 5135 058b 9F       		.byte	0x9f
 5136 058c 06000000 		.4byte	.LVL140
 5137 0590 1B000000 		.4byte	.LVL142-1
 5138 0594 0100     		.2byte	0x1
 5139 0596 53       		.byte	0x53
 5140 0597 00000000 		.4byte	0
 5141 059b 00000000 		.4byte	0
 5142              	.LLST41:
 5143 059f 00000000 		.4byte	.LVL149
 5144 05a3 06000000 		.4byte	.LVL150
 5145 05a7 0100     		.2byte	0x1
 5146 05a9 50       		.byte	0x50
 5147 05aa 06000000 		.4byte	.LVL150
 5148 05ae 10000000 		.4byte	.LFE47
 5149 05b2 0400     		.2byte	0x4
 5150 05b4 F3       		.byte	0xf3
 5151 05b5 01       		.uleb128 0x1
 5152 05b6 50       		.byte	0x50
 5153 05b7 9F       		.byte	0x9f
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 149


 5154 05b8 00000000 		.4byte	0
 5155 05bc 00000000 		.4byte	0
 5156              	.LLST42:
 5157 05c0 00000000 		.4byte	.LVL151
 5158 05c4 02000000 		.4byte	.LVL152
 5159 05c8 0100     		.2byte	0x1
 5160 05ca 50       		.byte	0x50
 5161 05cb 02000000 		.4byte	.LVL152
 5162 05cf 0C000000 		.4byte	.LFE48
 5163 05d3 0400     		.2byte	0x4
 5164 05d5 F3       		.byte	0xf3
 5165 05d6 01       		.uleb128 0x1
 5166 05d7 50       		.byte	0x50
 5167 05d8 9F       		.byte	0x9f
 5168 05d9 00000000 		.4byte	0
 5169 05dd 00000000 		.4byte	0
 5170              	.LLST43:
 5171 05e1 00000000 		.4byte	.LVL154
 5172 05e5 0A000000 		.4byte	.LVL156
 5173 05e9 0100     		.2byte	0x1
 5174 05eb 50       		.byte	0x50
 5175 05ec 0A000000 		.4byte	.LVL156
 5176 05f0 20000000 		.4byte	.LFE51
 5177 05f4 0400     		.2byte	0x4
 5178 05f6 F3       		.byte	0xf3
 5179 05f7 01       		.uleb128 0x1
 5180 05f8 50       		.byte	0x50
 5181 05f9 9F       		.byte	0x9f
 5182 05fa 00000000 		.4byte	0
 5183 05fe 00000000 		.4byte	0
 5184              	.LLST44:
 5185 0602 08000000 		.4byte	.LVL155
 5186 0606 12000000 		.4byte	.LVL157
 5187 060a 0100     		.2byte	0x1
 5188 060c 52       		.byte	0x52
 5189 060d 12000000 		.4byte	.LVL157
 5190 0611 20000000 		.4byte	.LFE51
 5191 0615 0100     		.2byte	0x1
 5192 0617 50       		.byte	0x50
 5193 0618 00000000 		.4byte	0
 5194 061c 00000000 		.4byte	0
 5195              	.LLST45:
 5196 0620 00000000 		.4byte	.LVL158
 5197 0624 0A000000 		.4byte	.LVL160
 5198 0628 0100     		.2byte	0x1
 5199 062a 50       		.byte	0x50
 5200 062b 0A000000 		.4byte	.LVL160
 5201 062f 20000000 		.4byte	.LFE52
 5202 0633 0400     		.2byte	0x4
 5203 0635 F3       		.byte	0xf3
 5204 0636 01       		.uleb128 0x1
 5205 0637 50       		.byte	0x50
 5206 0638 9F       		.byte	0x9f
 5207 0639 00000000 		.4byte	0
 5208 063d 00000000 		.4byte	0
 5209              	.LLST46:
 5210 0641 08000000 		.4byte	.LVL159
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 150


 5211 0645 12000000 		.4byte	.LVL161
 5212 0649 0100     		.2byte	0x1
 5213 064b 52       		.byte	0x52
 5214 064c 12000000 		.4byte	.LVL161
 5215 0650 20000000 		.4byte	.LFE52
 5216 0654 0100     		.2byte	0x1
 5217 0656 50       		.byte	0x50
 5218 0657 00000000 		.4byte	0
 5219 065b 00000000 		.4byte	0
 5220              	.LLST47:
 5221 065f 00000000 		.4byte	.LVL162
 5222 0663 0A000000 		.4byte	.LVL164
 5223 0667 0100     		.2byte	0x1
 5224 0669 50       		.byte	0x50
 5225 066a 0A000000 		.4byte	.LVL164
 5226 066e 20000000 		.4byte	.LFE53
 5227 0672 0400     		.2byte	0x4
 5228 0674 F3       		.byte	0xf3
 5229 0675 01       		.uleb128 0x1
 5230 0676 50       		.byte	0x50
 5231 0677 9F       		.byte	0x9f
 5232 0678 00000000 		.4byte	0
 5233 067c 00000000 		.4byte	0
 5234              	.LLST48:
 5235 0680 08000000 		.4byte	.LVL163
 5236 0684 12000000 		.4byte	.LVL165
 5237 0688 0100     		.2byte	0x1
 5238 068a 52       		.byte	0x52
 5239 068b 12000000 		.4byte	.LVL165
 5240 068f 20000000 		.4byte	.LFE53
 5241 0693 0100     		.2byte	0x1
 5242 0695 50       		.byte	0x50
 5243 0696 00000000 		.4byte	0
 5244 069a 00000000 		.4byte	0
 5245              	.LLST49:
 5246 069e 00000000 		.4byte	.LVL166
 5247 06a2 08000000 		.4byte	.LVL167
 5248 06a6 0100     		.2byte	0x1
 5249 06a8 50       		.byte	0x50
 5250 06a9 08000000 		.4byte	.LVL167
 5251 06ad 1C000000 		.4byte	.LVL171
 5252 06b1 0400     		.2byte	0x4
 5253 06b3 F3       		.byte	0xf3
 5254 06b4 01       		.uleb128 0x1
 5255 06b5 50       		.byte	0x50
 5256 06b6 9F       		.byte	0x9f
 5257 06b7 1C000000 		.4byte	.LVL171
 5258 06bb 22000000 		.4byte	.LVL172
 5259 06bf 0100     		.2byte	0x1
 5260 06c1 50       		.byte	0x50
 5261 06c2 22000000 		.4byte	.LVL172
 5262 06c6 36000000 		.4byte	.LVL176
 5263 06ca 0400     		.2byte	0x4
 5264 06cc F3       		.byte	0xf3
 5265 06cd 01       		.uleb128 0x1
 5266 06ce 50       		.byte	0x50
 5267 06cf 9F       		.byte	0x9f
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 151


 5268 06d0 36000000 		.4byte	.LVL176
 5269 06d4 3C000000 		.4byte	.LVL177
 5270 06d8 0100     		.2byte	0x1
 5271 06da 50       		.byte	0x50
 5272 06db 3C000000 		.4byte	.LVL177
 5273 06df 50000000 		.4byte	.LVL181
 5274 06e3 0400     		.2byte	0x4
 5275 06e5 F3       		.byte	0xf3
 5276 06e6 01       		.uleb128 0x1
 5277 06e7 50       		.byte	0x50
 5278 06e8 9F       		.byte	0x9f
 5279 06e9 50000000 		.4byte	.LVL181
 5280 06ed 52000000 		.4byte	.LVL182
 5281 06f1 0100     		.2byte	0x1
 5282 06f3 50       		.byte	0x50
 5283 06f4 52000000 		.4byte	.LVL182
 5284 06f8 68000000 		.4byte	.LFE54
 5285 06fc 0400     		.2byte	0x4
 5286 06fe F3       		.byte	0xf3
 5287 06ff 01       		.uleb128 0x1
 5288 0700 50       		.byte	0x50
 5289 0701 9F       		.byte	0x9f
 5290 0702 00000000 		.4byte	0
 5291 0706 00000000 		.4byte	0
 5292              	.LLST50:
 5293 070a 00000000 		.4byte	.LVL166
 5294 070e 10000000 		.4byte	.LVL169
 5295 0712 0100     		.2byte	0x1
 5296 0714 51       		.byte	0x51
 5297 0715 10000000 		.4byte	.LVL169
 5298 0719 1C000000 		.4byte	.LVL171
 5299 071d 0400     		.2byte	0x4
 5300 071f F3       		.byte	0xf3
 5301 0720 01       		.uleb128 0x1
 5302 0721 51       		.byte	0x51
 5303 0722 9F       		.byte	0x9f
 5304 0723 1C000000 		.4byte	.LVL171
 5305 0727 2A000000 		.4byte	.LVL174
 5306 072b 0100     		.2byte	0x1
 5307 072d 51       		.byte	0x51
 5308 072e 2A000000 		.4byte	.LVL174
 5309 0732 36000000 		.4byte	.LVL176
 5310 0736 0400     		.2byte	0x4
 5311 0738 F3       		.byte	0xf3
 5312 0739 01       		.uleb128 0x1
 5313 073a 51       		.byte	0x51
 5314 073b 9F       		.byte	0x9f
 5315 073c 36000000 		.4byte	.LVL176
 5316 0740 44000000 		.4byte	.LVL179
 5317 0744 0100     		.2byte	0x1
 5318 0746 51       		.byte	0x51
 5319 0747 44000000 		.4byte	.LVL179
 5320 074b 50000000 		.4byte	.LVL181
 5321 074f 0400     		.2byte	0x4
 5322 0751 F3       		.byte	0xf3
 5323 0752 01       		.uleb128 0x1
 5324 0753 51       		.byte	0x51
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 152


 5325 0754 9F       		.byte	0x9f
 5326 0755 50000000 		.4byte	.LVL181
 5327 0759 55000000 		.4byte	.LVL183-1
 5328 075d 0100     		.2byte	0x1
 5329 075f 51       		.byte	0x51
 5330 0760 55000000 		.4byte	.LVL183-1
 5331 0764 68000000 		.4byte	.LFE54
 5332 0768 0400     		.2byte	0x4
 5333 076a F3       		.byte	0xf3
 5334 076b 01       		.uleb128 0x1
 5335 076c 51       		.byte	0x51
 5336 076d 9F       		.byte	0x9f
 5337 076e 00000000 		.4byte	0
 5338 0772 00000000 		.4byte	0
 5339              	.LLST51:
 5340 0776 0E000000 		.4byte	.LVL168
 5341 077a 18000000 		.4byte	.LVL170
 5342 077e 0100     		.2byte	0x1
 5343 0780 52       		.byte	0x52
 5344 0781 18000000 		.4byte	.LVL170
 5345 0785 1C000000 		.4byte	.LVL171
 5346 0789 0100     		.2byte	0x1
 5347 078b 51       		.byte	0x51
 5348 078c 28000000 		.4byte	.LVL173
 5349 0790 32000000 		.4byte	.LVL175
 5350 0794 0100     		.2byte	0x1
 5351 0796 52       		.byte	0x52
 5352 0797 32000000 		.4byte	.LVL175
 5353 079b 36000000 		.4byte	.LVL176
 5354 079f 0100     		.2byte	0x1
 5355 07a1 51       		.byte	0x51
 5356 07a2 42000000 		.4byte	.LVL178
 5357 07a6 4C000000 		.4byte	.LVL180
 5358 07aa 0100     		.2byte	0x1
 5359 07ac 52       		.byte	0x52
 5360 07ad 4C000000 		.4byte	.LVL180
 5361 07b1 50000000 		.4byte	.LVL181
 5362 07b5 0100     		.2byte	0x1
 5363 07b7 51       		.byte	0x51
 5364 07b8 00000000 		.4byte	0
 5365 07bc 00000000 		.4byte	0
 5366              		.section	.debug_aranges,"",%progbits
 5367 0000 C4010000 		.4byte	0x1c4
 5368 0004 0200     		.2byte	0x2
 5369 0006 00000000 		.4byte	.Ldebug_info0
 5370 000a 04       		.byte	0x4
 5371 000b 00       		.byte	0
 5372 000c 0000     		.2byte	0
 5373 000e 0000     		.2byte	0
 5374 0010 00000000 		.4byte	.LFB1
 5375 0014 14000000 		.4byte	.LFE1-.LFB1
 5376 0018 00000000 		.4byte	.LFB4
 5377 001c 14000000 		.4byte	.LFE4-.LFB4
 5378 0020 00000000 		.4byte	.LFB2
 5379 0024 18000000 		.4byte	.LFE2-.LFB2
 5380 0028 00000000 		.4byte	.LFB5
 5381 002c 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 153


 5382 0030 00000000 		.4byte	.LFB6
 5383 0034 20000000 		.4byte	.LFE6-.LFB6
 5384 0038 00000000 		.4byte	.LFB7
 5385 003c 38000000 		.4byte	.LFE7-.LFB7
 5386 0040 00000000 		.4byte	.LFB8
 5387 0044 1C000000 		.4byte	.LFE8-.LFB8
 5388 0048 00000000 		.4byte	.LFB9
 5389 004c 30000000 		.4byte	.LFE9-.LFB9
 5390 0050 00000000 		.4byte	.LFB12
 5391 0054 20000000 		.4byte	.LFE12-.LFB12
 5392 0058 00000000 		.4byte	.LFB13
 5393 005c 10000000 		.4byte	.LFE13-.LFB13
 5394 0060 00000000 		.4byte	.LFB14
 5395 0064 0C000000 		.4byte	.LFE14-.LFB14
 5396 0068 00000000 		.4byte	.LFB15
 5397 006c 14000000 		.4byte	.LFE15-.LFB15
 5398 0070 00000000 		.4byte	.LFB16
 5399 0074 10000000 		.4byte	.LFE16-.LFB16
 5400 0078 00000000 		.4byte	.LFB17
 5401 007c 0C000000 		.4byte	.LFE17-.LFB17
 5402 0080 00000000 		.4byte	.LFB24
 5403 0084 14000000 		.4byte	.LFE24-.LFB24
 5404 0088 00000000 		.4byte	.LFB25
 5405 008c 18000000 		.4byte	.LFE25-.LFB25
 5406 0090 00000000 		.4byte	.LFB26
 5407 0094 14000000 		.4byte	.LFE26-.LFB26
 5408 0098 00000000 		.4byte	.LFB27
 5409 009c 14000000 		.4byte	.LFE27-.LFB27
 5410 00a0 00000000 		.4byte	.LFB28
 5411 00a4 14000000 		.4byte	.LFE28-.LFB28
 5412 00a8 00000000 		.4byte	.LFB29
 5413 00ac 04000000 		.4byte	.LFE29-.LFB29
 5414 00b0 00000000 		.4byte	.LFB18
 5415 00b4 20000000 		.4byte	.LFE18-.LFB18
 5416 00b8 00000000 		.4byte	.LFB19
 5417 00bc 1C000000 		.4byte	.LFE19-.LFB19
 5418 00c0 00000000 		.4byte	.LFB20
 5419 00c4 22000000 		.4byte	.LFE20-.LFB20
 5420 00c8 00000000 		.4byte	.LFB21
 5421 00cc 1E000000 		.4byte	.LFE21-.LFB21
 5422 00d0 00000000 		.4byte	.LFB22
 5423 00d4 4C000000 		.4byte	.LFE22-.LFB22
 5424 00d8 00000000 		.4byte	.LFB23
 5425 00dc 2C000000 		.4byte	.LFE23-.LFB23
 5426 00e0 00000000 		.4byte	.LFB30
 5427 00e4 18000000 		.4byte	.LFE30-.LFB30
 5428 00e8 00000000 		.4byte	.LFB31
 5429 00ec 30000000 		.4byte	.LFE31-.LFB31
 5430 00f0 00000000 		.4byte	.LFB3
 5431 00f4 F0000000 		.4byte	.LFE3-.LFB3
 5432 00f8 00000000 		.4byte	.LFB10
 5433 00fc 80000000 		.4byte	.LFE10-.LFB10
 5434 0100 00000000 		.4byte	.LFB32
 5435 0104 14000000 		.4byte	.LFE32-.LFB32
 5436 0108 00000000 		.4byte	.LFB11
 5437 010c 44000000 		.4byte	.LFE11-.LFB11
 5438 0110 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 154


 5439 0114 4C000000 		.4byte	.LFE33-.LFB33
 5440 0118 00000000 		.4byte	.LFB37
 5441 011c 10000000 		.4byte	.LFE37-.LFB37
 5442 0120 00000000 		.4byte	.LFB38
 5443 0124 10000000 		.4byte	.LFE38-.LFB38
 5444 0128 00000000 		.4byte	.LFB36
 5445 012c 18000000 		.4byte	.LFE36-.LFB36
 5446 0130 00000000 		.4byte	.LFB39
 5447 0134 10000000 		.4byte	.LFE39-.LFB39
 5448 0138 00000000 		.4byte	.LFB40
 5449 013c 10000000 		.4byte	.LFE40-.LFB40
 5450 0140 00000000 		.4byte	.LFB41
 5451 0144 10000000 		.4byte	.LFE41-.LFB41
 5452 0148 00000000 		.4byte	.LFB42
 5453 014c 10000000 		.4byte	.LFE42-.LFB42
 5454 0150 00000000 		.4byte	.LFB43
 5455 0154 20000000 		.4byte	.LFE43-.LFB43
 5456 0158 00000000 		.4byte	.LFB44
 5457 015c 10000000 		.4byte	.LFE44-.LFB44
 5458 0160 00000000 		.4byte	.LFB45
 5459 0164 10000000 		.4byte	.LFE45-.LFB45
 5460 0168 00000000 		.4byte	.LFB49
 5461 016c 28000000 		.4byte	.LFE49-.LFB49
 5462 0170 00000000 		.4byte	.LFB46
 5463 0174 0C000000 		.4byte	.LFE46-.LFB46
 5464 0178 00000000 		.4byte	.LFB35
 5465 017c 44000000 		.4byte	.LFE35-.LFB35
 5466 0180 00000000 		.4byte	.LFB34
 5467 0184 20000000 		.4byte	.LFE34-.LFB34
 5468 0188 00000000 		.4byte	.LFB47
 5469 018c 10000000 		.4byte	.LFE47-.LFB47
 5470 0190 00000000 		.4byte	.LFB48
 5471 0194 0C000000 		.4byte	.LFE48-.LFB48
 5472 0198 00000000 		.4byte	.LFB50
 5473 019c 70000000 		.4byte	.LFE50-.LFB50
 5474 01a0 00000000 		.4byte	.LFB51
 5475 01a4 20000000 		.4byte	.LFE51-.LFB51
 5476 01a8 00000000 		.4byte	.LFB52
 5477 01ac 20000000 		.4byte	.LFE52-.LFB52
 5478 01b0 00000000 		.4byte	.LFB53
 5479 01b4 20000000 		.4byte	.LFE53-.LFB53
 5480 01b8 00000000 		.4byte	.LFB54
 5481 01bc 68000000 		.4byte	.LFE54-.LFB54
 5482 01c0 00000000 		.4byte	0
 5483 01c4 00000000 		.4byte	0
 5484              		.section	.debug_ranges,"",%progbits
 5485              	.Ldebug_ranges0:
 5486 0000 00000000 		.4byte	.LFB1
 5487 0004 14000000 		.4byte	.LFE1
 5488 0008 00000000 		.4byte	.LFB4
 5489 000c 14000000 		.4byte	.LFE4
 5490 0010 00000000 		.4byte	.LFB2
 5491 0014 18000000 		.4byte	.LFE2
 5492 0018 00000000 		.4byte	.LFB5
 5493 001c 14000000 		.4byte	.LFE5
 5494 0020 00000000 		.4byte	.LFB6
 5495 0024 20000000 		.4byte	.LFE6
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 155


 5496 0028 00000000 		.4byte	.LFB7
 5497 002c 38000000 		.4byte	.LFE7
 5498 0030 00000000 		.4byte	.LFB8
 5499 0034 1C000000 		.4byte	.LFE8
 5500 0038 00000000 		.4byte	.LFB9
 5501 003c 30000000 		.4byte	.LFE9
 5502 0040 00000000 		.4byte	.LFB12
 5503 0044 20000000 		.4byte	.LFE12
 5504 0048 00000000 		.4byte	.LFB13
 5505 004c 10000000 		.4byte	.LFE13
 5506 0050 00000000 		.4byte	.LFB14
 5507 0054 0C000000 		.4byte	.LFE14
 5508 0058 00000000 		.4byte	.LFB15
 5509 005c 14000000 		.4byte	.LFE15
 5510 0060 00000000 		.4byte	.LFB16
 5511 0064 10000000 		.4byte	.LFE16
 5512 0068 00000000 		.4byte	.LFB17
 5513 006c 0C000000 		.4byte	.LFE17
 5514 0070 00000000 		.4byte	.LFB24
 5515 0074 14000000 		.4byte	.LFE24
 5516 0078 00000000 		.4byte	.LFB25
 5517 007c 18000000 		.4byte	.LFE25
 5518 0080 00000000 		.4byte	.LFB26
 5519 0084 14000000 		.4byte	.LFE26
 5520 0088 00000000 		.4byte	.LFB27
 5521 008c 14000000 		.4byte	.LFE27
 5522 0090 00000000 		.4byte	.LFB28
 5523 0094 14000000 		.4byte	.LFE28
 5524 0098 00000000 		.4byte	.LFB29
 5525 009c 04000000 		.4byte	.LFE29
 5526 00a0 00000000 		.4byte	.LFB18
 5527 00a4 20000000 		.4byte	.LFE18
 5528 00a8 00000000 		.4byte	.LFB19
 5529 00ac 1C000000 		.4byte	.LFE19
 5530 00b0 00000000 		.4byte	.LFB20
 5531 00b4 22000000 		.4byte	.LFE20
 5532 00b8 00000000 		.4byte	.LFB21
 5533 00bc 1E000000 		.4byte	.LFE21
 5534 00c0 00000000 		.4byte	.LFB22
 5535 00c4 4C000000 		.4byte	.LFE22
 5536 00c8 00000000 		.4byte	.LFB23
 5537 00cc 2C000000 		.4byte	.LFE23
 5538 00d0 00000000 		.4byte	.LFB30
 5539 00d4 18000000 		.4byte	.LFE30
 5540 00d8 00000000 		.4byte	.LFB31
 5541 00dc 30000000 		.4byte	.LFE31
 5542 00e0 00000000 		.4byte	.LFB3
 5543 00e4 F0000000 		.4byte	.LFE3
 5544 00e8 00000000 		.4byte	.LFB10
 5545 00ec 80000000 		.4byte	.LFE10
 5546 00f0 00000000 		.4byte	.LFB32
 5547 00f4 14000000 		.4byte	.LFE32
 5548 00f8 00000000 		.4byte	.LFB11
 5549 00fc 44000000 		.4byte	.LFE11
 5550 0100 00000000 		.4byte	.LFB33
 5551 0104 4C000000 		.4byte	.LFE33
 5552 0108 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 156


 5553 010c 10000000 		.4byte	.LFE37
 5554 0110 00000000 		.4byte	.LFB38
 5555 0114 10000000 		.4byte	.LFE38
 5556 0118 00000000 		.4byte	.LFB36
 5557 011c 18000000 		.4byte	.LFE36
 5558 0120 00000000 		.4byte	.LFB39
 5559 0124 10000000 		.4byte	.LFE39
 5560 0128 00000000 		.4byte	.LFB40
 5561 012c 10000000 		.4byte	.LFE40
 5562 0130 00000000 		.4byte	.LFB41
 5563 0134 10000000 		.4byte	.LFE41
 5564 0138 00000000 		.4byte	.LFB42
 5565 013c 10000000 		.4byte	.LFE42
 5566 0140 00000000 		.4byte	.LFB43
 5567 0144 20000000 		.4byte	.LFE43
 5568 0148 00000000 		.4byte	.LFB44
 5569 014c 10000000 		.4byte	.LFE44
 5570 0150 00000000 		.4byte	.LFB45
 5571 0154 10000000 		.4byte	.LFE45
 5572 0158 00000000 		.4byte	.LFB49
 5573 015c 28000000 		.4byte	.LFE49
 5574 0160 00000000 		.4byte	.LFB46
 5575 0164 0C000000 		.4byte	.LFE46
 5576 0168 00000000 		.4byte	.LFB35
 5577 016c 44000000 		.4byte	.LFE35
 5578 0170 00000000 		.4byte	.LFB34
 5579 0174 20000000 		.4byte	.LFE34
 5580 0178 00000000 		.4byte	.LFB47
 5581 017c 10000000 		.4byte	.LFE47
 5582 0180 00000000 		.4byte	.LFB48
 5583 0184 0C000000 		.4byte	.LFE48
 5584 0188 00000000 		.4byte	.LFB50
 5585 018c 70000000 		.4byte	.LFE50
 5586 0190 00000000 		.4byte	.LFB51
 5587 0194 20000000 		.4byte	.LFE51
 5588 0198 00000000 		.4byte	.LFB52
 5589 019c 20000000 		.4byte	.LFE52
 5590 01a0 00000000 		.4byte	.LFB53
 5591 01a4 20000000 		.4byte	.LFE53
 5592 01a8 00000000 		.4byte	.LFB54
 5593 01ac 68000000 		.4byte	.LFE54
 5594 01b0 00000000 		.4byte	0
 5595 01b4 00000000 		.4byte	0
 5596              		.section	.debug_line,"",%progbits
 5597              	.Ldebug_line0:
 5598 0000 3D050000 		.section	.debug_str,"MS",%progbits,1
 5598      02006700 
 5598      00000201 
 5598      FB0E0D00 
 5598      01010101 
 5599              	.LASF55:
 5600 0000 72616D56 		.ascii	"ramVectorTable\000"
 5600      6563746F 
 5600      72546162 
 5600      6C6500
 5601              	.LASF10:
 5602 000f 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 157


 5602      313600
 5603              	.LASF42:
 5604 0016 696E7453 		.ascii	"intState\000"
 5604      74617465 
 5604      00
 5605              	.LASF24:
 5606 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5606      73436C6B 
 5606      57726974 
 5606      65486663 
 5606      6C6B4469 
 5607              	.LASF115:
 5608 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5608      73436C6B 
 5608      50756D70 
 5608      436F6E66 
 5608      696700
 5609              	.LASF27:
 5610 004b 43795379 		.ascii	"CySysEnablePumpClock\000"
 5610      73456E61 
 5610      626C6550 
 5610      756D7043 
 5610      6C6F636B 
 5611              	.LASF97:
 5612 0060 72657456 		.ascii	"retVal\000"
 5612      616C00
 5613              	.LASF41:
 5614 0067 43794469 		.ascii	"CyDisableInts\000"
 5614      7361626C 
 5614      65496E74 
 5614      7300
 5615              	.LASF121:
 5616 0075 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5616      43313120 
 5616      352E342E 
 5616      31203230 
 5616      31363036 
 5617 00a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5617      20726576 
 5617      6973696F 
 5617      6E203233 
 5617      37373135 
 5618 00db 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5618      66756E63 
 5618      74696F6E 
 5618      2D736563 
 5618      74696F6E 
 5619              	.LASF7:
 5620 0103 6C6F6E67 		.ascii	"long long unsigned int\000"
 5620      206C6F6E 
 5620      6720756E 
 5620      7369676E 
 5620      65642069 
 5621              	.LASF73:
 5622 011a 70617261 		.ascii	"parameters\000"
 5622      6D657465 
 5622      727300
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 158


 5623              	.LASF43:
 5624 0125 4379456E 		.ascii	"CyEnableInts\000"
 5624      61626C65 
 5624      496E7473 
 5624      00
 5625              	.LASF106:
 5626 0132 696E7465 		.ascii	"interfaceNumber\000"
 5626      72666163 
 5626      654E756D 
 5626      62657200 
 5627              	.LASF64:
 5628 0142 4379536F 		.ascii	"CySoftwareReset\000"
 5628      66747761 
 5628      72655265 
 5628      73657400 
 5629              	.LASF82:
 5630 0152 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5630      73546963 
 5630      6B456E61 
 5630      626C6549 
 5630      6E746572 
 5631              	.LASF47:
 5632 016b 4379496E 		.ascii	"CyIntGetState\000"
 5632      74476574 
 5632      53746174 
 5632      6500
 5633              	.LASF6:
 5634 0179 6C6F6E67 		.ascii	"long long int\000"
 5634      206C6F6E 
 5634      6720696E 
 5634      7400
 5635              	.LASF0:
 5636 0187 7369676E 		.ascii	"signed char\000"
 5636      65642063 
 5636      68617200 
 5637              	.LASF68:
 5638 0193 66726571 		.ascii	"freq\000"
 5638      00
 5639              	.LASF80:
 5640 0198 43794465 		.ascii	"CyDelayFreq\000"
 5640      6C617946 
 5640      72657100 
 5641              	.LASF25:
 5642 01a4 696E7465 		.ascii	"interruptState\000"
 5642      72727570 
 5642      74537461 
 5642      746500
 5643              	.LASF70:
 5644 01b3 6C664C69 		.ascii	"lfLimit\000"
 5644      6D697400 
 5645              	.LASF86:
 5646 01bb 43795379 		.ascii	"CySysTickGetReload\000"
 5646      73546963 
 5646      6B476574 
 5646      52656C6F 
 5646      616400
 5647              	.LASF34:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 159


 5648 01ce 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5648      73436C6B 
 5648      496D6F47 
 5648      65745763 
 5648      6F4C6F63 
 5649              	.LASF75:
 5650 01e4 77636F4C 		.ascii	"wcoLock\000"
 5650      6F636B00 
 5651              	.LASF4:
 5652 01ec 6C6F6E67 		.ascii	"long int\000"
 5652      20696E74 
 5652      00
 5653              	.LASF48:
 5654 01f5 4379496E 		.ascii	"CyIntDisable\000"
 5654      74446973 
 5654      61626C65 
 5654      00
 5655              	.LASF74:
 5656 0202 72656756 		.ascii	"regValues\000"
 5656      616C7565 
 5656      7300
 5657              	.LASF9:
 5658 020c 75696E74 		.ascii	"uint8\000"
 5658      3800
 5659              	.LASF109:
 5660 0212 63796465 		.ascii	"cydelayFreqKhz\000"
 5660      6C617946 
 5660      7265714B 
 5660      687A00
 5661              	.LASF29:
 5662 0221 656E6162 		.ascii	"enable\000"
 5662      6C6500
 5663              	.LASF13:
 5664 0228 646F7562 		.ascii	"double\000"
 5664      6C6500
 5665              	.LASF61:
 5666 022f 73686966 		.ascii	"shift\000"
 5666      7400
 5667              	.LASF36:
 5668 0235 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5668      734C7664 
 5668      436C6561 
 5668      72496E74 
 5668      65727275 
 5669              	.LASF11:
 5670 024c 75696E74 		.ascii	"uint32\000"
 5670      333200
 5671              	.LASF44:
 5672 0253 6D61736B 		.ascii	"mask\000"
 5672      00
 5673              	.LASF37:
 5674 0258 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5674      73436C6B 
 5674      47657453 
 5674      7973636C 
 5674      6B536F75 
 5675              	.LASF67:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 160


 5676 0270 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5676      73436C6B 
 5676      496D6F45 
 5676      6E61626C 
 5676      6557636F 
 5677              	.LASF63:
 5678 0289 4379496E 		.ascii	"CyIntGetPriority\000"
 5678      74476574 
 5678      5072696F 
 5678      72697479 
 5678      00
 5679              	.LASF111:
 5680 029a 63796465 		.ascii	"cydelay32kMs\000"
 5680      6C617933 
 5680      326B4D73 
 5680      00
 5681              	.LASF93:
 5682 02a7 43795379 		.ascii	"CySysTickInit\000"
 5682      73546963 
 5682      6B496E69 
 5682      7400
 5683              	.LASF62:
 5684 02b5 76616C75 		.ascii	"value\000"
 5684      6500
 5685              	.LASF89:
 5686 02bb 636C6F63 		.ascii	"clockSource\000"
 5686      6B536F75 
 5686      72636500 
 5687              	.LASF99:
 5688 02c7 43794765 		.ascii	"CyGetUniqueId\000"
 5688      74556E69 
 5688      71756549 
 5688      6400
 5689              	.LASF91:
 5690 02d5 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5690      73546963 
 5690      6B476574 
 5690      436F756E 
 5690      74466C61 
 5691              	.LASF8:
 5692 02eb 756E7369 		.ascii	"unsigned int\000"
 5692      676E6564 
 5692      20696E74 
 5692      00
 5693              	.LASF92:
 5694 02f8 43795379 		.ascii	"CySysTickClear\000"
 5694      73546963 
 5694      6B436C65 
 5694      617200
 5695              	.LASF5:
 5696 0307 6C6F6E67 		.ascii	"long unsigned int\000"
 5696      20756E73 
 5696      69676E65 
 5696      6420696E 
 5696      7400
 5697              	.LASF35:
 5698 0319 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 161


 5698      734C7664 
 5698      47657449 
 5698      6E746572 
 5698      72757074 
 5699              	.LASF23:
 5700 0334 43795379 		.ascii	"CySysClkImoStop\000"
 5700      73436C6B 
 5700      496D6F53 
 5700      746F7000 
 5701              	.LASF116:
 5702 0344 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5702      74657243 
 5702      72697469 
 5702      63616C53 
 5702      65637469 
 5703              	.LASF49:
 5704 035b 4379496E 		.ascii	"CyIntSetPending\000"
 5704      74536574 
 5704      50656E64 
 5704      696E6700 
 5705              	.LASF98:
 5706 036b 43795379 		.ascii	"CySysTickGetCallback\000"
 5706      73546963 
 5706      6B476574 
 5706      43616C6C 
 5706      6261636B 
 5707              	.LASF38:
 5708 0380 43795379 		.ascii	"CySysGetResetReason\000"
 5708      73476574 
 5708      52657365 
 5708      74526561 
 5708      736F6E00 
 5709              	.LASF3:
 5710 0394 73686F72 		.ascii	"short unsigned int\000"
 5710      7420756E 
 5710      7369676E 
 5710      65642069 
 5710      6E7400
 5711              	.LASF69:
 5712 03a7 72656754 		.ascii	"regTmp\000"
 5712      6D7000
 5713              	.LASF88:
 5714 03ae 43795379 		.ascii	"CySysTickSetClockSource\000"
 5714      73546963 
 5714      6B536574 
 5714      436C6F63 
 5714      6B536F75 
 5715              	.LASF57:
 5716 03c6 4379496E 		.ascii	"CyIntSetVector\000"
 5716      74536574 
 5716      56656374 
 5716      6F7200
 5717              	.LASF46:
 5718 03d5 6E756D62 		.ascii	"number\000"
 5718      657200
 5719              	.LASF60:
 5720 03dc 7072696F 		.ascii	"priority\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 162


 5720      72697479 
 5720      00
 5721              	.LASF72:
 5722 03e5 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5722      73436C6B 
 5722      57726974 
 5722      65496D6F 
 5722      46726571 
 5723              	.LASF103:
 5724 03fa 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5724      73536574 
 5724      466C6173 
 5724      68416363 
 5724      65737341 
 5725              	.LASF52:
 5726 0419 4379496E 		.ascii	"CyIntSetSysVector\000"
 5726      74536574 
 5726      53797356 
 5726      6563746F 
 5726      7200
 5727              	.LASF22:
 5728 042b 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5728      73436C6B 
 5728      496D6F44 
 5728      69736162 
 5728      6C655763 
 5729              	.LASF16:
 5730 0445 72656733 		.ascii	"reg32\000"
 5730      3200
 5731              	.LASF94:
 5732 044b 43795379 		.ascii	"CySysTickStart\000"
 5732      73546963 
 5732      6B537461 
 5732      727400
 5733              	.LASF40:
 5734 045a 72657475 		.ascii	"returnStatus\000"
 5734      726E5374 
 5734      61747573 
 5734      00
 5735              	.LASF102:
 5736 0467 736F7572 		.ascii	"source\000"
 5736      636500
 5737              	.LASF19:
 5738 046e 73697A65 		.ascii	"sizetype\000"
 5738      74797065 
 5738      00
 5739              	.LASF112:
 5740 0477 43795379 		.ascii	"CySysTickInitVar\000"
 5740      73546963 
 5740      6B496E69 
 5740      74566172 
 5740      00
 5741              	.LASF105:
 5742 0488 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5742      73536574 
 5742      50657269 
 5742      70686572 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 163


 5742      616C4163 
 5743              	.LASF50:
 5744 04ac 4379496E 		.ascii	"CyIntClearPending\000"
 5744      74436C65 
 5744      61725065 
 5744      6E64696E 
 5744      6700
 5745              	.LASF18:
 5746 04be 6C6F6E67 		.ascii	"long double\000"
 5746      20646F75 
 5746      626C6500 
 5747              	.LASF53:
 5748 04ca 61646472 		.ascii	"address\000"
 5748      65737300 
 5749              	.LASF30:
 5750 04d2 73797363 		.ascii	"sysclkSource\000"
 5750      6C6B536F 
 5750      75726365 
 5750      00
 5751              	.LASF96:
 5752 04df 66756E63 		.ascii	"function\000"
 5752      74696F6E 
 5752      00
 5753              	.LASF113:
 5754 04e8 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5754      6F467265 
 5754      714D687A 
 5754      32526567 
 5754      00
 5755              	.LASF87:
 5756 04f9 43795379 		.ascii	"CySysTickGetValue\000"
 5756      73546963 
 5756      6B476574 
 5756      56616C75 
 5756      6500
 5757              	.LASF108:
 5758 050b 63796465 		.ascii	"cydelayFreqHz\000"
 5758      6C617946 
 5758      72657148 
 5758      7A00
 5759              	.LASF59:
 5760 0519 4379496E 		.ascii	"CyIntSetPriority\000"
 5760      74536574 
 5760      5072696F 
 5760      72697479 
 5760      00
 5761              	.LASF12:
 5762 052a 666C6F61 		.ascii	"float\000"
 5762      7400
 5763              	.LASF117:
 5764 0530 43794578 		.ascii	"CyExitCriticalSection\000"
 5764      69744372 
 5764      69746963 
 5764      616C5365 
 5764      6374696F 
 5765              	.LASF78:
 5766 0546 43795379 		.ascii	"CySysLvdEnable\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 164


 5766      734C7664 
 5766      456E6162 
 5766      6C6500
 5767              	.LASF20:
 5768 0555 63795379 		.ascii	"cySysTickCallback\000"
 5768      73546963 
 5768      6B43616C 
 5768      6C626163 
 5768      6B00
 5769              	.LASF58:
 5770 0567 4379496E 		.ascii	"CyIntGetVector\000"
 5770      74476574 
 5770      56656374 
 5770      6F7200
 5771              	.LASF66:
 5772 0576 6D696C6C 		.ascii	"milliseconds\000"
 5772      69736563 
 5772      6F6E6473 
 5772      00
 5773              	.LASF118:
 5774 0583 43794465 		.ascii	"CyDelayCycles\000"
 5774      6C617943 
 5774      79636C65 
 5774      7300
 5775              	.LASF15:
 5776 0591 72656738 		.ascii	"reg8\000"
 5776      00
 5777              	.LASF79:
 5778 0596 74687265 		.ascii	"threshold\000"
 5778      73686F6C 
 5778      6400
 5779              	.LASF51:
 5780 05a0 43794861 		.ascii	"CyHalt\000"
 5780      6C7400
 5781              	.LASF101:
 5782 05a7 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5782      73536574 
 5782      52616D41 
 5782      63636573 
 5782      73417262 
 5783              	.LASF1:
 5784 05c4 756E7369 		.ascii	"unsigned char\000"
 5784      676E6564 
 5784      20636861 
 5784      7200
 5785              	.LASF2:
 5786 05d2 73686F72 		.ascii	"short int\000"
 5786      7420696E 
 5786      7400
 5787              	.LASF45:
 5788 05dc 4379496E 		.ascii	"CyIntEnable\000"
 5788      74456E61 
 5788      626C6500 
 5789              	.LASF56:
 5790 05e8 4379496E 		.ascii	"CyIntGetSysVector\000"
 5790      74476574 
 5790      53797356 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 165


 5790      6563746F 
 5790      7200
 5791              	.LASF28:
 5792 05fa 636C6B53 		.ascii	"clkSelect\000"
 5792      656C6563 
 5792      7400
 5793              	.LASF76:
 5794 0604 43794465 		.ascii	"CyDelayUs\000"
 5794      6C617955 
 5794      7300
 5795              	.LASF39:
 5796 060e 72656173 		.ascii	"reason\000"
 5796      6F6E00
 5797              	.LASF14:
 5798 0615 63686172 		.ascii	"char\000"
 5798      00
 5799              	.LASF114:
 5800 061a 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 5800      6F467265 
 5800      714D687A 
 5800      3244706C 
 5800      6C4F6666 
 5801              	.LASF17:
 5802 0632 63796973 		.ascii	"cyisraddress\000"
 5802      72616464 
 5802      72657373 
 5802      00
 5803              	.LASF83:
 5804 063f 43795379 		.ascii	"CySysTickEnable\000"
 5804      73546963 
 5804      6B456E61 
 5804      626C6500 
 5805              	.LASF31:
 5806 064f 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5806      73436C6B 
 5806      57726974 
 5806      65537973 
 5806      636C6B44 
 5807              	.LASF95:
 5808 0666 43795379 		.ascii	"CySysTickSetCallback\000"
 5808      73546963 
 5808      6B536574 
 5808      43616C6C 
 5808      6261636B 
 5809              	.LASF107:
 5810 067b 43795379 		.ascii	"CySysTickCallbacks\000"
 5810      73546963 
 5810      6B43616C 
 5810      6C626163 
 5810      6B7300
 5811              	.LASF100:
 5812 068e 756E6971 		.ascii	"uniqueId\000"
 5812      75654964 
 5812      00
 5813              	.LASF71:
 5814 0697 666C6173 		.ascii	"flashCtlReg\000"
 5814      6843746C 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 166


 5814      52656700 
 5815              	.LASF65:
 5816 06a3 43794465 		.ascii	"CyDelay\000"
 5816      6C617900 
 5817              	.LASF90:
 5818 06ab 43795379 		.ascii	"CySysTickGetClockSource\000"
 5818      73546963 
 5818      6B476574 
 5818      436C6F63 
 5818      6B536F75 
 5819              	.LASF84:
 5820 06c3 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5820      73546963 
 5820      6B446973 
 5820      61626C65 
 5820      496E7465 
 5821              	.LASF33:
 5822 06dd 43795379 		.ascii	"CySysLvdDisable\000"
 5822      734C7664 
 5822      44697361 
 5822      626C6500 
 5823              	.LASF54:
 5824 06ed 6F6C6449 		.ascii	"oldIsr\000"
 5824      737200
 5825              	.LASF110:
 5826 06f4 63796465 		.ascii	"cydelayFreqMhz\000"
 5826      6C617946 
 5826      7265714D 
 5826      687A00
 5827              	.LASF119:
 5828 0703 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5828      73436C6B 
 5828      57636F45 
 5828      6E61626C 
 5828      656400
 5829              	.LASF104:
 5830 0716 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5830      73536574 
 5830      446D6163 
 5830      41636365 
 5830      73734172 
 5831              	.LASF81:
 5832 0734 43795379 		.ascii	"CySysTickStop\000"
 5832      73546963 
 5832      6B53746F 
 5832      7000
 5833              	.LASF32:
 5834 0742 64697669 		.ascii	"divider\000"
 5834      64657200 
 5835              	.LASF21:
 5836 074a 43795379 		.ascii	"CySysClkImoStart\000"
 5836      73436C6B 
 5836      496D6F53 
 5836      74617274 
 5836      00
 5837              	.LASF120:
 5838 075b 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\ccriBDct.s 			page 167


 5838      73466C61 
 5838      73685365 
 5838      74576169 
 5838      74437963 
 5839              	.LASF122:
 5840 0773 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5840      72617465 
 5840      645F536F 
 5840      75726365 
 5840      5C50536F 
 5841              	.LASF77:
 5842 0792 6D696372 		.ascii	"microseconds\000"
 5842      6F736563 
 5842      6F6E6473 
 5842      00
 5843              	.LASF26:
 5844 079f 746D7052 		.ascii	"tmpReg\000"
 5844      656700
 5845              	.LASF85:
 5846 07a6 43795379 		.ascii	"CySysTickSetReload\000"
 5846      73546963 
 5846      6B536574 
 5846      52656C6F 
 5846      616400
 5847              	.LASF124:
 5848 07b9 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5848      73546963 
 5848      6B536572 
 5848      76696365 
 5848      43616C6C 
 5849              	.LASF123:
 5850 07d3 433A5C55 		.ascii	"C:\\Users\\JamesN4\\Documents\\PSoC Creator\\Hybrid"
 5850      73657273 
 5850      5C4A616D 
 5850      65734E34 
 5850      5C446F63 
 5851 0801 456E636F 		.ascii	"EncoderCY8CKIT43\\HybridEncoder.cydsn\000"
 5851      64657243 
 5851      5938434B 
 5851      49543433 
 5851      5C487962 
 5852              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
