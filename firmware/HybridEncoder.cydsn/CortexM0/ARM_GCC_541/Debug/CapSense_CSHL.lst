ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB33:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 2


  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 3


  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  91:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  92:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  94:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  95:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  96:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  98:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  28              		.loc 1 137 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 4


  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 138:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 139:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 140:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  38              		.loc 1 140 0
  39 0002 094B     		ldr	r3, .L2
  40 0004 1B5C     		ldrb	r3, [r3, r0]
  41              	.LVL1:
 141:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 143:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 144:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 146:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 148:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 150:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 152:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  42              		.loc 1 154 0
  43 0006 4200     		lsls	r2, r0, #1
  44 0008 0849     		ldr	r1, .L2+4
  45 000a 545A     		ldrh	r4, [r2, r1]
  46 000c 0849     		ldr	r1, .L2+8
  47 000e 5452     		strh	r4, [r2, r1]
 155:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  48              		.loc 1 155 0
  49 0010 0818     		adds	r0, r1, r0
  50              	.LVL2:
  51 0012 0025     		movs	r5, #0
  52 0014 0571     		strb	r5, [r0, #4]
 156:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  53              		.loc 1 156 0
  54 0016 0572     		strb	r5, [r0, #8]
 157:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 158:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  55              		.loc 1 158 0
  56 0018 0648     		ldr	r0, .L2+12
  57 001a C05C     		ldrb	r0, [r0, r3]
  58 001c CB18     		adds	r3, r1, r3
  59              	.LVL3:
  60 001e 1873     		strb	r0, [r3, #12]
 159:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 160:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 166:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 168:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 5


 169:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  61              		.loc 1 173 0
  62 0020 054B     		ldr	r3, .L2+16
  63 0022 D452     		strh	r4, [r2, r3]
 174:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 178:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 180:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 184:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 185:Generated_Source\PSoC4/CapSense_CSHL.c **** }
  64              		.loc 1 185 0
  65              		@ sp needed
  66 0024 30BD     		pop	{r4, r5, pc}
  67              	.L3:
  68 0026 C046     		.align	2
  69              	.L2:
  70 0028 00000000 		.word	CapSense_widgetNumber
  71 002c 00000000 		.word	CapSense_sensorRaw
  72 0030 00000000 		.word	.LANCHOR0
  73 0034 00000000 		.word	.LANCHOR1
  74 0038 00000000 		.word	CapSense_rawFilterData1
  75              		.cfi_endproc
  76              	.LFE33:
  77              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  78              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  79              		.align	2
  80              		.global	CapSense_InitializeSensorBaseline
  81              		.code	16
  82              		.thumb_func
  83              		.type	CapSense_InitializeSensorBaseline, %function
  84              	CapSense_InitializeSensorBaseline:
  85              	.LFB34:
 186:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 189:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 6


 201:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  86              		.loc 1 213 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL4:
  91 0000 10B5     		push	{r4, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 4, -8
  94              		.cfi_offset 14, -4
  95 0002 0400     		movs	r4, r0
 214:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 215:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  96              		.loc 1 215 0
  97 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  98              	.LVL5:
  99              	.L5:
 216:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 100              		.loc 1 216 0 discriminator 1
 101 0008 FFF7FEFF 		bl	CapSense_IsBusy
 102              	.LVL6:
 103 000c 0028     		cmp	r0, #0
 104 000e FBD1     		bne	.L5
 217:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 218:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 220:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 221:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 222:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 105              		.loc 1 222 0
 106 0010 2000     		movs	r0, r4
 107 0012 FFF7FEFF 		bl	CapSense_BaseInit
 108              	.LVL7:
 223:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 109              		.loc 1 223 0
 110              		@ sp needed
 111              	.LVL8:
 112 0016 10BD     		pop	{r4, pc}
 113              		.cfi_endproc
 114              	.LFE34:
 115              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 116              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 117              		.align	2
 118              		.global	CapSense_InitializeAllBaselines
 119              		.code	16
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 7


 120              		.thumb_func
 121              		.type	CapSense_InitializeAllBaselines, %function
 122              	CapSense_InitializeAllBaselines:
 123              	.LFB35:
 224:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 124              		.loc 1 250 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 10B5     		push	{r4, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132              	.LVL9:
 251:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 133              		.loc 1 253 0
 134 0002 0024     		movs	r4, #0
 135 0004 03E0     		b	.L7
 136              	.LVL10:
 137              	.L8:
 254:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 255:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 138              		.loc 1 255 0 discriminator 3
 139 0006 2000     		movs	r0, r4
 140 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 141              	.LVL11:
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 142              		.loc 1 253 0 discriminator 3
 143 000c 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 8


 144              	.LVL12:
 145              	.L7:
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 146              		.loc 1 253 0 is_stmt 0 discriminator 1
 147 000e 012C     		cmp	r4, #1
 148 0010 F9D9     		bls	.L8
 256:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 149              		.loc 1 257 0 is_stmt 1
 150              		@ sp needed
 151              	.LVL13:
 152 0012 10BD     		pop	{r4, pc}
 153              		.cfi_endproc
 154              	.LFE35:
 155              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 156              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 157              		.align	2
 158              		.global	CapSense_InitializeEnabledBaselines
 159              		.code	16
 160              		.thumb_func
 161              		.type	CapSense_InitializeEnabledBaselines, %function
 162              	CapSense_InitializeEnabledBaselines:
 163              	.LFB36:
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 164              		.loc 1 285 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 10B5     		push	{r4, lr}
 169              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 9


 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 287:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 289:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 172              		.loc 1 289 0
 173 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 174              	.LVL14:
 175              	.L10:
 290:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 176              		.loc 1 290 0 discriminator 1
 177 0006 FFF7FEFF 		bl	CapSense_IsBusy
 178              	.LVL15:
 179 000a 0028     		cmp	r0, #0
 180 000c FBD1     		bne	.L10
 181 000e 0024     		movs	r4, #0
 182 0010 09E0     		b	.L11
 183              	.LVL16:
 184              	.L13:
 291:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 292:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 294:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 296:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 185              		.loc 1 297 0
 186 0012 2100     		movs	r1, r4
 187 0014 0548     		ldr	r0, .L14
 188 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 189              	.LVL17:
 298:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 190              		.loc 1 300 0
 191 001a 0028     		cmp	r0, #0
 192 001c 02D0     		beq	.L12
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 303:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 193              		.loc 1 303 0
 194 001e 2000     		movs	r0, r4
 195              	.LVL18:
 196 0020 FFF7FEFF 		bl	CapSense_BaseInit
 197              	.LVL19:
 198              	.L12:
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 199              		.loc 1 295 0 discriminator 2
 200 0024 0134     		adds	r4, r4, #1
 201              	.LVL20:
 202              	.L11:
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 203              		.loc 1 295 0 is_stmt 0 discriminator 1
 204 0026 012C     		cmp	r4, #1
 205 0028 F3D9     		bls	.L13
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 10


 305:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 306:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 206              		.loc 1 306 0 is_stmt 1
 207              		@ sp needed
 208              	.LVL21:
 209 002a 10BD     		pop	{r4, pc}
 210              	.L15:
 211              		.align	2
 212              	.L14:
 213 002c 00000000 		.word	CapSense_sensorEnableMask
 214              		.cfi_endproc
 215              	.LFE36:
 216              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 217              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 218              		.align	2
 219              		.global	CapSense_GetBaselineData
 220              		.code	16
 221              		.thumb_func
 222              		.type	CapSense_GetBaselineData, %function
 223              	CapSense_GetBaselineData:
 224              	.LFB41:
 307:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 308:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 11


 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 351:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 352:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 353:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 354:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 355:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 357:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 361:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 362:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 363:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 366:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 371:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 376:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 383:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 387:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 388:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 391:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 399:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 12


 400:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 403:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 408:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 409:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 413:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 13


 457:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 464:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 467:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 470:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 474:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 480:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 508:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 509:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 510:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 511:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 512:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 14


 514:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 541:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 543:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 544:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 549:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 550:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 554:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 556:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 558:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 560:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 561:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 562:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 564:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 566:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 15


 571:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 595:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 597:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 599:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 601:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 603:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 607:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 608:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 609:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 610:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 16


 628:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 642:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 643:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 644:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 645:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 646:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 647:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 648:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 649:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 650:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 651:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 652:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 656:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 658:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 660:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 664:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 665:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 666:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 667:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 669:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 670:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 17


 685:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 225              		.loc 1 690 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL22:
 691:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 231              		.loc 1 691 0
 232 0000 4000     		lsls	r0, r0, #1
 233              	.LVL23:
 234 0002 014B     		ldr	r3, .L17
 235 0004 185A     		ldrh	r0, [r3, r0]
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 236              		.loc 1 692 0
 237              		@ sp needed
 238 0006 7047     		bx	lr
 239              	.L18:
 240              		.align	2
 241              	.L17:
 242 0008 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE41:
 245              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 246              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_SetBaselineData
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_SetBaselineData, %function
 252              	CapSense_SetBaselineData:
 253              	.LFB42:
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 18


 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 254              		.loc 1 717 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              	.LVL24:
 718:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 260              		.loc 1 718 0
 261 0000 4000     		lsls	r0, r0, #1
 262              	.LVL25:
 263 0002 014B     		ldr	r3, .L20
 264 0004 C152     		strh	r1, [r0, r3]
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 265              		.loc 1 719 0
 266              		@ sp needed
 267 0006 7047     		bx	lr
 268              	.L21:
 269              		.align	2
 270              	.L20:
 271 0008 00000000 		.word	.LANCHOR0
 272              		.cfi_endproc
 273              	.LFE42:
 274              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 275              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 276              		.align	2
 277              		.global	CapSense_GetDiffCountData
 278              		.code	16
 279              		.thumb_func
 280              		.type	CapSense_GetDiffCountData, %function
 281              	CapSense_GetDiffCountData:
 282              	.LFB43:
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 19


 741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 283              		.loc 1 744 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL26:
 745:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 289              		.loc 1 745 0
 290 0000 014B     		ldr	r3, .L23
 291 0002 1818     		adds	r0, r3, r0
 292              	.LVL27:
 293 0004 007A     		ldrb	r0, [r0, #8]
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 294              		.loc 1 746 0
 295              		@ sp needed
 296 0006 7047     		bx	lr
 297              	.L24:
 298              		.align	2
 299              	.L23:
 300 0008 00000000 		.word	.LANCHOR0
 301              		.cfi_endproc
 302              	.LFE43:
 303              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 304              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 305              		.align	2
 306              		.global	CapSense_SetDiffCountData
 307              		.code	16
 308              		.thumb_func
 309              		.type	CapSense_SetDiffCountData, %function
 310              	CapSense_SetDiffCountData:
 311              	.LFB44:
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 20


 769:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 312              		.loc 1 771 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL28:
 772:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 318              		.loc 1 772 0
 319 0000 014B     		ldr	r3, .L26
 320 0002 1818     		adds	r0, r3, r0
 321              	.LVL29:
 322 0004 0172     		strb	r1, [r0, #8]
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 323              		.loc 1 773 0
 324              		@ sp needed
 325 0006 7047     		bx	lr
 326              	.L27:
 327              		.align	2
 328              	.L26:
 329 0008 00000000 		.word	.LANCHOR0
 330              		.cfi_endproc
 331              	.LFE44:
 332              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 333              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 334              		.align	2
 335              		.global	CapSense_GetFingerThreshold
 336              		.code	16
 337              		.thumb_func
 338              		.type	CapSense_GetFingerThreshold, %function
 339              	CapSense_GetFingerThreshold:
 340              	.LFB45:
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 21


 797:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 341              		.loc 1 798 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL30:
 799:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 347              		.loc 1 799 0
 348 0000 014B     		ldr	r3, .L29
 349 0002 185C     		ldrb	r0, [r3, r0]
 350              	.LVL31:
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 351              		.loc 1 800 0
 352              		@ sp needed
 353 0004 7047     		bx	lr
 354              	.L30:
 355 0006 C046     		.align	2
 356              	.L29:
 357 0008 00000000 		.word	CapSense_fingerThreshold
 358              		.cfi_endproc
 359              	.LFE45:
 360              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 361              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 362              		.align	2
 363              		.global	CapSense_GetNoiseThreshold
 364              		.code	16
 365              		.thumb_func
 366              		.type	CapSense_GetNoiseThreshold, %function
 367              	CapSense_GetNoiseThreshold:
 368              	.LFB46:
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 22


 369              		.loc 1 825 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL32:
 826:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 375              		.loc 1 826 0
 376 0000 014B     		ldr	r3, .L32
 377 0002 185C     		ldrb	r0, [r3, r0]
 378              	.LVL33:
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 379              		.loc 1 827 0
 380              		@ sp needed
 381 0004 7047     		bx	lr
 382              	.L33:
 383 0006 C046     		.align	2
 384              	.L32:
 385 0008 00000000 		.word	CapSense_noiseThreshold
 386              		.cfi_endproc
 387              	.LFE46:
 388              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 389              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 390              		.align	2
 391              		.global	CapSense_GetFingerHysteresis
 392              		.code	16
 393              		.thumb_func
 394              		.type	CapSense_GetFingerHysteresis, %function
 395              	CapSense_GetFingerHysteresis:
 396              	.LFB47:
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 397              		.loc 1 853 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 23


 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402              	.LVL34:
 854:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 403              		.loc 1 854 0
 404 0000 014B     		ldr	r3, .L35
 405 0002 185C     		ldrb	r0, [r3, r0]
 406              	.LVL35:
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 407              		.loc 1 855 0
 408              		@ sp needed
 409 0004 7047     		bx	lr
 410              	.L36:
 411 0006 C046     		.align	2
 412              	.L35:
 413 0008 00000000 		.word	CapSense_hysteresis
 414              		.cfi_endproc
 415              	.LFE47:
 416              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 417              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 418              		.align	2
 419              		.global	CapSense_GetNegativeNoiseThreshold
 420              		.code	16
 421              		.thumb_func
 422              		.type	CapSense_GetNegativeNoiseThreshold, %function
 423              	CapSense_GetNegativeNoiseThreshold:
 424              	.LFB48:
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 425              		.loc 1 881 0
 426              		.cfi_startproc
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 24


 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430              	.LVL36:
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 883:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 431              		.loc 1 883 0
 432 0000 014B     		ldr	r3, .L38
 433 0002 185C     		ldrb	r0, [r3, r0]
 434              	.LVL37:
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 885:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 435              		.loc 1 887 0
 436              		@ sp needed
 437 0004 7047     		bx	lr
 438              	.L39:
 439 0006 C046     		.align	2
 440              	.L38:
 441 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 442              		.cfi_endproc
 443              	.LFE48:
 444              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 445              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 446              		.align	2
 447              		.global	CapSense_SetFingerThreshold
 448              		.code	16
 449              		.thumb_func
 450              		.type	CapSense_SetFingerThreshold, %function
 451              	CapSense_SetFingerThreshold:
 452              	.LFB49:
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 890:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 891:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 892:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 893:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 894:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 895:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 25


 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 453              		.loc 1 914 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458              	.LVL38:
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 459              		.loc 1 915 0
 460 0000 014B     		ldr	r3, .L41
 461 0002 1954     		strb	r1, [r3, r0]
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 462              		.loc 1 916 0
 463              		@ sp needed
 464 0004 7047     		bx	lr
 465              	.L42:
 466 0006 C046     		.align	2
 467              	.L41:
 468 0008 00000000 		.word	CapSense_fingerThreshold
 469              		.cfi_endproc
 470              	.LFE49:
 471              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 472              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 473              		.align	2
 474              		.global	CapSense_SetNoiseThreshold
 475              		.code	16
 476              		.thumb_func
 477              		.type	CapSense_SetNoiseThreshold, %function
 478              	CapSense_SetNoiseThreshold:
 479              	.LFB50:
 917:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 918:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 26


 480              		.loc 1 942 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485              	.LVL39:
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 486              		.loc 1 943 0
 487 0000 014B     		ldr	r3, .L44
 488 0002 1954     		strb	r1, [r3, r0]
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 489              		.loc 1 944 0
 490              		@ sp needed
 491 0004 7047     		bx	lr
 492              	.L45:
 493 0006 C046     		.align	2
 494              	.L44:
 495 0008 00000000 		.word	CapSense_noiseThreshold
 496              		.cfi_endproc
 497              	.LFE50:
 498              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 499              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 500              		.align	2
 501              		.global	CapSense_SetFingerHysteresis
 502              		.code	16
 503              		.thumb_func
 504              		.type	CapSense_SetFingerHysteresis, %function
 505              	CapSense_SetFingerHysteresis:
 506              	.LFB51:
 945:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 946:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 507              		.loc 1 970 0
 508              		.cfi_startproc
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 27


 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512              	.LVL40:
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 513              		.loc 1 971 0
 514 0000 014B     		ldr	r3, .L47
 515 0002 1954     		strb	r1, [r3, r0]
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 516              		.loc 1 972 0
 517              		@ sp needed
 518 0004 7047     		bx	lr
 519              	.L48:
 520 0006 C046     		.align	2
 521              	.L47:
 522 0008 00000000 		.word	CapSense_hysteresis
 523              		.cfi_endproc
 524              	.LFE51:
 525              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 526              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 527              		.align	2
 528              		.global	CapSense_SetNegativeNoiseThreshold
 529              		.code	16
 530              		.thumb_func
 531              		.type	CapSense_SetNegativeNoiseThreshold, %function
 532              	CapSense_SetNegativeNoiseThreshold:
 533              	.LFB52:
 973:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 974:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 534              		.loc 1 999 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 28


 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539              	.LVL41:
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 540              		.loc 1 1000 0
 541 0000 014B     		ldr	r3, .L50
 542 0002 1954     		strb	r1, [r3, r0]
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 543              		.loc 1 1001 0
 544              		@ sp needed
 545 0004 7047     		bx	lr
 546              	.L51:
 547 0006 C046     		.align	2
 548              	.L50:
 549 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 550              		.cfi_endproc
 551              	.LFE52:
 552              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 553              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 554              		.align	2
 555              		.global	CapSense_SetDebounce
 556              		.code	16
 557              		.thumb_func
 558              		.type	CapSense_SetDebounce, %function
 559              	CapSense_SetDebounce:
 560              	.LFB53:
1002:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1003:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 561              		.loc 1 1027 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 29


 566              	.LVL42:
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 567              		.loc 1 1028 0
 568 0000 014B     		ldr	r3, .L53
 569 0002 1954     		strb	r1, [r3, r0]
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 570              		.loc 1 1029 0
 571              		@ sp needed
 572 0004 7047     		bx	lr
 573              	.L54:
 574 0006 C046     		.align	2
 575              	.L53:
 576 0008 00000000 		.word	.LANCHOR1
 577              		.cfi_endproc
 578              	.LFE53:
 579              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 580              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 581              		.align	2
 582              		.global	CapSense_SetLowBaselineReset
 583              		.code	16
 584              		.thumb_func
 585              		.type	CapSense_SetLowBaselineReset, %function
 586              	CapSense_SetLowBaselineReset:
 587              	.LFB54:
1030:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1031:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 588              		.loc 1 1055 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593              	.LVL43:
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 30


 594              		.loc 1 1056 0
 595 0000 014B     		ldr	r3, .L56
 596 0002 1818     		adds	r0, r3, r0
 597              	.LVL44:
 598 0004 0171     		strb	r1, [r0, #4]
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 599              		.loc 1 1057 0
 600              		@ sp needed
 601 0006 7047     		bx	lr
 602              	.L57:
 603              		.align	2
 604              	.L56:
 605 0008 00000000 		.word	.LANCHOR1
 606              		.cfi_endproc
 607              	.LFE54:
 608              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 609              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 610              		.align	2
 611              		.global	CapSense_CheckIsSensorActive
 612              		.code	16
 613              		.thumb_func
 614              		.type	CapSense_CheckIsSensorActive, %function
 615              	CapSense_CheckIsSensorActive:
 616              	.LFB55:
1058:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1059:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1060:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1061:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1062:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1064:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1067:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 31


1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 617              		.loc 1 1101 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL45:
 622 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 623              		.cfi_def_cfa_offset 20
 624              		.cfi_offset 4, -20
 625              		.cfi_offset 5, -16
 626              		.cfi_offset 6, -12
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 4746     		mov	r7, r8
 630 0004 80B4     		push	{r7}
 631              		.cfi_def_cfa_offset 24
 632              		.cfi_offset 8, -24
 633 0006 0400     		movs	r4, r0
1102:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1103:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1104:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1106:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1107:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1108:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1109:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 634              		.loc 1 1111 0
 635 0008 224B     		ldr	r3, .L63
 636 000a 1D5C     		ldrb	r5, [r3, r0]
1112:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1113:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 637              		.loc 1 1113 0
 638 000c 224B     		ldr	r3, .L63+4
 639 000e 5F5D     		ldrb	r7, [r3, r5]
 640              	.LVL46:
1114:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 641              		.loc 1 1114 0
 642 0010 224B     		ldr	r3, .L63+8
 643 0012 5E5D     		ldrb	r6, [r3, r5]
 644              	.LVL47:
1115:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 645              		.loc 1 1115 0
 646 0014 224B     		ldr	r3, .L63+12
 647 0016 5B5D     		ldrb	r3, [r3, r5]
 648 0018 9846     		mov	r8, r3
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 32


 649              	.LVL48:
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
1118:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1120:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1121:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 650              		.loc 1 1121 0
 651 001a 0100     		movs	r1, r0
 652 001c 2148     		ldr	r0, .L63+16
 653              	.LVL49:
 654 001e 1030     		adds	r0, r0, #16
 655 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 656              	.LVL50:
 657 0024 0028     		cmp	r0, #0
 658 0026 10D0     		beq	.L59
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 659              		.loc 1 1124 0
 660 0028 1E4B     		ldr	r3, .L63+16
 661 002a 1B19     		adds	r3, r3, r4
 662 002c 1B7A     		ldrb	r3, [r3, #8]
 663 002e BE1B     		subs	r6, r7, r6
 664              	.LVL51:
 665 0030 B342     		cmp	r3, r6
 666 0032 23DA     		bge	.L60
1125:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 667              		.loc 1 1126 0
 668 0034 1B4E     		ldr	r6, .L63+16
 669 0036 3000     		movs	r0, r6
 670 0038 1030     		adds	r0, r0, #16
 671 003a 0022     		movs	r2, #0
 672 003c 2100     		movs	r1, r4
 673 003e FFF7FEFF 		bl	CapSense_SetBitValue
 674              	.LVL52:
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 675              		.loc 1 1128 0
 676 0042 7519     		adds	r5, r6, r5
 677 0044 4346     		mov	r3, r8
 678 0046 2B73     		strb	r3, [r5, #12]
 679 0048 18E0     		b	.L60
 680              	.LVL53:
 681              	.L59:
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 682              		.loc 1 1134 0
 683 004a 164B     		ldr	r3, .L63+16
 684 004c 1B19     		adds	r3, r3, r4
 685 004e 1B7A     		ldrb	r3, [r3, #8]
 686 0050 BE19     		adds	r6, r7, r6
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 33


 687              	.LVL54:
 688 0052 B342     		cmp	r3, r6
 689 0054 0EDB     		blt	.L61
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 690              		.loc 1 1136 0
 691 0056 134B     		ldr	r3, .L63+16
 692 0058 5D19     		adds	r5, r3, r5
 693 005a 2B7B     		ldrb	r3, [r5, #12]
 694 005c 013B     		subs	r3, r3, #1
 695 005e DBB2     		uxtb	r3, r3
 696 0060 2B73     		strb	r3, [r5, #12]
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 697              		.loc 1 1138 0
 698 0062 002B     		cmp	r3, #0
 699 0064 0AD1     		bne	.L60
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 700              		.loc 1 1140 0
 701 0066 0122     		movs	r2, #1
 702 0068 2100     		movs	r1, r4
 703 006a 0E48     		ldr	r0, .L63+16
 704 006c 1030     		adds	r0, r0, #16
 705 006e FFF7FEFF 		bl	CapSense_SetBitValue
 706              	.LVL55:
 707 0072 03E0     		b	.L60
 708              	.L61:
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 709              		.loc 1 1146 0
 710 0074 0B4B     		ldr	r3, .L63+16
 711 0076 5D19     		adds	r5, r3, r5
 712 0078 4346     		mov	r3, r8
 713 007a 2B73     		strb	r3, [r5, #12]
 714              	.L60:
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1149:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 715              		.loc 1 1150 0
 716 007c 2100     		movs	r1, r4
 717 007e 0948     		ldr	r0, .L63+16
 718 0080 1030     		adds	r0, r0, #16
 719 0082 FFF7FEFF 		bl	CapSense_GetBitValue
 720              	.LVL56:
 721 0086 0028     		cmp	r0, #0
 722 0088 00D0     		beq	.L62
 723 008a 0120     		movs	r0, #1
 724              	.L62:
1151:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 725              		.loc 1 1151 0 discriminator 4
 726              		@ sp needed
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 34


 727              	.LVL57:
 728              	.LVL58:
 729              	.LVL59:
 730 008c 04BC     		pop	{r2}
 731 008e 9046     		mov	r8, r2
 732 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 733              	.L64:
 734 0092 C046     		.align	2
 735              	.L63:
 736 0094 00000000 		.word	CapSense_widgetNumber
 737 0098 00000000 		.word	CapSense_fingerThreshold
 738 009c 00000000 		.word	CapSense_hysteresis
 739 00a0 00000000 		.word	.LANCHOR1
 740 00a4 00000000 		.word	.LANCHOR0
 741              		.cfi_endproc
 742              	.LFE55:
 743              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 744              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 745              		.align	2
 746              		.global	CapSense_CheckIsWidgetActive
 747              		.code	16
 748              		.thumb_func
 749              		.type	CapSense_CheckIsWidgetActive, %function
 750              	CapSense_CheckIsWidgetActive:
 751              	.LFB56:
1152:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1153:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1154:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1155:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1156:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1157:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1158:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1160:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 35


 752              		.loc 1 1183 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              	.LVL60:
 757 0000 70B5     		push	{r4, r5, r6, lr}
 758              		.cfi_def_cfa_offset 16
 759              		.cfi_offset 4, -16
 760              		.cfi_offset 5, -12
 761              		.cfi_offset 6, -8
 762              		.cfi_offset 14, -4
1184:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 763              		.loc 1 1184 0
 764 0002 084B     		ldr	r3, .L69
 765 0004 1C5C     		ldrb	r4, [r3, r0]
 766              	.LVL61:
1185:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 767              		.loc 1 1185 0
 768 0006 1818     		adds	r0, r3, r0
 769              	.LVL62:
 770 0008 0579     		ldrb	r5, [r0, #4]
 771 000a 6519     		adds	r5, r4, r5
 772              	.LVL63:
1186:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 773              		.loc 1 1186 0
 774 000c 0026     		movs	r6, #0
 775              	.LVL64:
 776              	.L67:
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1188:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1189:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1190:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1191:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 777              		.loc 1 1191 0
 778 000e 2000     		movs	r0, r4
 779 0010 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 780              	.LVL65:
 781 0014 0028     		cmp	r0, #0
 782 0016 00D0     		beq	.L66
1192:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1193:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 783              		.loc 1 1193 0
 784 0018 0126     		movs	r6, #1
 785              	.LVL66:
 786              	.L66:
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1195:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 787              		.loc 1 1195 0
 788 001a 0134     		adds	r4, r4, #1
 789              	.LVL67:
1196:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1197:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 790              		.loc 1 1197 0
 791 001c A542     		cmp	r5, r4
 792 001e F6D8     		bhi	.L67
1198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1199:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 36


1200:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1201:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1202:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 793              		.loc 1 1202 0
 794 0020 3000     		movs	r0, r6
 795              		@ sp needed
 796              	.LVL68:
 797              	.LVL69:
 798              	.LVL70:
 799 0022 70BD     		pop	{r4, r5, r6, pc}
 800              	.L70:
 801              		.align	2
 802              	.L69:
 803 0024 00000000 		.word	.LANCHOR2
 804              		.cfi_endproc
 805              	.LFE56:
 806              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 807              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 808              		.align	2
 809              		.global	CapSense_CheckIsAnyWidgetActive
 810              		.code	16
 811              		.thumb_func
 812              		.type	CapSense_CheckIsAnyWidgetActive, %function
 813              	CapSense_CheckIsAnyWidgetActive:
 814              	.LFB57:
1203:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1205:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 815              		.loc 1 1229 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 37


 820              		.cfi_def_cfa_offset 16
 821              		.cfi_offset 4, -16
 822              		.cfi_offset 5, -12
 823              		.cfi_offset 6, -8
 824              		.cfi_offset 14, -4
 825              	.LVL71:
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1231:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1232:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 826              		.loc 1 1232 0
 827 0002 0025     		movs	r5, #0
1233:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 828              		.loc 1 1234 0
 829 0004 0024     		movs	r4, #0
 830 0006 06E0     		b	.L72
 831              	.LVL72:
 832              	.L74:
1235:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 833              		.loc 1 1236 0
 834 0008 2000     		movs	r0, r4
 835 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 836              	.LVL73:
 837 000e 0028     		cmp	r0, #0
 838 0010 00D0     		beq	.L73
1237:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1238:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 839              		.loc 1 1238 0
 840 0012 0125     		movs	r5, #1
 841              	.LVL74:
 842              	.L73:
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 843              		.loc 1 1234 0 discriminator 2
 844 0014 0134     		adds	r4, r4, #1
 845              	.LVL75:
 846              	.L72:
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 847              		.loc 1 1234 0 is_stmt 0 discriminator 1
 848 0016 012C     		cmp	r4, #1
 849 0018 F6D9     		bls	.L74
1239:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1240:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1241:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1242:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1243:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1245:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 850              		.loc 1 1245 0 is_stmt 1
 851 001a 2800     		movs	r0, r5
 852              		@ sp needed
 853              	.LVL76:
 854              	.LVL77:
 855 001c 70BD     		pop	{r4, r5, r6, pc}
 856              		.cfi_endproc
 857              	.LFE57:
 858              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 38


 859 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 860              		.align	2
 861              		.global	CapSense_EnableWidget
 862              		.code	16
 863              		.thumb_func
 864              		.type	CapSense_EnableWidget, %function
 865              	CapSense_EnableWidget:
 866              	.LFB58:
1246:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1248:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 867              		.loc 1 1276 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              	.LVL78:
 872 0000 70B5     		push	{r4, r5, r6, lr}
 873              		.cfi_def_cfa_offset 16
 874              		.cfi_offset 4, -16
 875              		.cfi_offset 5, -12
 876              		.cfi_offset 6, -8
 877              		.cfi_offset 14, -4
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1278:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 878              		.loc 1 1278 0
 879 0002 084B     		ldr	r3, .L78
 880 0004 1C5C     		ldrb	r4, [r3, r0]
 881              	.LVL79:
1279:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 39


 882              		.loc 1 1279 0
 883 0006 1818     		adds	r0, r3, r0
 884              	.LVL80:
 885 0008 0579     		ldrb	r5, [r0, #4]
 886 000a 6519     		adds	r5, r4, r5
 887 000c EDB2     		uxtb	r5, r5
 888              	.LVL81:
 889              	.L77:
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1281:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1282:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1283:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1284:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 890              		.loc 1 1284 0 discriminator 1
 891 000e 0122     		movs	r2, #1
 892 0010 2100     		movs	r1, r4
 893 0012 0548     		ldr	r0, .L78+4
 894 0014 FFF7FEFF 		bl	CapSense_SetBitValue
 895              	.LVL82:
1285:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 896              		.loc 1 1285 0 discriminator 1
 897 0018 0134     		adds	r4, r4, #1
 898              	.LVL83:
 899 001a E4B2     		uxtb	r4, r4
 900              	.LVL84:
1286:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1287:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 901              		.loc 1 1287 0 discriminator 1
 902 001c A542     		cmp	r5, r4
 903 001e F6D8     		bhi	.L77
1288:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 904              		.loc 1 1288 0
 905              		@ sp needed
 906              	.LVL85:
 907              	.LVL86:
 908 0020 70BD     		pop	{r4, r5, r6, pc}
 909              	.L79:
 910 0022 C046     		.align	2
 911              	.L78:
 912 0024 00000000 		.word	.LANCHOR2
 913 0028 00000000 		.word	CapSense_sensorEnableMask
 914              		.cfi_endproc
 915              	.LFE58:
 916              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 917              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 918              		.align	2
 919              		.global	CapSense_DisableWidget
 920              		.code	16
 921              		.thumb_func
 922              		.type	CapSense_DisableWidget, %function
 923              	CapSense_DisableWidget:
 924              	.LFB59:
1289:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 40


1294:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1296:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 925              		.loc 1 1319 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL87:
 930 0000 70B5     		push	{r4, r5, r6, lr}
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 4, -16
 933              		.cfi_offset 5, -12
 934              		.cfi_offset 6, -8
 935              		.cfi_offset 14, -4
1320:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 936              		.loc 1 1320 0
 937 0002 084B     		ldr	r3, .L82
 938 0004 1C5C     		ldrb	r4, [r3, r0]
 939              	.LVL88:
1321:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 940              		.loc 1 1321 0
 941 0006 1818     		adds	r0, r3, r0
 942              	.LVL89:
 943 0008 0579     		ldrb	r5, [r0, #4]
 944 000a 6519     		adds	r5, r4, r5
 945 000c EDB2     		uxtb	r5, r5
 946              	.LVL90:
 947              	.L81:
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1323:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1324:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1325:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1327:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 41


 948              		.loc 1 1327 0 discriminator 1
 949 000e 0022     		movs	r2, #0
 950 0010 2100     		movs	r1, r4
 951 0012 0548     		ldr	r0, .L82+4
 952 0014 FFF7FEFF 		bl	CapSense_SetBitValue
 953              	.LVL91:
1328:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 954              		.loc 1 1328 0 discriminator 1
 955 0018 0134     		adds	r4, r4, #1
 956              	.LVL92:
 957 001a E4B2     		uxtb	r4, r4
 958              	.LVL93:
1329:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1330:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 959              		.loc 1 1330 0 discriminator 1
 960 001c A542     		cmp	r5, r4
 961 001e F6D8     		bhi	.L81
1331:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 962              		.loc 1 1331 0
 963              		@ sp needed
 964              	.LVL94:
 965              	.LVL95:
 966 0020 70BD     		pop	{r4, r5, r6, pc}
 967              	.L83:
 968 0022 C046     		.align	2
 969              	.L82:
 970 0024 00000000 		.word	.LANCHOR2
 971 0028 00000000 		.word	CapSense_sensorEnableMask
 972              		.cfi_endproc
 973              	.LFE59:
 974              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 975              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 976              		.align	2
 977              		.global	CapSense_MedianFilter
 978              		.code	16
 979              		.thumb_func
 980              		.type	CapSense_MedianFilter, %function
 981              	CapSense_MedianFilter:
 982              	.LFB60:
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1334:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1335:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1341:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1342:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1343:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1344:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 42


1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1382:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1385:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1391:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 43


1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1419:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1424:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1432:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1446:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1447:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 44


1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1496:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1497:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 45


1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1523:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1526:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1529:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1533:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1535:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1540:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1544:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1548:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1552:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1558:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1559:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1564:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1573:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 46


1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1581:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1587:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1618:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1625:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 47


1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1643:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1647:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1660:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1670:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1675:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1680:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1683:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1685:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1691:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 48


1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1696:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1699:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1700:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1703:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1710:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1743:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 49


1749:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1756:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1761:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1771:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1773:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1780:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1786:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1793:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1802:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 50


1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1813:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1833:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1847:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1858:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 51


1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1869:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1883:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1889:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1898:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1899:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1902:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1903:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1905:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 52


1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1948:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1955:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1960:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1967:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1973:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 53


1977:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1980:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1989:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2000:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2020:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 54


2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2035:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2046:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2057:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2071:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2077:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2086:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2089:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2090:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 55


2091:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2092:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2136:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2143:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 56


2148:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2151:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2158:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2170:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2175:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2179:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2183:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2186:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2193:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2194:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2196:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2200:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2204:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 57


2205:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2215:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2217:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2233:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2242:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2246:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 58


2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2266:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2270:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2277:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2280:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2282:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2286:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2293:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2296:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2298:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2302:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2309:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 59


2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2320:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2326:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2337:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2340:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2341:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2343:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 983              		.loc 1 2371 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 60


 987              		@ link register save eliminated.
 988              	.LVL96:
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2373:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 989              		.loc 1 2374 0
 990 0000 8842     		cmp	r0, r1
 991 0002 02D9     		bls	.L85
 992 0004 0300     		movs	r3, r0
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 993              		.loc 1 2378 0
 994 0006 0800     		movs	r0, r1
 995              	.LVL97:
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 996              		.loc 1 2377 0
 997 0008 1900     		movs	r1, r3
 998              	.LVL98:
 999              	.L85:
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2380:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1000              		.loc 1 2381 0
 1001 000a 9142     		cmp	r1, r2
 1002 000c 00D9     		bls	.L86
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1003              		.loc 1 2383 0
 1004 000e 1100     		movs	r1, r2
 1005              	.LVL99:
 1006              	.L86:
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2385:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1007              		.loc 1 2386 0
 1008 0010 031C     		adds	r3, r0, #0
 1009 0012 8842     		cmp	r0, r1
 1010 0014 00D2     		bcs	.L87
 1011 0016 0B1C     		adds	r3, r1, #0
 1012              	.L87:
 1013 0018 98B2     		uxth	r0, r3
 1014              	.LVL100:
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1015              		.loc 1 2387 0
 1016              		@ sp needed
 1017 001a 7047     		bx	lr
 1018              		.cfi_endproc
 1019              	.LFE60:
 1020              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1021              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1022              		.align	2
 1023              		.global	CapSense_IIR4Filter
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CapSense_IIR4Filter, %function
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 61


 1027              	CapSense_IIR4Filter:
 1028              	.LFB61:
2388:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2390:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2391:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2393:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2395:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2402:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2422:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2425:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2427:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2428:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2429:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 62


2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2455:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2457:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2459:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2462:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2465:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2467:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2469:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1029              		.loc 1 2491 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              		@ link register save eliminated.
 1034              	.LVL101:
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2493:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 63


2494:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1035              		.loc 1 2495 0
 1036 0000 4018     		adds	r0, r0, r1
 1037              	.LVL102:
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1038              		.loc 1 2496 0
 1039 0002 4900     		lsls	r1, r1, #1
 1040              	.LVL103:
 1041 0004 4018     		adds	r0, r0, r1
 1042              	.LVL104:
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1043              		.loc 1 2497 0
 1044 0006 8008     		lsrs	r0, r0, #2
 1045              	.LVL105:
2498:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1046              		.loc 1 2499 0
 1047 0008 80B2     		uxth	r0, r0
 1048              	.LVL106:
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1049              		.loc 1 2500 0
 1050              		@ sp needed
 1051 000a 7047     		bx	lr
 1052              		.cfi_endproc
 1053              	.LFE61:
 1054              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1055              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 1056              		.align	2
 1057              		.global	CapSense_UpdateBaselineNoThreshold
 1058              		.code	16
 1059              		.thumb_func
 1060              		.type	CapSense_UpdateBaselineNoThreshold, %function
 1061              	CapSense_UpdateBaselineNoThreshold:
 1062              	.LFB37:
 350:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 1063              		.loc 1 350 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              	.LVL107:
 1068 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1069              		.cfi_def_cfa_offset 20
 1070              		.cfi_offset 4, -20
 1071              		.cfi_offset 5, -16
 1072              		.cfi_offset 6, -12
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 4746     		mov	r7, r8
 1076 0004 80B4     		push	{r7}
 1077              		.cfi_def_cfa_offset 24
 1078              		.cfi_offset 8, -24
 1079 0006 82B0     		sub	sp, sp, #8
 1080              		.cfi_def_cfa_offset 32
 1081 0008 0400     		movs	r4, r0
 355:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 1082              		.loc 1 355 0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 64


 1083 000a 3C4B     		ldr	r3, .L102
 1084 000c 1E5C     		ldrb	r6, [r3, r0]
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1085              		.loc 1 364 0
 1086 000e 3C4B     		ldr	r3, .L102+4
 1087 0010 9B5D     		ldrb	r3, [r3, r6]
 1088 0012 0193     		str	r3, [sp, #4]
 1089              	.LVL108:
 365:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1090              		.loc 1 365 0
 1091 0014 4200     		lsls	r2, r0, #1
 1092 0016 3B4B     		ldr	r3, .L102+8
 1093 0018 D75A     		ldrh	r7, [r2, r3]
 1094              	.LVL109:
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1095              		.loc 1 368 0
 1096 001a 3B4B     		ldr	r3, .L102+12
 1097 001c 9B79     		ldrb	r3, [r3, #6]
 1098 001e 002B     		cmp	r3, #0
 1099 0020 08D0     		beq	.L92
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 1100              		.loc 1 389 0
 1101 0022 3A4D     		ldr	r5, .L102+16
 1102 0024 9046     		mov	r8, r2
 1103 0026 515B     		ldrh	r1, [r2, r5]
 1104 0028 3800     		movs	r0, r7
 1105              	.LVL110:
 1106 002a FFF7FEFF 		bl	CapSense_IIR4Filter
 1107              	.LVL111:
 1108 002e 0700     		movs	r7, r0
 1109              	.LVL112:
 390:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1110              		.loc 1 390 0
 1111 0030 4346     		mov	r3, r8
 1112 0032 5853     		strh	r0, [r3, r5]
 1113              	.LVL113:
 1114              	.L92:
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1115              		.loc 1 411 0
 1116 0034 E1B2     		uxtb	r1, r4
 1117 0036 334A     		ldr	r2, .L102+8
 1118 0038 3548     		ldr	r0, .L102+20
 1119 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 1120              	.LVL114:
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1121              		.loc 1 416 0
 1122 003e 6300     		lsls	r3, r4, #1
 1123 0040 344A     		ldr	r2, .L102+24
 1124 0042 9A5A     		ldrh	r2, [r3, r2]
 1125 0044 9742     		cmp	r7, r2
 1126 0046 07D3     		bcc	.L93
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1127              		.loc 1 418 0
 1128 0048 0021     		movs	r1, #0
 1129 004a 334B     		ldr	r3, .L102+28
 1130 004c 1955     		strb	r1, [r3, r4]
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 65


 1131              		.loc 1 419 0
 1132 004e BD1A     		subs	r5, r7, r2
 1133 0050 ADB2     		uxth	r5, r5
 1134              	.LVL115:
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1135              		.loc 1 420 0
 1136 0052 0123     		movs	r3, #1
 1137 0054 9846     		mov	r8, r3
 1138 0056 03E0     		b	.L94
 1139              	.LVL116:
 1140              	.L93:
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1141              		.loc 1 424 0
 1142 0058 D51B     		subs	r5, r2, r7
 1143 005a ADB2     		uxth	r5, r5
 1144              	.LVL117:
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1145              		.loc 1 425 0
 1146 005c 0023     		movs	r3, #0
 1147 005e 9846     		mov	r8, r3
 1148              	.LVL118:
 1149              	.L94:
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1150              		.loc 1 429 0
 1151 0060 4346     		mov	r3, r8
 1152 0062 002B     		cmp	r3, #0
 1153 0064 15D1     		bne	.L95
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1154              		.loc 1 429 0 is_stmt 0 discriminator 1
 1155 0066 2D4B     		ldr	r3, .L102+32
 1156 0068 9B5D     		ldrb	r3, [r3, r6]
 1157 006a 9D42     		cmp	r5, r3
 1158 006c 11D9     		bls	.L95
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1159              		.loc 1 434 0 is_stmt 1
 1160 006e 2A4B     		ldr	r3, .L102+28
 1161 0070 1B5D     		ldrb	r3, [r3, r4]
 1162 0072 254A     		ldr	r2, .L102+12
 1163 0074 1219     		adds	r2, r2, r4
 1164 0076 1279     		ldrb	r2, [r2, #4]
 1165 0078 9342     		cmp	r3, r2
 1166 007a 06D3     		bcc	.L96
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1167              		.loc 1 436 0
 1168 007c 2000     		movs	r0, r4
 1169 007e FFF7FEFF 		bl	CapSense_BaseInit
 1170              	.LVL119:
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1171              		.loc 1 437 0
 1172 0082 0022     		movs	r2, #0
 1173 0084 244B     		ldr	r3, .L102+28
 1174 0086 1A55     		strb	r2, [r3, r4]
 1175 0088 1EE0     		b	.L97
 1176              	.L96:
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1177              		.loc 1 441 0
 1178 008a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 66


 1179 008c 224A     		ldr	r2, .L102+28
 1180 008e 1355     		strb	r3, [r2, r4]
 1181 0090 1AE0     		b	.L97
 1182              	.L95:
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1183              		.loc 1 449 0
 1184 0092 6B46     		mov	r3, sp
 1185 0094 9B88     		ldrh	r3, [r3, #4]
 1186 0096 9D42     		cmp	r5, r3
 1187 0098 06D9     		bls	.L98
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 1188              		.loc 1 450 0 discriminator 1
 1189 009a 204B     		ldr	r3, .L102+32
 1190 009c 9B5D     		ldrb	r3, [r3, r6]
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1191              		.loc 1 449 0 discriminator 1
 1192 009e 9D42     		cmp	r5, r3
 1193 00a0 12D2     		bcs	.L97
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1194              		.loc 1 451 0
 1195 00a2 4346     		mov	r3, r8
 1196 00a4 002B     		cmp	r3, #0
 1197 00a6 0FD1     		bne	.L97
 1198              	.L98:
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1199              		.loc 1 462 0
 1200 00a8 1302     		lsls	r3, r2, #8
 1201 00aa 9C46     		mov	ip, r3
 1202              	.LVL120:
 463:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1203              		.loc 1 463 0
 1204 00ac 1948     		ldr	r0, .L102+24
 1205 00ae 0119     		adds	r1, r0, r4
 1206 00b0 0B79     		ldrb	r3, [r1, #4]
 1207              	.LVL121:
 1208 00b2 6646     		mov	r6, ip
 1209 00b4 3343     		orrs	r3, r6
 1210              	.LVL122:
 466:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1211              		.loc 1 466 0
 1212 00b6 FF18     		adds	r7, r7, r3
 1213              	.LVL123:
 469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1214              		.loc 1 469 0
 1215 00b8 BF1A     		subs	r7, r7, r2
 1216              	.LVL124:
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1217              		.loc 1 472 0
 1218 00ba 3A0A     		lsrs	r2, r7, #8
 1219 00bc 6300     		lsls	r3, r4, #1
 1220 00be C252     		strh	r2, [r0, r3]
 473:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1221              		.loc 1 473 0
 1222 00c0 0F71     		strb	r7, [r1, #4]
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1223              		.loc 1 475 0
 1224 00c2 0022     		movs	r2, #0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 67


 1225 00c4 144B     		ldr	r3, .L102+28
 1226 00c6 1A55     		strb	r2, [r3, r4]
 1227              	.LVL125:
 1228              	.L97:
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1229              		.loc 1 482 0
 1230 00c8 6B46     		mov	r3, sp
 1231 00ca 9E88     		ldrh	r6, [r3, #4]
 1232 00cc B542     		cmp	r5, r6
 1233 00ce 0DD9     		bls	.L99
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1234              		.loc 1 482 0 is_stmt 0 discriminator 1
 1235 00d0 4346     		mov	r3, r8
 1236 00d2 002B     		cmp	r3, #0
 1237 00d4 0AD0     		beq	.L99
 1238              	.LVL126:
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1239              		.loc 1 486 0 is_stmt 1
 1240 00d6 FF2D     		cmp	r5, #255
 1241 00d8 04D9     		bls	.L100
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1242              		.loc 1 488 0
 1243 00da 0E4B     		ldr	r3, .L102+24
 1244              	.LVL127:
 1245 00dc 1C19     		adds	r4, r3, r4
 1246              	.LVL128:
 1247 00de FF23     		movs	r3, #255
 1248 00e0 2372     		strb	r3, [r4, #8]
 1249 00e2 07E0     		b	.L91
 1250              	.LVL129:
 1251              	.L100:
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1252              		.loc 1 492 0
 1253 00e4 0B4B     		ldr	r3, .L102+24
 1254              	.LVL130:
 1255 00e6 1C19     		adds	r4, r3, r4
 1256              	.LVL131:
 1257 00e8 2572     		strb	r5, [r4, #8]
 1258 00ea 03E0     		b	.L91
 1259              	.LVL132:
 1260              	.L99:
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1261              		.loc 1 501 0
 1262 00ec 094B     		ldr	r3, .L102+24
 1263 00ee 1C19     		adds	r4, r3, r4
 1264              	.LVL133:
 1265 00f0 0023     		movs	r3, #0
 1266 00f2 2372     		strb	r3, [r4, #8]
 1267              	.L91:
 508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1268              		.loc 1 508 0
 1269 00f4 02B0     		add	sp, sp, #8
 1270              		@ sp needed
 1271              	.LVL134:
 1272              	.LVL135:
 1273 00f6 04BC     		pop	{r2}
 1274 00f8 9046     		mov	r8, r2
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 68


 1275 00fa F0BD     		pop	{r4, r5, r6, r7, pc}
 1276              	.L103:
 1277              		.align	2
 1278              	.L102:
 1279 00fc 00000000 		.word	CapSense_widgetNumber
 1280 0100 00000000 		.word	CapSense_noiseThreshold
 1281 0104 00000000 		.word	CapSense_sensorRaw
 1282 0108 00000000 		.word	.LANCHOR1
 1283 010c 00000000 		.word	CapSense_rawFilterData1
 1284 0110 00000000 		.word	CapSense_config
 1285 0114 00000000 		.word	.LANCHOR0
 1286 0118 00000000 		.word	CapSense_lowBaselineResetCnt
 1287 011c 00000000 		.word	CapSense_negativeNoiseThreshold
 1288              		.cfi_endproc
 1289              	.LFE37:
 1290              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1291              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1292              		.align	2
 1293              		.global	CapSense_UpdateSensorBaseline
 1294              		.code	16
 1295              		.thumb_func
 1296              		.type	CapSense_UpdateSensorBaseline, %function
 1297              	CapSense_UpdateSensorBaseline:
 1298              	.LFB38:
 542:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1299              		.loc 1 542 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 0
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              	.LVL136:
 1304 0000 10B5     		push	{r4, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 4, -8
 1307              		.cfi_offset 14, -4
 1308 0002 0400     		movs	r4, r0
 554:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1309              		.loc 1 554 0
 1310 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1311              	.LVL137:
 557:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1312              		.loc 1 557 0
 1313 0008 2000     		movs	r0, r4
 1314 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1315              	.LVL138:
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1316              		.loc 1 563 0
 1317              		@ sp needed
 1318              	.LVL139:
 1319 000e 10BD     		pop	{r4, pc}
 1320              		.cfi_endproc
 1321              	.LFE38:
 1322              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1323              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1324              		.align	2
 1325              		.global	CapSense_UpdateEnabledBaselines
 1326              		.code	16
 1327              		.thumb_func
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 69


 1328              		.type	CapSense_UpdateEnabledBaselines, %function
 1329              	CapSense_UpdateEnabledBaselines:
 1330              	.LFB39:
 596:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1331              		.loc 1 596 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335 0000 10B5     		push	{r4, lr}
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 4, -8
 1338              		.cfi_offset 14, -4
 1339              	.LVL140:
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1340              		.loc 1 600 0
 1341 0002 0024     		movs	r4, #0
 1342 0004 09E0     		b	.L106
 1343              	.LVL141:
 1344              	.L108:
 602:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1345              		.loc 1 602 0
 1346 0006 2100     		movs	r1, r4
 1347 0008 0548     		ldr	r0, .L109
 1348 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1349              	.LVL142:
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1350              		.loc 1 604 0
 1351 000e 0028     		cmp	r0, #0
 1352 0010 02D0     		beq	.L107
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1353              		.loc 1 606 0
 1354 0012 2000     		movs	r0, r4
 1355              	.LVL143:
 1356 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1357              	.LVL144:
 1358              	.L107:
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1359              		.loc 1 600 0 discriminator 2
 1360 0018 0134     		adds	r4, r4, #1
 1361              	.LVL145:
 1362              	.L106:
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1363              		.loc 1 600 0 is_stmt 0 discriminator 1
 1364 001a 012C     		cmp	r4, #1
 1365 001c F3D9     		bls	.L108
 609:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1366              		.loc 1 609 0 is_stmt 1
 1367              		@ sp needed
 1368              	.LVL146:
 1369 001e 10BD     		pop	{r4, pc}
 1370              	.L110:
 1371              		.align	2
 1372              	.L109:
 1373 0020 00000000 		.word	CapSense_sensorEnableMask
 1374              		.cfi_endproc
 1375              	.LFE39:
 1376              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 70


 1377              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1378              		.align	2
 1379              		.global	CapSense_UpdateWidgetBaseline
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	CapSense_UpdateWidgetBaseline, %function
 1383              	CapSense_UpdateWidgetBaseline:
 1384              	.LFB40:
 641:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1385              		.loc 1 641 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 0
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389              	.LVL147:
 1390 0000 70B5     		push	{r4, r5, r6, lr}
 1391              		.cfi_def_cfa_offset 16
 1392              		.cfi_offset 4, -16
 1393              		.cfi_offset 5, -12
 1394              		.cfi_offset 6, -8
 1395              		.cfi_offset 14, -4
 649:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1396              		.loc 1 649 0
 1397 0002 094B     		ldr	r3, .L115
 1398 0004 1A18     		adds	r2, r3, r0
 1399 0006 1579     		ldrb	r5, [r2, #4]
 1400              	.LVL148:
 652:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1401              		.loc 1 652 0
 1402 0008 1C5C     		ldrb	r4, [r3, r0]
 1403              	.LVL149:
 655:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1404              		.loc 1 655 0
 1405 000a 2D19     		adds	r5, r5, r4
 1406              	.LVL150:
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1407              		.loc 1 657 0
 1408 000c 09E0     		b	.L112
 1409              	.LVL151:
 1410              	.L114:
 659:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1411              		.loc 1 659 0
 1412 000e 2100     		movs	r1, r4
 1413 0010 0648     		ldr	r0, .L115+4
 1414 0012 FFF7FEFF 		bl	CapSense_GetBitValue
 1415              	.LVL152:
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1416              		.loc 1 661 0
 1417 0016 0028     		cmp	r0, #0
 1418 0018 02D0     		beq	.L113
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1419              		.loc 1 663 0
 1420 001a 2000     		movs	r0, r4
 1421              	.LVL153:
 1422 001c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1423              	.LVL154:
 1424              	.L113:
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 71


 1425              		.loc 1 657 0 discriminator 2
 1426 0020 0134     		adds	r4, r4, #1
 1427              	.LVL155:
 1428              	.L112:
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1429              		.loc 1 657 0 is_stmt 0 discriminator 1
 1430 0022 AC42     		cmp	r4, r5
 1431 0024 F3D3     		bcc	.L114
 666:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1432              		.loc 1 666 0 is_stmt 1
 1433              		@ sp needed
 1434              	.LVL156:
 1435              	.LVL157:
 1436 0026 70BD     		pop	{r4, r5, r6, pc}
 1437              	.L116:
 1438              		.align	2
 1439              	.L115:
 1440 0028 00000000 		.word	.LANCHOR2
 1441 002c 00000000 		.word	CapSense_sensorEnableMask
 1442              		.cfi_endproc
 1443              	.LFE40:
 1444              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1445              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1446              		.align	2
 1447              		.global	CapSense_GetWidgetNumber
 1448              		.code	16
 1449              		.thumb_func
 1450              		.type	CapSense_GetWidgetNumber, %function
 1451              	CapSense_GetWidgetNumber:
 1452              	.LFB62:
2501:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2503:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2504:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2505:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2506:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2508:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 72


2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2543:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2546:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2551:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2552:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2578:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 73


2585:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2586:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2587:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2588:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2589:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2615:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2620:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2622:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2623:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2624:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2625:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2627:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 74


2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2664:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2677:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2688:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 75


2699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2700:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2701:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2702:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2703:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2704:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2705:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2706:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2707:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2708:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2709:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1453              		.loc 1 2724 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458              	.LVL158:
2725:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 1459              		.loc 1 2725 0
 1460 0000 014B     		ldr	r3, .L118
 1461 0002 185C     		ldrb	r0, [r3, r0]
 1462              	.LVL159:
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1463              		.loc 1 2726 0
 1464              		@ sp needed
 1465 0004 7047     		bx	lr
 1466              	.L119:
 1467 0006 C046     		.align	2
 1468              	.L118:
 1469 0008 00000000 		.word	CapSense_widgetNumber
 1470              		.cfi_endproc
 1471              	.LFE62:
 1472              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1473              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1474              		.align	2
 1475              		.global	CapSense_GetLowBaselineReset
 1476              		.code	16
 1477              		.thumb_func
 1478              		.type	CapSense_GetLowBaselineReset, %function
 1479              	CapSense_GetLowBaselineReset:
 1480              	.LFB63:
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 76


2728:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1481              		.loc 1 2750 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              		@ link register save eliminated.
 1486              	.LVL160:
2751:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1487              		.loc 1 2751 0
 1488 0000 014B     		ldr	r3, .L121
 1489 0002 1818     		adds	r0, r3, r0
 1490              	.LVL161:
 1491 0004 0079     		ldrb	r0, [r0, #4]
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1492              		.loc 1 2752 0
 1493              		@ sp needed
 1494 0006 7047     		bx	lr
 1495              	.L122:
 1496              		.align	2
 1497              	.L121:
 1498 0008 00000000 		.word	.LANCHOR1
 1499              		.cfi_endproc
 1500              	.LFE63:
 1501              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1502              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1503              		.align	2
 1504              		.global	CapSense_GetDebounce
 1505              		.code	16
 1506              		.thumb_func
 1507              		.type	CapSense_GetDebounce, %function
 1508              	CapSense_GetDebounce:
 1509              	.LFB64:
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 77


2756:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1510              		.loc 1 2776 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 1515              	.LVL162:
2777:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 1516              		.loc 1 2777 0
 1517 0000 014B     		ldr	r3, .L124
 1518 0002 185C     		ldrb	r0, [r3, r0]
 1519              	.LVL163:
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1520              		.loc 1 2778 0
 1521              		@ sp needed
 1522 0004 7047     		bx	lr
 1523              	.L125:
 1524 0006 C046     		.align	2
 1525              	.L124:
 1526 0008 00000000 		.word	.LANCHOR1
 1527              		.cfi_endproc
 1528              	.LFE64:
 1529              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1530              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1531              		.align	2
 1532              		.global	CapSense_EnableRawDataFilters
 1533              		.code	16
 1534              		.thumb_func
 1535              		.type	CapSense_EnableRawDataFilters, %function
 1536              	CapSense_EnableRawDataFilters:
 1537              	.LFB65:
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2781:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2782:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2783:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2784:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 78


2785:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2786:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2788:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2789:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2790:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1538              		.loc 1 2802 0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 0
 1541              		@ frame_needed = 0, uses_anonymous_args = 0
 1542              		@ link register save eliminated.
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1543              		.loc 1 2803 0
 1544 0000 0122     		movs	r2, #1
 1545 0002 014B     		ldr	r3, .L127
 1546 0004 9A71     		strb	r2, [r3, #6]
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1547              		.loc 1 2804 0
 1548              		@ sp needed
 1549 0006 7047     		bx	lr
 1550              	.L128:
 1551              		.align	2
 1552              	.L127:
 1553 0008 00000000 		.word	.LANCHOR1
 1554              		.cfi_endproc
 1555              	.LFE65:
 1556              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1557              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1558              		.align	2
 1559              		.global	CapSense_DisableRawDataFilters
 1560              		.code	16
 1561              		.thumb_func
 1562              		.type	CapSense_DisableRawDataFilters, %function
 1563              	CapSense_DisableRawDataFilters:
 1564              	.LFB66:
2805:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 79


2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1565              		.loc 1 2827 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              		@ link register save eliminated.
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1570              		.loc 1 2828 0
 1571 0000 0022     		movs	r2, #0
 1572 0002 014B     		ldr	r3, .L130
 1573 0004 9A71     		strb	r2, [r3, #6]
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1574              		.loc 1 2829 0
 1575              		@ sp needed
 1576 0006 7047     		bx	lr
 1577              	.L131:
 1578              		.align	2
 1579              	.L130:
 1580 0008 00000000 		.word	.LANCHOR1
 1581              		.cfi_endproc
 1582              	.LFE66:
 1583              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1584              		.global	CapSense_numberOfSensors
 1585              		.global	CapSense_rawDataIndex
 1586              		.global	CapSense_debounce
 1587              		.comm	CapSense_hysteresis,2,4
 1588              		.comm	CapSense_negativeNoiseThreshold,2,4
 1589              		.comm	CapSense_noiseThreshold,2,4
 1590              		.comm	CapSense_fingerThreshold,2,4
 1591              		.global	CapSense_enableRawFilters
 1592              		.global	CapSense_lowBaselineReset
 1593              		.comm	CapSense_lowBaselineResetCnt,2,4
 1594              		.global	CapSense_sensorOnMask
 1595              		.global	CapSense_sensorSignal
 1596              		.global	CapSense_sensorBaselineLow
 1597              		.global	CapSense_sensorBaseline
 1598              		.comm	CapSense_rawFilterData1,4,4
 1599              		.section	.rodata
 1600              		.align	2
 1601              		.set	.LANCHOR2,. + 0
 1602              		.type	CapSense_rawDataIndex, %object
 1603              		.size	CapSense_rawDataIndex, 2
 1604              	CapSense_rawDataIndex:
 1605 0000 00       		.byte	0
 1606 0001 01       		.byte	1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 80


 1607 0002 0000     		.space	2
 1608              		.type	CapSense_numberOfSensors, %object
 1609              		.size	CapSense_numberOfSensors, 2
 1610              	CapSense_numberOfSensors:
 1611 0004 01       		.byte	1
 1612 0005 01       		.byte	1
 1613              		.data
 1614              		.align	2
 1615              		.set	.LANCHOR1,. + 0
 1616              		.type	CapSense_debounce, %object
 1617              		.size	CapSense_debounce, 2
 1618              	CapSense_debounce:
 1619 0000 05       		.byte	5
 1620 0001 05       		.byte	5
 1621 0002 0000     		.space	2
 1622              		.type	CapSense_lowBaselineReset, %object
 1623              		.size	CapSense_lowBaselineReset, 2
 1624              	CapSense_lowBaselineReset:
 1625 0004 1E       		.byte	30
 1626 0005 1E       		.byte	30
 1627              		.type	CapSense_enableRawFilters, %object
 1628              		.size	CapSense_enableRawFilters, 1
 1629              	CapSense_enableRawFilters:
 1630 0006 01       		.byte	1
 1631              		.bss
 1632              		.align	2
 1633              		.set	.LANCHOR0,. + 0
 1634              		.type	CapSense_sensorBaseline, %object
 1635              		.size	CapSense_sensorBaseline, 4
 1636              	CapSense_sensorBaseline:
 1637 0000 00000000 		.space	4
 1638              		.type	CapSense_sensorBaselineLow, %object
 1639              		.size	CapSense_sensorBaselineLow, 2
 1640              	CapSense_sensorBaselineLow:
 1641 0004 0000     		.space	2
 1642 0006 0000     		.space	2
 1643              		.type	CapSense_sensorSignal, %object
 1644              		.size	CapSense_sensorSignal, 2
 1645              	CapSense_sensorSignal:
 1646 0008 0000     		.space	2
 1647 000a 0000     		.space	2
 1648              		.type	CapSense_debounceCounter, %object
 1649              		.size	CapSense_debounceCounter, 3
 1650              	CapSense_debounceCounter:
 1651 000c 000000   		.space	3
 1652 000f 00       		.space	1
 1653              		.type	CapSense_sensorOnMask, %object
 1654              		.size	CapSense_sensorOnMask, 1
 1655              	CapSense_sensorOnMask:
 1656 0010 00       		.space	1
 1657              		.text
 1658              	.Letext0:
 1659              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1660              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 1661              		.file 4 "Generated_Source\\PSoC4\\CapSense.h"
 1662              		.section	.debug_info,"",%progbits
 1663              	.Ldebug_info0:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 81


 1664 0000 EF0D0000 		.4byte	0xdef
 1665 0004 0400     		.2byte	0x4
 1666 0006 00000000 		.4byte	.Ldebug_abbrev0
 1667 000a 04       		.byte	0x4
 1668 000b 01       		.uleb128 0x1
 1669 000c 1C040000 		.4byte	.LASF129
 1670 0010 0C       		.byte	0xc
 1671 0011 9E090000 		.4byte	.LASF130
 1672 0015 7E030000 		.4byte	.LASF131
 1673 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1674 001d 00000000 		.4byte	0
 1675 0021 00000000 		.4byte	.Ldebug_line0
 1676 0025 02       		.uleb128 0x2
 1677 0026 01       		.byte	0x1
 1678 0027 06       		.byte	0x6
 1679 0028 040A0000 		.4byte	.LASF0
 1680 002c 02       		.uleb128 0x2
 1681 002d 01       		.byte	0x1
 1682 002e 08       		.byte	0x8
 1683 002f F0080000 		.4byte	.LASF1
 1684 0033 02       		.uleb128 0x2
 1685 0034 02       		.byte	0x2
 1686 0035 05       		.byte	0x5
 1687 0036 DD070000 		.4byte	.LASF2
 1688 003a 02       		.uleb128 0x2
 1689 003b 02       		.byte	0x2
 1690 003c 07       		.byte	0x7
 1691 003d 100A0000 		.4byte	.LASF3
 1692 0041 02       		.uleb128 0x2
 1693 0042 04       		.byte	0x4
 1694 0043 05       		.byte	0x5
 1695 0044 E7070000 		.4byte	.LASF4
 1696 0048 02       		.uleb128 0x2
 1697 0049 04       		.byte	0x4
 1698 004a 07       		.byte	0x7
 1699 004b 82080000 		.4byte	.LASF5
 1700 004f 02       		.uleb128 0x2
 1701 0050 08       		.byte	0x8
 1702 0051 05       		.byte	0x5
 1703 0052 77060000 		.4byte	.LASF6
 1704 0056 02       		.uleb128 0x2
 1705 0057 08       		.byte	0x8
 1706 0058 07       		.byte	0x7
 1707 0059 DD020000 		.4byte	.LASF7
 1708 005d 03       		.uleb128 0x3
 1709 005e 04       		.byte	0x4
 1710 005f 05       		.byte	0x5
 1711 0060 696E7400 		.ascii	"int\000"
 1712 0064 02       		.uleb128 0x2
 1713 0065 04       		.byte	0x4
 1714 0066 07       		.byte	0x7
 1715 0067 3F010000 		.4byte	.LASF8
 1716 006b 04       		.uleb128 0x4
 1717 006c 820A0000 		.4byte	.LASF9
 1718 0070 02       		.byte	0x2
 1719 0071 D201     		.2byte	0x1d2
 1720 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 82


 1721 0077 04       		.uleb128 0x4
 1722 0078 1D060000 		.4byte	.LASF10
 1723 007c 02       		.byte	0x2
 1724 007d D301     		.2byte	0x1d3
 1725 007f 3A000000 		.4byte	0x3a
 1726 0083 04       		.uleb128 0x4
 1727 0084 69070000 		.4byte	.LASF11
 1728 0088 02       		.byte	0x2
 1729 0089 D401     		.2byte	0x1d4
 1730 008b 48000000 		.4byte	0x48
 1731 008f 02       		.uleb128 0x2
 1732 0090 04       		.byte	0x4
 1733 0091 04       		.byte	0x4
 1734 0092 98020000 		.4byte	.LASF12
 1735 0096 02       		.uleb128 0x2
 1736 0097 08       		.byte	0x8
 1737 0098 04       		.byte	0x4
 1738 0099 880A0000 		.4byte	.LASF13
 1739 009d 02       		.uleb128 0x2
 1740 009e 01       		.byte	0x1
 1741 009f 08       		.byte	0x8
 1742 00a0 E6050000 		.4byte	.LASF14
 1743 00a4 02       		.uleb128 0x2
 1744 00a5 04       		.byte	0x4
 1745 00a6 07       		.byte	0x7
 1746 00a7 79080000 		.4byte	.LASF15
 1747 00ab 02       		.uleb128 0x2
 1748 00ac 08       		.byte	0x8
 1749 00ad 04       		.byte	0x4
 1750 00ae A9070000 		.4byte	.LASF16
 1751 00b2 05       		.uleb128 0x5
 1752 00b3 5C       		.byte	0x5c
 1753 00b4 03       		.byte	0x3
 1754 00b5 2F       		.byte	0x2f
 1755 00b6 CF010000 		.4byte	0x1cf
 1756 00ba 06       		.uleb128 0x6
 1757 00bb 29060000 		.4byte	.LASF17
 1758 00bf 03       		.byte	0x3
 1759 00c0 31       		.byte	0x31
 1760 00c1 CF010000 		.4byte	0x1cf
 1761 00c5 00       		.byte	0
 1762 00c6 06       		.uleb128 0x6
 1763 00c7 CE070000 		.4byte	.LASF18
 1764 00cb 03       		.byte	0x3
 1765 00cc 32       		.byte	0x32
 1766 00cd CF010000 		.4byte	0x1cf
 1767 00d1 04       		.byte	0x4
 1768 00d2 06       		.uleb128 0x6
 1769 00d3 7A090000 		.4byte	.LASF19
 1770 00d7 03       		.byte	0x3
 1771 00d8 33       		.byte	0x33
 1772 00d9 CF010000 		.4byte	0x1cf
 1773 00dd 08       		.byte	0x8
 1774 00de 06       		.uleb128 0x6
 1775 00df E3080000 		.4byte	.LASF20
 1776 00e3 03       		.byte	0x3
 1777 00e4 34       		.byte	0x34
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 83


 1778 00e5 CF010000 		.4byte	0x1cf
 1779 00e9 0C       		.byte	0xc
 1780 00ea 06       		.uleb128 0x6
 1781 00eb FA090000 		.4byte	.LASF21
 1782 00ef 03       		.byte	0x3
 1783 00f0 35       		.byte	0x35
 1784 00f1 CF010000 		.4byte	0x1cf
 1785 00f5 10       		.byte	0x10
 1786 00f6 06       		.uleb128 0x6
 1787 00f7 0E080000 		.4byte	.LASF22
 1788 00fb 03       		.byte	0x3
 1789 00fc 36       		.byte	0x36
 1790 00fd D5010000 		.4byte	0x1d5
 1791 0101 14       		.byte	0x14
 1792 0102 06       		.uleb128 0x6
 1793 0103 9E020000 		.4byte	.LASF23
 1794 0107 03       		.byte	0x3
 1795 0108 37       		.byte	0x37
 1796 0109 E0010000 		.4byte	0x1e0
 1797 010d 18       		.byte	0x18
 1798 010e 06       		.uleb128 0x6
 1799 010f C9040000 		.4byte	.LASF24
 1800 0113 03       		.byte	0x3
 1801 0114 38       		.byte	0x38
 1802 0115 CF010000 		.4byte	0x1cf
 1803 0119 1C       		.byte	0x1c
 1804 011a 06       		.uleb128 0x6
 1805 011b C8020000 		.4byte	.LASF25
 1806 011f 03       		.byte	0x3
 1807 0120 39       		.byte	0x39
 1808 0121 CF010000 		.4byte	0x1cf
 1809 0125 20       		.byte	0x20
 1810 0126 06       		.uleb128 0x6
 1811 0127 8D010000 		.4byte	.LASF26
 1812 012b 03       		.byte	0x3
 1813 012c 3A       		.byte	0x3a
 1814 012d CF010000 		.4byte	0x1cf
 1815 0131 24       		.byte	0x24
 1816 0132 06       		.uleb128 0x6
 1817 0133 09070000 		.4byte	.LASF27
 1818 0137 03       		.byte	0x3
 1819 0138 3B       		.byte	0x3b
 1820 0139 E6010000 		.4byte	0x1e6
 1821 013d 28       		.byte	0x28
 1822 013e 06       		.uleb128 0x6
 1823 013f 5C010000 		.4byte	.LASF28
 1824 0143 03       		.byte	0x3
 1825 0144 3C       		.byte	0x3c
 1826 0145 E6010000 		.4byte	0x1e6
 1827 0149 2C       		.byte	0x2c
 1828 014a 06       		.uleb128 0x6
 1829 014b AC080000 		.4byte	.LASF29
 1830 014f 03       		.byte	0x3
 1831 0150 3D       		.byte	0x3d
 1832 0151 E6010000 		.4byte	0x1e6
 1833 0155 30       		.byte	0x30
 1834 0156 06       		.uleb128 0x6
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 84


 1835 0157 57080000 		.4byte	.LASF30
 1836 015b 03       		.byte	0x3
 1837 015c 3E       		.byte	0x3e
 1838 015d CF010000 		.4byte	0x1cf
 1839 0161 34       		.byte	0x34
 1840 0162 06       		.uleb128 0x6
 1841 0163 48000000 		.4byte	.LASF31
 1842 0167 03       		.byte	0x3
 1843 0168 3F       		.byte	0x3f
 1844 0169 CF010000 		.4byte	0x1cf
 1845 016d 38       		.byte	0x38
 1846 016e 06       		.uleb128 0x6
 1847 016f 0E060000 		.4byte	.LASF32
 1848 0173 03       		.byte	0x3
 1849 0174 40       		.byte	0x40
 1850 0175 D5010000 		.4byte	0x1d5
 1851 0179 3C       		.byte	0x3c
 1852 017a 06       		.uleb128 0x6
 1853 017b E8010000 		.4byte	.LASF33
 1854 017f 03       		.byte	0x3
 1855 0180 41       		.byte	0x41
 1856 0181 D5010000 		.4byte	0x1d5
 1857 0185 40       		.byte	0x40
 1858 0186 06       		.uleb128 0x6
 1859 0187 95000000 		.4byte	.LASF34
 1860 018b 03       		.byte	0x3
 1861 018c 42       		.byte	0x42
 1862 018d D5010000 		.4byte	0x1d5
 1863 0191 44       		.byte	0x44
 1864 0192 06       		.uleb128 0x6
 1865 0193 CF060000 		.4byte	.LASF35
 1866 0197 03       		.byte	0x3
 1867 0198 43       		.byte	0x43
 1868 0199 FB010000 		.4byte	0x1fb
 1869 019d 48       		.byte	0x48
 1870 019e 06       		.uleb128 0x6
 1871 019f A7060000 		.4byte	.LASF36
 1872 01a3 03       		.byte	0x3
 1873 01a4 44       		.byte	0x44
 1874 01a5 0C020000 		.4byte	0x20c
 1875 01a9 4C       		.byte	0x4c
 1876 01aa 06       		.uleb128 0x6
 1877 01ab DF040000 		.4byte	.LASF37
 1878 01af 03       		.byte	0x3
 1879 01b0 45       		.byte	0x45
 1880 01b1 FB010000 		.4byte	0x1fb
 1881 01b5 50       		.byte	0x50
 1882 01b6 06       		.uleb128 0x6
 1883 01b7 A5000000 		.4byte	.LASF38
 1884 01bb 03       		.byte	0x3
 1885 01bc 46       		.byte	0x46
 1886 01bd 26020000 		.4byte	0x226
 1887 01c1 54       		.byte	0x54
 1888 01c2 06       		.uleb128 0x6
 1889 01c3 230A0000 		.4byte	.LASF39
 1890 01c7 03       		.byte	0x3
 1891 01c8 47       		.byte	0x47
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 85


 1892 01c9 41020000 		.4byte	0x241
 1893 01cd 58       		.byte	0x58
 1894 01ce 00       		.byte	0
 1895 01cf 07       		.uleb128 0x7
 1896 01d0 04       		.byte	0x4
 1897 01d1 6B000000 		.4byte	0x6b
 1898 01d5 07       		.uleb128 0x7
 1899 01d6 04       		.byte	0x4
 1900 01d7 DB010000 		.4byte	0x1db
 1901 01db 08       		.uleb128 0x8
 1902 01dc 6B000000 		.4byte	0x6b
 1903 01e0 07       		.uleb128 0x7
 1904 01e1 04       		.byte	0x4
 1905 01e2 83000000 		.4byte	0x83
 1906 01e6 07       		.uleb128 0x7
 1907 01e7 04       		.byte	0x4
 1908 01e8 77000000 		.4byte	0x77
 1909 01ec 09       		.uleb128 0x9
 1910 01ed 77000000 		.4byte	0x77
 1911 01f1 FB010000 		.4byte	0x1fb
 1912 01f5 0A       		.uleb128 0xa
 1913 01f6 83000000 		.4byte	0x83
 1914 01fa 00       		.byte	0
 1915 01fb 07       		.uleb128 0x7
 1916 01fc 04       		.byte	0x4
 1917 01fd EC010000 		.4byte	0x1ec
 1918 0201 0B       		.uleb128 0xb
 1919 0202 0C020000 		.4byte	0x20c
 1920 0206 0A       		.uleb128 0xa
 1921 0207 83000000 		.4byte	0x83
 1922 020b 00       		.byte	0
 1923 020c 07       		.uleb128 0x7
 1924 020d 04       		.byte	0x4
 1925 020e 01020000 		.4byte	0x201
 1926 0212 09       		.uleb128 0x9
 1927 0213 83000000 		.4byte	0x83
 1928 0217 26020000 		.4byte	0x226
 1929 021b 0A       		.uleb128 0xa
 1930 021c D5010000 		.4byte	0x1d5
 1931 0220 0A       		.uleb128 0xa
 1932 0221 83000000 		.4byte	0x83
 1933 0225 00       		.byte	0
 1934 0226 07       		.uleb128 0x7
 1935 0227 04       		.byte	0x4
 1936 0228 12020000 		.4byte	0x212
 1937 022c 0B       		.uleb128 0xb
 1938 022d 41020000 		.4byte	0x241
 1939 0231 0A       		.uleb128 0xa
 1940 0232 CF010000 		.4byte	0x1cf
 1941 0236 0A       		.uleb128 0xa
 1942 0237 83000000 		.4byte	0x83
 1943 023b 0A       		.uleb128 0xa
 1944 023c 83000000 		.4byte	0x83
 1945 0240 00       		.byte	0
 1946 0241 07       		.uleb128 0x7
 1947 0242 04       		.byte	0x4
 1948 0243 2C020000 		.4byte	0x22c
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 86


 1949 0247 0C       		.uleb128 0xc
 1950 0248 18010000 		.4byte	.LASF40
 1951 024c 03       		.byte	0x3
 1952 024d 48       		.byte	0x48
 1953 024e B2000000 		.4byte	0xb2
 1954 0252 05       		.uleb128 0x5
 1955 0253 0C       		.byte	0xc
 1956 0254 03       		.byte	0x3
 1957 0255 4A       		.byte	0x4a
 1958 0256 A3020000 		.4byte	0x2a3
 1959 025a 06       		.uleb128 0x6
 1960 025b 89050000 		.4byte	.LASF41
 1961 025f 03       		.byte	0x3
 1962 0260 4C       		.byte	0x4c
 1963 0261 6B000000 		.4byte	0x6b
 1964 0265 00       		.byte	0
 1965 0266 06       		.uleb128 0x6
 1966 0267 F5010000 		.4byte	.LASF42
 1967 026b 03       		.byte	0x3
 1968 026c 4D       		.byte	0x4d
 1969 026d 6B000000 		.4byte	0x6b
 1970 0271 01       		.byte	0x1
 1971 0272 06       		.uleb128 0x6
 1972 0273 4C010000 		.4byte	.LASF43
 1973 0277 03       		.byte	0x3
 1974 0278 4E       		.byte	0x4e
 1975 0279 6B000000 		.4byte	0x6b
 1976 027d 02       		.byte	0x2
 1977 027e 06       		.uleb128 0x6
 1978 027f C0050000 		.4byte	.LASF44
 1979 0283 03       		.byte	0x3
 1980 0284 4F       		.byte	0x4f
 1981 0285 77000000 		.4byte	0x77
 1982 0289 04       		.byte	0x4
 1983 028a 06       		.uleb128 0x6
 1984 028b C0070000 		.4byte	.LASF45
 1985 028f 03       		.byte	0x3
 1986 0290 50       		.byte	0x50
 1987 0291 77000000 		.4byte	0x77
 1988 0295 06       		.byte	0x6
 1989 0296 06       		.uleb128 0x6
 1990 0297 94080000 		.4byte	.LASF46
 1991 029b 03       		.byte	0x3
 1992 029c 51       		.byte	0x51
 1993 029d A3020000 		.4byte	0x2a3
 1994 02a1 08       		.byte	0x8
 1995 02a2 00       		.byte	0
 1996 02a3 07       		.uleb128 0x7
 1997 02a4 04       		.byte	0x4
 1998 02a5 A9020000 		.4byte	0x2a9
 1999 02a9 08       		.uleb128 0x8
 2000 02aa 47020000 		.4byte	0x247
 2001 02ae 0C       		.uleb128 0xc
 2002 02af 2E030000 		.4byte	.LASF47
 2003 02b3 03       		.byte	0x3
 2004 02b4 52       		.byte	0x52
 2005 02b5 52020000 		.4byte	0x252
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 87


 2006 02b9 0D       		.uleb128 0xd
 2007 02ba F7060000 		.4byte	.LASF48
 2008 02be 01       		.byte	0x1
 2009 02bf 88       		.byte	0x88
 2010 02c0 00000000 		.4byte	.LFB33
 2011 02c4 3C000000 		.4byte	.LFE33-.LFB33
 2012 02c8 01       		.uleb128 0x1
 2013 02c9 9C       		.byte	0x9c
 2014 02ca ED020000 		.4byte	0x2ed
 2015 02ce 0E       		.uleb128 0xe
 2016 02cf B9050000 		.4byte	.LASF50
 2017 02d3 01       		.byte	0x1
 2018 02d4 88       		.byte	0x88
 2019 02d5 83000000 		.4byte	0x83
 2020 02d9 00000000 		.4byte	.LLST0
 2021 02dd 0F       		.uleb128 0xf
 2022 02de 0E030000 		.4byte	.LASF52
 2023 02e2 01       		.byte	0x1
 2024 02e3 8C       		.byte	0x8c
 2025 02e4 6B000000 		.4byte	0x6b
 2026 02e8 21000000 		.4byte	.LLST1
 2027 02ec 00       		.byte	0
 2028 02ed 0D       		.uleb128 0xd
 2029 02ee 9D010000 		.4byte	.LASF49
 2030 02f2 01       		.byte	0x1
 2031 02f3 D4       		.byte	0xd4
 2032 02f4 00000000 		.4byte	.LFB34
 2033 02f8 18000000 		.4byte	.LFE34-.LFB34
 2034 02fc 01       		.uleb128 0x1
 2035 02fd 9C       		.byte	0x9c
 2036 02fe 3F030000 		.4byte	0x33f
 2037 0302 0E       		.uleb128 0xe
 2038 0303 B9050000 		.4byte	.LASF50
 2039 0307 01       		.byte	0x1
 2040 0308 D4       		.byte	0xd4
 2041 0309 83000000 		.4byte	0x83
 2042 030d 34000000 		.4byte	.LLST2
 2043 0311 10       		.uleb128 0x10
 2044 0312 08000000 		.4byte	.LVL5
 2045 0316 A50D0000 		.4byte	0xda5
 2046 031a 25030000 		.4byte	0x325
 2047 031e 11       		.uleb128 0x11
 2048 031f 01       		.uleb128 0x1
 2049 0320 50       		.byte	0x50
 2050 0321 02       		.uleb128 0x2
 2051 0322 74       		.byte	0x74
 2052 0323 00       		.sleb128 0
 2053 0324 00       		.byte	0
 2054 0325 12       		.uleb128 0x12
 2055 0326 0C000000 		.4byte	.LVL6
 2056 032a B00D0000 		.4byte	0xdb0
 2057 032e 13       		.uleb128 0x13
 2058 032f 16000000 		.4byte	.LVL7
 2059 0333 B9020000 		.4byte	0x2b9
 2060 0337 11       		.uleb128 0x11
 2061 0338 01       		.uleb128 0x1
 2062 0339 50       		.byte	0x50
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 88


 2063 033a 02       		.uleb128 0x2
 2064 033b 74       		.byte	0x74
 2065 033c 00       		.sleb128 0
 2066 033d 00       		.byte	0
 2067 033e 00       		.byte	0
 2068 033f 0D       		.uleb128 0xd
 2069 0340 24090000 		.4byte	.LASF51
 2070 0344 01       		.byte	0x1
 2071 0345 F9       		.byte	0xf9
 2072 0346 00000000 		.4byte	.LFB35
 2073 034a 14000000 		.4byte	.LFE35-.LFB35
 2074 034e 01       		.uleb128 0x1
 2075 034f 9C       		.byte	0x9c
 2076 0350 72030000 		.4byte	0x372
 2077 0354 14       		.uleb128 0x14
 2078 0355 6900     		.ascii	"i\000"
 2079 0357 01       		.byte	0x1
 2080 0358 FB       		.byte	0xfb
 2081 0359 83000000 		.4byte	0x83
 2082 035d 60000000 		.4byte	.LLST3
 2083 0361 13       		.uleb128 0x13
 2084 0362 0C000000 		.4byte	.LVL11
 2085 0366 ED020000 		.4byte	0x2ed
 2086 036a 11       		.uleb128 0x11
 2087 036b 01       		.uleb128 0x1
 2088 036c 50       		.byte	0x50
 2089 036d 02       		.uleb128 0x2
 2090 036e 74       		.byte	0x74
 2091 036f 00       		.sleb128 0
 2092 0370 00       		.byte	0
 2093 0371 00       		.byte	0
 2094 0372 15       		.uleb128 0x15
 2095 0373 69010000 		.4byte	.LASF53
 2096 0377 01       		.byte	0x1
 2097 0378 1C01     		.2byte	0x11c
 2098 037a 00000000 		.4byte	.LFB36
 2099 037e 30000000 		.4byte	.LFE36-.LFB36
 2100 0382 01       		.uleb128 0x1
 2101 0383 9C       		.byte	0x9c
 2102 0384 DD030000 		.4byte	0x3dd
 2103 0388 16       		.uleb128 0x16
 2104 0389 6900     		.ascii	"i\000"
 2105 038b 01       		.byte	0x1
 2106 038c 1E01     		.2byte	0x11e
 2107 038e 83000000 		.4byte	0x83
 2108 0392 7F000000 		.4byte	.LLST4
 2109 0396 17       		.uleb128 0x17
 2110 0397 FB000000 		.4byte	.LASF54
 2111 039b 01       		.byte	0x1
 2112 039c 1F01     		.2byte	0x11f
 2113 039e 83000000 		.4byte	0x83
 2114 03a2 92000000 		.4byte	.LLST5
 2115 03a6 12       		.uleb128 0x12
 2116 03a7 06000000 		.4byte	.LVL14
 2117 03ab BB0D0000 		.4byte	0xdbb
 2118 03af 12       		.uleb128 0x12
 2119 03b0 0A000000 		.4byte	.LVL15
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 89


 2120 03b4 B00D0000 		.4byte	0xdb0
 2121 03b8 10       		.uleb128 0x10
 2122 03b9 1A000000 		.4byte	.LVL17
 2123 03bd C60D0000 		.4byte	0xdc6
 2124 03c1 CC030000 		.4byte	0x3cc
 2125 03c5 11       		.uleb128 0x11
 2126 03c6 01       		.uleb128 0x1
 2127 03c7 51       		.byte	0x51
 2128 03c8 02       		.uleb128 0x2
 2129 03c9 74       		.byte	0x74
 2130 03ca 00       		.sleb128 0
 2131 03cb 00       		.byte	0
 2132 03cc 13       		.uleb128 0x13
 2133 03cd 24000000 		.4byte	.LVL19
 2134 03d1 B9020000 		.4byte	0x2b9
 2135 03d5 11       		.uleb128 0x11
 2136 03d6 01       		.uleb128 0x1
 2137 03d7 50       		.byte	0x50
 2138 03d8 02       		.uleb128 0x2
 2139 03d9 74       		.byte	0x74
 2140 03da 00       		.sleb128 0
 2141 03db 00       		.byte	0
 2142 03dc 00       		.byte	0
 2143 03dd 18       		.uleb128 0x18
 2144 03de 44090000 		.4byte	.LASF57
 2145 03e2 01       		.byte	0x1
 2146 03e3 B102     		.2byte	0x2b1
 2147 03e5 77000000 		.4byte	0x77
 2148 03e9 00000000 		.4byte	.LFB41
 2149 03ed 0C000000 		.4byte	.LFE41-.LFB41
 2150 03f1 01       		.uleb128 0x1
 2151 03f2 9C       		.byte	0x9c
 2152 03f3 08040000 		.4byte	0x408
 2153 03f7 19       		.uleb128 0x19
 2154 03f8 B9050000 		.4byte	.LASF50
 2155 03fc 01       		.byte	0x1
 2156 03fd B102     		.2byte	0x2b1
 2157 03ff 83000000 		.4byte	0x83
 2158 0403 A5000000 		.4byte	.LLST6
 2159 0407 00       		.byte	0
 2160 0408 15       		.uleb128 0x15
 2161 0409 CF010000 		.4byte	.LASF55
 2162 040d 01       		.byte	0x1
 2163 040e CC02     		.2byte	0x2cc
 2164 0410 00000000 		.4byte	.LFB42
 2165 0414 0C000000 		.4byte	.LFE42-.LFB42
 2166 0418 01       		.uleb128 0x1
 2167 0419 9C       		.byte	0x9c
 2168 041a 3D040000 		.4byte	0x43d
 2169 041e 19       		.uleb128 0x19
 2170 041f B9050000 		.4byte	.LASF50
 2171 0423 01       		.byte	0x1
 2172 0424 CC02     		.2byte	0x2cc
 2173 0426 83000000 		.4byte	0x83
 2174 042a C6000000 		.4byte	.LLST7
 2175 042e 1A       		.uleb128 0x1a
 2176 042f 24060000 		.4byte	.LASF56
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 90


 2177 0433 01       		.byte	0x1
 2178 0434 CC02     		.2byte	0x2cc
 2179 0436 77000000 		.4byte	0x77
 2180 043a 01       		.uleb128 0x1
 2181 043b 51       		.byte	0x51
 2182 043c 00       		.byte	0
 2183 043d 18       		.uleb128 0x18
 2184 043e AA040000 		.4byte	.LASF58
 2185 0442 01       		.byte	0x1
 2186 0443 E702     		.2byte	0x2e7
 2187 0445 6B000000 		.4byte	0x6b
 2188 0449 00000000 		.4byte	.LFB43
 2189 044d 0C000000 		.4byte	.LFE43-.LFB43
 2190 0451 01       		.uleb128 0x1
 2191 0452 9C       		.byte	0x9c
 2192 0453 68040000 		.4byte	0x468
 2193 0457 19       		.uleb128 0x19
 2194 0458 B9050000 		.4byte	.LASF50
 2195 045c 01       		.byte	0x1
 2196 045d E702     		.2byte	0x2e7
 2197 045f 83000000 		.4byte	0x83
 2198 0463 E7000000 		.4byte	.LLST8
 2199 0467 00       		.byte	0
 2200 0468 15       		.uleb128 0x15
 2201 0469 05020000 		.4byte	.LASF59
 2202 046d 01       		.byte	0x1
 2203 046e 0203     		.2byte	0x302
 2204 0470 00000000 		.4byte	.LFB44
 2205 0474 0C000000 		.4byte	.LFE44-.LFB44
 2206 0478 01       		.uleb128 0x1
 2207 0479 9C       		.byte	0x9c
 2208 047a 9D040000 		.4byte	0x49d
 2209 047e 19       		.uleb128 0x19
 2210 047f B9050000 		.4byte	.LASF50
 2211 0483 01       		.byte	0x1
 2212 0484 0203     		.2byte	0x302
 2213 0486 83000000 		.4byte	0x83
 2214 048a 08010000 		.4byte	.LLST9
 2215 048e 1A       		.uleb128 0x1a
 2216 048f F9030000 		.4byte	.LASF60
 2217 0493 01       		.byte	0x1
 2218 0494 0203     		.2byte	0x302
 2219 0496 6B000000 		.4byte	0x6b
 2220 049a 01       		.uleb128 0x1
 2221 049b 51       		.byte	0x51
 2222 049c 00       		.byte	0
 2223 049d 18       		.uleb128 0x18
 2224 049e 8D070000 		.4byte	.LASF61
 2225 04a2 01       		.byte	0x1
 2226 04a3 1D03     		.2byte	0x31d
 2227 04a5 6B000000 		.4byte	0x6b
 2228 04a9 00000000 		.4byte	.LFB45
 2229 04ad 0C000000 		.4byte	.LFE45-.LFB45
 2230 04b1 01       		.uleb128 0x1
 2231 04b2 9C       		.byte	0x9c
 2232 04b3 C8040000 		.4byte	0x4c8
 2233 04b7 19       		.uleb128 0x19
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 91


 2234 04b8 0E030000 		.4byte	.LASF52
 2235 04bc 01       		.byte	0x1
 2236 04bd 1D03     		.2byte	0x31d
 2237 04bf 83000000 		.4byte	0x83
 2238 04c3 29010000 		.4byte	.LLST10
 2239 04c7 00       		.byte	0
 2240 04c8 18       		.uleb128 0x18
 2241 04c9 AD020000 		.4byte	.LASF62
 2242 04cd 01       		.byte	0x1
 2243 04ce 3803     		.2byte	0x338
 2244 04d0 6B000000 		.4byte	0x6b
 2245 04d4 00000000 		.4byte	.LFB46
 2246 04d8 0C000000 		.4byte	.LFE46-.LFB46
 2247 04dc 01       		.uleb128 0x1
 2248 04dd 9C       		.byte	0x9c
 2249 04de F3040000 		.4byte	0x4f3
 2250 04e2 19       		.uleb128 0x19
 2251 04e3 0E030000 		.4byte	.LASF52
 2252 04e7 01       		.byte	0x1
 2253 04e8 3803     		.2byte	0x338
 2254 04ea 83000000 		.4byte	0x83
 2255 04ee 4A010000 		.4byte	.LLST11
 2256 04f2 00       		.byte	0
 2257 04f3 18       		.uleb128 0x18
 2258 04f4 FF030000 		.4byte	.LASF63
 2259 04f8 01       		.byte	0x1
 2260 04f9 5403     		.2byte	0x354
 2261 04fb 6B000000 		.4byte	0x6b
 2262 04ff 00000000 		.4byte	.LFB47
 2263 0503 0C000000 		.4byte	.LFE47-.LFB47
 2264 0507 01       		.uleb128 0x1
 2265 0508 9C       		.byte	0x9c
 2266 0509 1E050000 		.4byte	0x51e
 2267 050d 19       		.uleb128 0x19
 2268 050e 0E030000 		.4byte	.LASF52
 2269 0512 01       		.byte	0x1
 2270 0513 5403     		.2byte	0x354
 2271 0515 83000000 		.4byte	0x83
 2272 0519 6B010000 		.4byte	.LLST12
 2273 051d 00       		.byte	0
 2274 051e 18       		.uleb128 0x18
 2275 051f EB050000 		.4byte	.LASF64
 2276 0523 01       		.byte	0x1
 2277 0524 7003     		.2byte	0x370
 2278 0526 6B000000 		.4byte	0x6b
 2279 052a 00000000 		.4byte	.LFB48
 2280 052e 0C000000 		.4byte	.LFE48-.LFB48
 2281 0532 01       		.uleb128 0x1
 2282 0533 9C       		.byte	0x9c
 2283 0534 49050000 		.4byte	0x549
 2284 0538 19       		.uleb128 0x19
 2285 0539 0E030000 		.4byte	.LASF52
 2286 053d 01       		.byte	0x1
 2287 053e 7003     		.2byte	0x370
 2288 0540 83000000 		.4byte	0x83
 2289 0544 8C010000 		.4byte	.LLST13
 2290 0548 00       		.byte	0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 92


 2291 0549 15       		.uleb128 0x15
 2292 054a 62030000 		.4byte	.LASF65
 2293 054e 01       		.byte	0x1
 2294 054f 9103     		.2byte	0x391
 2295 0551 00000000 		.4byte	.LFB49
 2296 0555 0C000000 		.4byte	.LFE49-.LFB49
 2297 0559 01       		.uleb128 0x1
 2298 055a 9C       		.byte	0x9c
 2299 055b 7C050000 		.4byte	0x57c
 2300 055f 1A       		.uleb128 0x1a
 2301 0560 0E030000 		.4byte	.LASF52
 2302 0564 01       		.byte	0x1
 2303 0565 9103     		.2byte	0x391
 2304 0567 83000000 		.4byte	0x83
 2305 056b 01       		.uleb128 0x1
 2306 056c 50       		.byte	0x50
 2307 056d 1A       		.uleb128 0x1a
 2308 056e F9030000 		.4byte	.LASF60
 2309 0572 01       		.byte	0x1
 2310 0573 9103     		.2byte	0x391
 2311 0575 6B000000 		.4byte	0x6b
 2312 0579 01       		.uleb128 0x1
 2313 057a 51       		.byte	0x51
 2314 057b 00       		.byte	0
 2315 057c 15       		.uleb128 0x15
 2316 057d 4B020000 		.4byte	.LASF66
 2317 0581 01       		.byte	0x1
 2318 0582 AD03     		.2byte	0x3ad
 2319 0584 00000000 		.4byte	.LFB50
 2320 0588 0C000000 		.4byte	.LFE50-.LFB50
 2321 058c 01       		.uleb128 0x1
 2322 058d 9C       		.byte	0x9c
 2323 058e AF050000 		.4byte	0x5af
 2324 0592 1A       		.uleb128 0x1a
 2325 0593 0E030000 		.4byte	.LASF52
 2326 0597 01       		.byte	0x1
 2327 0598 AD03     		.2byte	0x3ad
 2328 059a 83000000 		.4byte	0x83
 2329 059e 01       		.uleb128 0x1
 2330 059f 50       		.byte	0x50
 2331 05a0 1A       		.uleb128 0x1a
 2332 05a1 F9030000 		.4byte	.LASF60
 2333 05a5 01       		.byte	0x1
 2334 05a6 AD03     		.2byte	0x3ad
 2335 05a8 6B000000 		.4byte	0x6b
 2336 05ac 01       		.uleb128 0x1
 2337 05ad 51       		.byte	0x51
 2338 05ae 00       		.byte	0
 2339 05af 15       		.uleb128 0x15
 2340 05b0 70070000 		.4byte	.LASF67
 2341 05b4 01       		.byte	0x1
 2342 05b5 C903     		.2byte	0x3c9
 2343 05b7 00000000 		.4byte	.LFB51
 2344 05bb 0C000000 		.4byte	.LFE51-.LFB51
 2345 05bf 01       		.uleb128 0x1
 2346 05c0 9C       		.byte	0x9c
 2347 05c1 E2050000 		.4byte	0x5e2
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 93


 2348 05c5 1A       		.uleb128 0x1a
 2349 05c6 0E030000 		.4byte	.LASF52
 2350 05ca 01       		.byte	0x1
 2351 05cb C903     		.2byte	0x3c9
 2352 05cd 83000000 		.4byte	0x83
 2353 05d1 01       		.uleb128 0x1
 2354 05d2 50       		.byte	0x50
 2355 05d3 1A       		.uleb128 0x1a
 2356 05d4 F9030000 		.4byte	.LASF60
 2357 05d8 01       		.byte	0x1
 2358 05d9 C903     		.2byte	0x3c9
 2359 05db 6B000000 		.4byte	0x6b
 2360 05df 01       		.uleb128 0x1
 2361 05e0 51       		.byte	0x51
 2362 05e1 00       		.byte	0
 2363 05e2 15       		.uleb128 0x15
 2364 05e3 46070000 		.4byte	.LASF68
 2365 05e7 01       		.byte	0x1
 2366 05e8 E603     		.2byte	0x3e6
 2367 05ea 00000000 		.4byte	.LFB52
 2368 05ee 0C000000 		.4byte	.LFE52-.LFB52
 2369 05f2 01       		.uleb128 0x1
 2370 05f3 9C       		.byte	0x9c
 2371 05f4 15060000 		.4byte	0x615
 2372 05f8 1A       		.uleb128 0x1a
 2373 05f9 0E030000 		.4byte	.LASF52
 2374 05fd 01       		.byte	0x1
 2375 05fe E603     		.2byte	0x3e6
 2376 0600 83000000 		.4byte	0x83
 2377 0604 01       		.uleb128 0x1
 2378 0605 50       		.byte	0x50
 2379 0606 1A       		.uleb128 0x1a
 2380 0607 F9030000 		.4byte	.LASF60
 2381 060b 01       		.byte	0x1
 2382 060c E603     		.2byte	0x3e6
 2383 060e 6B000000 		.4byte	0x6b
 2384 0612 01       		.uleb128 0x1
 2385 0613 51       		.byte	0x51
 2386 0614 00       		.byte	0
 2387 0615 15       		.uleb128 0x15
 2388 0616 BE080000 		.4byte	.LASF69
 2389 061a 01       		.byte	0x1
 2390 061b 0204     		.2byte	0x402
 2391 061d 00000000 		.4byte	.LFB53
 2392 0621 0C000000 		.4byte	.LFE53-.LFB53
 2393 0625 01       		.uleb128 0x1
 2394 0626 9C       		.byte	0x9c
 2395 0627 48060000 		.4byte	0x648
 2396 062b 1A       		.uleb128 0x1a
 2397 062c 0E030000 		.4byte	.LASF52
 2398 0630 01       		.byte	0x1
 2399 0631 0204     		.2byte	0x402
 2400 0633 83000000 		.4byte	0x83
 2401 0637 01       		.uleb128 0x1
 2402 0638 50       		.byte	0x50
 2403 0639 1A       		.uleb128 0x1a
 2404 063a F9030000 		.4byte	.LASF60
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 94


 2405 063e 01       		.byte	0x1
 2406 063f 0204     		.2byte	0x402
 2407 0641 6B000000 		.4byte	0x6b
 2408 0645 01       		.uleb128 0x1
 2409 0646 51       		.byte	0x51
 2410 0647 00       		.byte	0
 2411 0648 15       		.uleb128 0x15
 2412 0649 5D090000 		.4byte	.LASF70
 2413 064d 01       		.byte	0x1
 2414 064e 1E04     		.2byte	0x41e
 2415 0650 00000000 		.4byte	.LFB54
 2416 0654 0C000000 		.4byte	.LFE54-.LFB54
 2417 0658 01       		.uleb128 0x1
 2418 0659 9C       		.byte	0x9c
 2419 065a 7D060000 		.4byte	0x67d
 2420 065e 19       		.uleb128 0x19
 2421 065f B9050000 		.4byte	.LASF50
 2422 0663 01       		.byte	0x1
 2423 0664 1E04     		.2byte	0x41e
 2424 0666 83000000 		.4byte	0x83
 2425 066a AD010000 		.4byte	.LLST14
 2426 066e 1A       		.uleb128 0x1a
 2427 066f F9030000 		.4byte	.LASF60
 2428 0673 01       		.byte	0x1
 2429 0674 1E04     		.2byte	0x41e
 2430 0676 6B000000 		.4byte	0x6b
 2431 067a 01       		.uleb128 0x1
 2432 067b 51       		.byte	0x51
 2433 067c 00       		.byte	0
 2434 067d 18       		.uleb128 0x18
 2435 067e B2060000 		.4byte	.LASF71
 2436 0682 01       		.byte	0x1
 2437 0683 4C04     		.2byte	0x44c
 2438 0685 83000000 		.4byte	0x83
 2439 0689 00000000 		.4byte	.LFB55
 2440 068d A8000000 		.4byte	.LFE55-.LFB55
 2441 0691 01       		.uleb128 0x1
 2442 0692 9C       		.byte	0x9c
 2443 0693 67070000 		.4byte	0x767
 2444 0697 19       		.uleb128 0x19
 2445 0698 B9050000 		.4byte	.LASF50
 2446 069c 01       		.byte	0x1
 2447 069d 4C04     		.2byte	0x44c
 2448 069f 83000000 		.4byte	0x83
 2449 06a3 CE010000 		.4byte	.LLST15
 2450 06a7 1B       		.uleb128 0x1b
 2451 06a8 0E030000 		.4byte	.LASF52
 2452 06ac 01       		.byte	0x1
 2453 06ad 4E04     		.2byte	0x44e
 2454 06af 6B000000 		.4byte	0x6b
 2455 06b3 17       		.uleb128 0x17
 2456 06b4 9E060000 		.4byte	.LASF72
 2457 06b8 01       		.byte	0x1
 2458 06b9 4F04     		.2byte	0x44f
 2459 06bb 6B000000 		.4byte	0x6b
 2460 06bf 05020000 		.4byte	.LLST16
 2461 06c3 1B       		.uleb128 0x1b
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 95


 2462 06c4 16090000 		.4byte	.LASF73
 2463 06c8 01       		.byte	0x1
 2464 06c9 5004     		.2byte	0x450
 2465 06cb 6B000000 		.4byte	0x6b
 2466 06cf 17       		.uleb128 0x17
 2467 06d0 D3080000 		.4byte	.LASF74
 2468 06d4 01       		.byte	0x1
 2469 06d5 5204     		.2byte	0x452
 2470 06d7 6B000000 		.4byte	0x6b
 2471 06db 18020000 		.4byte	.LLST17
 2472 06df 17       		.uleb128 0x17
 2473 06e0 F0040000 		.4byte	.LASF75
 2474 06e4 01       		.byte	0x1
 2475 06e5 5304     		.2byte	0x453
 2476 06e7 6B000000 		.4byte	0x6b
 2477 06eb 2B020000 		.4byte	.LLST18
 2478 06ef 10       		.uleb128 0x10
 2479 06f0 24000000 		.4byte	.LVL50
 2480 06f4 C60D0000 		.4byte	0xdc6
 2481 06f8 0C070000 		.4byte	0x70c
 2482 06fc 11       		.uleb128 0x11
 2483 06fd 01       		.uleb128 0x1
 2484 06fe 50       		.byte	0x50
 2485 06ff 05       		.uleb128 0x5
 2486 0700 03       		.byte	0x3
 2487 0701 10000000 		.4byte	.LANCHOR0+16
 2488 0705 11       		.uleb128 0x11
 2489 0706 01       		.uleb128 0x1
 2490 0707 51       		.byte	0x51
 2491 0708 02       		.uleb128 0x2
 2492 0709 74       		.byte	0x74
 2493 070a 00       		.sleb128 0
 2494 070b 00       		.byte	0
 2495 070c 10       		.uleb128 0x10
 2496 070d 42000000 		.4byte	.LVL52
 2497 0711 D10D0000 		.4byte	0xdd1
 2498 0715 2B070000 		.4byte	0x72b
 2499 0719 11       		.uleb128 0x11
 2500 071a 01       		.uleb128 0x1
 2501 071b 50       		.byte	0x50
 2502 071c 02       		.uleb128 0x2
 2503 071d 76       		.byte	0x76
 2504 071e 10       		.sleb128 16
 2505 071f 11       		.uleb128 0x11
 2506 0720 01       		.uleb128 0x1
 2507 0721 51       		.byte	0x51
 2508 0722 02       		.uleb128 0x2
 2509 0723 74       		.byte	0x74
 2510 0724 00       		.sleb128 0
 2511 0725 11       		.uleb128 0x11
 2512 0726 01       		.uleb128 0x1
 2513 0727 52       		.byte	0x52
 2514 0728 01       		.uleb128 0x1
 2515 0729 30       		.byte	0x30
 2516 072a 00       		.byte	0
 2517 072b 10       		.uleb128 0x10
 2518 072c 72000000 		.4byte	.LVL55
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 96


 2519 0730 D10D0000 		.4byte	0xdd1
 2520 0734 4D070000 		.4byte	0x74d
 2521 0738 11       		.uleb128 0x11
 2522 0739 01       		.uleb128 0x1
 2523 073a 50       		.byte	0x50
 2524 073b 05       		.uleb128 0x5
 2525 073c 03       		.byte	0x3
 2526 073d 10000000 		.4byte	.LANCHOR0+16
 2527 0741 11       		.uleb128 0x11
 2528 0742 01       		.uleb128 0x1
 2529 0743 51       		.byte	0x51
 2530 0744 02       		.uleb128 0x2
 2531 0745 74       		.byte	0x74
 2532 0746 00       		.sleb128 0
 2533 0747 11       		.uleb128 0x11
 2534 0748 01       		.uleb128 0x1
 2535 0749 52       		.byte	0x52
 2536 074a 01       		.uleb128 0x1
 2537 074b 31       		.byte	0x31
 2538 074c 00       		.byte	0
 2539 074d 13       		.uleb128 0x13
 2540 074e 86000000 		.4byte	.LVL56
 2541 0752 C60D0000 		.4byte	0xdc6
 2542 0756 11       		.uleb128 0x11
 2543 0757 01       		.uleb128 0x1
 2544 0758 50       		.byte	0x50
 2545 0759 05       		.uleb128 0x5
 2546 075a 03       		.byte	0x3
 2547 075b 10000000 		.4byte	.LANCHOR0+16
 2548 075f 11       		.uleb128 0x11
 2549 0760 01       		.uleb128 0x1
 2550 0761 51       		.byte	0x51
 2551 0762 02       		.uleb128 0x2
 2552 0763 74       		.byte	0x74
 2553 0764 00       		.sleb128 0
 2554 0765 00       		.byte	0
 2555 0766 00       		.byte	0
 2556 0767 18       		.uleb128 0x18
 2557 0768 650A0000 		.4byte	.LASF76
 2558 076c 01       		.byte	0x1
 2559 076d 9E04     		.2byte	0x49e
 2560 076f 83000000 		.4byte	0x83
 2561 0773 00000000 		.4byte	.LFB56
 2562 0777 28000000 		.4byte	.LFE56-.LFB56
 2563 077b 01       		.uleb128 0x1
 2564 077c 9C       		.byte	0x9c
 2565 077d D2070000 		.4byte	0x7d2
 2566 0781 19       		.uleb128 0x19
 2567 0782 0E030000 		.4byte	.LASF52
 2568 0786 01       		.byte	0x1
 2569 0787 9E04     		.2byte	0x49e
 2570 0789 83000000 		.4byte	0x83
 2571 078d 49020000 		.4byte	.LLST19
 2572 0791 17       		.uleb128 0x17
 2573 0792 38060000 		.4byte	.LASF77
 2574 0796 01       		.byte	0x1
 2575 0797 A004     		.2byte	0x4a0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 97


 2576 0799 83000000 		.4byte	0x83
 2577 079d 6A020000 		.4byte	.LLST20
 2578 07a1 17       		.uleb128 0x17
 2579 07a2 0B010000 		.4byte	.LASF78
 2580 07a6 01       		.byte	0x1
 2581 07a7 A104     		.2byte	0x4a1
 2582 07a9 83000000 		.4byte	0x83
 2583 07ad 7D020000 		.4byte	.LLST21
 2584 07b1 17       		.uleb128 0x17
 2585 07b2 DA090000 		.4byte	.LASF79
 2586 07b6 01       		.byte	0x1
 2587 07b7 A204     		.2byte	0x4a2
 2588 07b9 83000000 		.4byte	0x83
 2589 07bd B8020000 		.4byte	.LLST22
 2590 07c1 13       		.uleb128 0x13
 2591 07c2 14000000 		.4byte	.LVL65
 2592 07c6 7D060000 		.4byte	0x67d
 2593 07ca 11       		.uleb128 0x11
 2594 07cb 01       		.uleb128 0x1
 2595 07cc 50       		.byte	0x50
 2596 07cd 02       		.uleb128 0x2
 2597 07ce 74       		.byte	0x74
 2598 07cf 00       		.sleb128 0
 2599 07d0 00       		.byte	0
 2600 07d1 00       		.byte	0
 2601 07d2 18       		.uleb128 0x18
 2602 07d3 30050000 		.4byte	.LASF80
 2603 07d7 01       		.byte	0x1
 2604 07d8 CC04     		.2byte	0x4cc
 2605 07da 83000000 		.4byte	0x83
 2606 07de 00000000 		.4byte	.LFB57
 2607 07e2 1E000000 		.4byte	.LFE57-.LFB57
 2608 07e6 01       		.uleb128 0x1
 2609 07e7 9C       		.byte	0x9c
 2610 07e8 1B080000 		.4byte	0x81b
 2611 07ec 16       		.uleb128 0x16
 2612 07ed 6900     		.ascii	"i\000"
 2613 07ef 01       		.byte	0x1
 2614 07f0 CF04     		.2byte	0x4cf
 2615 07f2 83000000 		.4byte	0x83
 2616 07f6 E2020000 		.4byte	.LLST23
 2617 07fa 17       		.uleb128 0x17
 2618 07fb DA090000 		.4byte	.LASF79
 2619 07ff 01       		.byte	0x1
 2620 0800 D004     		.2byte	0x4d0
 2621 0802 83000000 		.4byte	0x83
 2622 0806 01030000 		.4byte	.LLST24
 2623 080a 13       		.uleb128 0x13
 2624 080b 0E000000 		.4byte	.LVL73
 2625 080f 67070000 		.4byte	0x767
 2626 0813 11       		.uleb128 0x11
 2627 0814 01       		.uleb128 0x1
 2628 0815 50       		.byte	0x50
 2629 0816 02       		.uleb128 0x2
 2630 0817 74       		.byte	0x74
 2631 0818 00       		.sleb128 0
 2632 0819 00       		.byte	0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 98


 2633 081a 00       		.byte	0
 2634 081b 15       		.uleb128 0x15
 2635 081c D0050000 		.4byte	.LASF81
 2636 0820 01       		.byte	0x1
 2637 0821 FB04     		.2byte	0x4fb
 2638 0823 00000000 		.4byte	.LFB58
 2639 0827 2C000000 		.4byte	.LFE58-.LFB58
 2640 082b 01       		.uleb128 0x1
 2641 082c 9C       		.byte	0x9c
 2642 082d 77080000 		.4byte	0x877
 2643 0831 19       		.uleb128 0x19
 2644 0832 0E030000 		.4byte	.LASF52
 2645 0836 01       		.byte	0x1
 2646 0837 FB04     		.2byte	0x4fb
 2647 0839 83000000 		.4byte	0x83
 2648 083d 2B030000 		.4byte	.LLST25
 2649 0841 17       		.uleb128 0x17
 2650 0842 38060000 		.4byte	.LASF77
 2651 0846 01       		.byte	0x1
 2652 0847 FE04     		.2byte	0x4fe
 2653 0849 6B000000 		.4byte	0x6b
 2654 084d 4C030000 		.4byte	.LLST26
 2655 0851 17       		.uleb128 0x17
 2656 0852 0B010000 		.4byte	.LASF78
 2657 0856 01       		.byte	0x1
 2658 0857 FF04     		.2byte	0x4ff
 2659 0859 6B000000 		.4byte	0x6b
 2660 085d 6A030000 		.4byte	.LLST27
 2661 0861 13       		.uleb128 0x13
 2662 0862 18000000 		.4byte	.LVL82
 2663 0866 D10D0000 		.4byte	0xdd1
 2664 086a 11       		.uleb128 0x11
 2665 086b 01       		.uleb128 0x1
 2666 086c 51       		.byte	0x51
 2667 086d 02       		.uleb128 0x2
 2668 086e 74       		.byte	0x74
 2669 086f 00       		.sleb128 0
 2670 0870 11       		.uleb128 0x11
 2671 0871 01       		.uleb128 0x1
 2672 0872 52       		.byte	0x52
 2673 0873 01       		.uleb128 0x1
 2674 0874 31       		.byte	0x31
 2675 0875 00       		.byte	0
 2676 0876 00       		.byte	0
 2677 0877 15       		.uleb128 0x15
 2678 0878 B4000000 		.4byte	.LASF82
 2679 087c 01       		.byte	0x1
 2680 087d 2605     		.2byte	0x526
 2681 087f 00000000 		.4byte	.LFB59
 2682 0883 2C000000 		.4byte	.LFE59-.LFB59
 2683 0887 01       		.uleb128 0x1
 2684 0888 9C       		.byte	0x9c
 2685 0889 D3080000 		.4byte	0x8d3
 2686 088d 19       		.uleb128 0x19
 2687 088e 0E030000 		.4byte	.LASF52
 2688 0892 01       		.byte	0x1
 2689 0893 2605     		.2byte	0x526
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 99


 2690 0895 83000000 		.4byte	0x83
 2691 0899 A5030000 		.4byte	.LLST28
 2692 089d 17       		.uleb128 0x17
 2693 089e 38060000 		.4byte	.LASF77
 2694 08a2 01       		.byte	0x1
 2695 08a3 2805     		.2byte	0x528
 2696 08a5 6B000000 		.4byte	0x6b
 2697 08a9 C6030000 		.4byte	.LLST29
 2698 08ad 17       		.uleb128 0x17
 2699 08ae 0B010000 		.4byte	.LASF78
 2700 08b2 01       		.byte	0x1
 2701 08b3 2905     		.2byte	0x529
 2702 08b5 6B000000 		.4byte	0x6b
 2703 08b9 E4030000 		.4byte	.LLST30
 2704 08bd 13       		.uleb128 0x13
 2705 08be 18000000 		.4byte	.LVL91
 2706 08c2 D10D0000 		.4byte	0xdd1
 2707 08c6 11       		.uleb128 0x11
 2708 08c7 01       		.uleb128 0x1
 2709 08c8 51       		.byte	0x51
 2710 08c9 02       		.uleb128 0x2
 2711 08ca 74       		.byte	0x74
 2712 08cb 00       		.sleb128 0
 2713 08cc 11       		.uleb128 0x11
 2714 08cd 01       		.uleb128 0x1
 2715 08ce 52       		.byte	0x52
 2716 08cf 01       		.uleb128 0x1
 2717 08d0 30       		.byte	0x30
 2718 08d1 00       		.byte	0
 2719 08d2 00       		.byte	0
 2720 08d3 18       		.uleb128 0x18
 2721 08d4 320A0000 		.4byte	.LASF83
 2722 08d8 01       		.byte	0x1
 2723 08d9 4209     		.2byte	0x942
 2724 08db 77000000 		.4byte	0x77
 2725 08df 00000000 		.4byte	.LFB60
 2726 08e3 1C000000 		.4byte	.LFE60-.LFB60
 2727 08e7 01       		.uleb128 0x1
 2728 08e8 9C       		.byte	0x9c
 2729 08e9 25090000 		.4byte	0x925
 2730 08ed 1C       		.uleb128 0x1c
 2731 08ee 783100   		.ascii	"x1\000"
 2732 08f1 01       		.byte	0x1
 2733 08f2 4209     		.2byte	0x942
 2734 08f4 77000000 		.4byte	0x77
 2735 08f8 1F040000 		.4byte	.LLST31
 2736 08fc 1C       		.uleb128 0x1c
 2737 08fd 783200   		.ascii	"x2\000"
 2738 0900 01       		.byte	0x1
 2739 0901 4209     		.2byte	0x942
 2740 0903 77000000 		.4byte	0x77
 2741 0907 4B040000 		.4byte	.LLST32
 2742 090b 1D       		.uleb128 0x1d
 2743 090c 783300   		.ascii	"x3\000"
 2744 090f 01       		.byte	0x1
 2745 0910 4209     		.2byte	0x942
 2746 0912 77000000 		.4byte	0x77
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 100


 2747 0916 01       		.uleb128 0x1
 2748 0917 52       		.byte	0x52
 2749 0918 1E       		.uleb128 0x1e
 2750 0919 746D7000 		.ascii	"tmp\000"
 2751 091d 01       		.byte	0x1
 2752 091e 4409     		.2byte	0x944
 2753 0920 77000000 		.4byte	0x77
 2754 0924 00       		.byte	0
 2755 0925 18       		.uleb128 0x18
 2756 0926 1B000000 		.4byte	.LASF84
 2757 092a 01       		.byte	0x1
 2758 092b BA09     		.2byte	0x9ba
 2759 092d 77000000 		.4byte	0x77
 2760 0931 00000000 		.4byte	.LFB61
 2761 0935 0C000000 		.4byte	.LFE61-.LFB61
 2762 0939 01       		.uleb128 0x1
 2763 093a 9C       		.byte	0x9c
 2764 093b 6E090000 		.4byte	0x96e
 2765 093f 1C       		.uleb128 0x1c
 2766 0940 783100   		.ascii	"x1\000"
 2767 0943 01       		.byte	0x1
 2768 0944 BA09     		.2byte	0x9ba
 2769 0946 77000000 		.4byte	0x77
 2770 094a 69040000 		.4byte	.LLST33
 2771 094e 1C       		.uleb128 0x1c
 2772 094f 783200   		.ascii	"x2\000"
 2773 0952 01       		.byte	0x1
 2774 0953 BA09     		.2byte	0x9ba
 2775 0955 77000000 		.4byte	0x77
 2776 0959 8A040000 		.4byte	.LLST34
 2777 095d 16       		.uleb128 0x16
 2778 095e 746D7000 		.ascii	"tmp\000"
 2779 0962 01       		.byte	0x1
 2780 0963 BC09     		.2byte	0x9bc
 2781 0965 83000000 		.4byte	0x83
 2782 0969 AB040000 		.4byte	.LLST35
 2783 096d 00       		.byte	0
 2784 096e 15       		.uleb128 0x15
 2785 096f 72000000 		.4byte	.LASF85
 2786 0973 01       		.byte	0x1
 2787 0974 5D01     		.2byte	0x15d
 2788 0976 00000000 		.4byte	.LFB37
 2789 097a 20010000 		.4byte	.LFE37-.LFB37
 2790 097e 01       		.uleb128 0x1
 2791 097f 9C       		.byte	0x9c
 2792 0980 280A0000 		.4byte	0xa28
 2793 0984 19       		.uleb128 0x19
 2794 0985 B9050000 		.4byte	.LASF50
 2795 0989 01       		.byte	0x1
 2796 098a 5D01     		.2byte	0x15d
 2797 098c 83000000 		.4byte	0x83
 2798 0990 BE040000 		.4byte	.LLST36
 2799 0994 17       		.uleb128 0x17
 2800 0995 DA040000 		.4byte	.LASF86
 2801 0999 01       		.byte	0x1
 2802 099a 5F01     		.2byte	0x15f
 2803 099c 83000000 		.4byte	0x83
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 101


 2804 09a0 1C050000 		.4byte	.LLST37
 2805 09a4 17       		.uleb128 0x17
 2806 09a5 C4040000 		.4byte	.LASF87
 2807 09a9 01       		.byte	0x1
 2808 09aa 6001     		.2byte	0x160
 2809 09ac 83000000 		.4byte	0x83
 2810 09b0 50050000 		.4byte	.LLST38
 2811 09b4 17       		.uleb128 0x17
 2812 09b5 480A0000 		.4byte	.LASF88
 2813 09b9 01       		.byte	0x1
 2814 09ba 6101     		.2byte	0x161
 2815 09bc 77000000 		.4byte	0x77
 2816 09c0 A7050000 		.4byte	.LLST39
 2817 09c4 17       		.uleb128 0x17
 2818 09c5 0F050000 		.4byte	.LASF89
 2819 09c9 01       		.byte	0x1
 2820 09ca 6201     		.2byte	0x162
 2821 09cc 77000000 		.4byte	0x77
 2822 09d0 C5050000 		.4byte	.LLST40
 2823 09d4 1B       		.uleb128 0x1b
 2824 09d5 0E030000 		.4byte	.LASF52
 2825 09d9 01       		.byte	0x1
 2826 09da 6301     		.2byte	0x163
 2827 09dc 6B000000 		.4byte	0x6b
 2828 09e0 1F       		.uleb128 0x1f
 2829 09e1 9D080000 		.4byte	.LASF90
 2830 09e5 01       		.byte	0x1
 2831 09e6 6401     		.2byte	0x164
 2832 09e8 6B000000 		.4byte	0x6b
 2833 09ec 02       		.uleb128 0x2
 2834 09ed 91       		.byte	0x91
 2835 09ee 64       		.sleb128 -28
 2836 09ef 10       		.uleb128 0x10
 2837 09f0 2E000000 		.4byte	.LVL111
 2838 09f4 25090000 		.4byte	0x925
 2839 09f8 030A0000 		.4byte	0xa03
 2840 09fc 11       		.uleb128 0x11
 2841 09fd 01       		.uleb128 0x1
 2842 09fe 50       		.byte	0x50
 2843 09ff 02       		.uleb128 0x2
 2844 0a00 77       		.byte	0x77
 2845 0a01 00       		.sleb128 0
 2846 0a02 00       		.byte	0
 2847 0a03 10       		.uleb128 0x10
 2848 0a04 3E000000 		.4byte	.LVL114
 2849 0a08 DC0D0000 		.4byte	0xddc
 2850 0a0c 170A0000 		.4byte	0xa17
 2851 0a10 11       		.uleb128 0x11
 2852 0a11 01       		.uleb128 0x1
 2853 0a12 51       		.byte	0x51
 2854 0a13 02       		.uleb128 0x2
 2855 0a14 74       		.byte	0x74
 2856 0a15 00       		.sleb128 0
 2857 0a16 00       		.byte	0
 2858 0a17 13       		.uleb128 0x13
 2859 0a18 82000000 		.4byte	.LVL119
 2860 0a1c B9020000 		.4byte	0x2b9
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 102


 2861 0a20 11       		.uleb128 0x11
 2862 0a21 01       		.uleb128 0x1
 2863 0a22 50       		.byte	0x50
 2864 0a23 02       		.uleb128 0x2
 2865 0a24 74       		.byte	0x74
 2866 0a25 00       		.sleb128 0
 2867 0a26 00       		.byte	0
 2868 0a27 00       		.byte	0
 2869 0a28 15       		.uleb128 0x15
 2870 0a29 D9060000 		.4byte	.LASF91
 2871 0a2d 01       		.byte	0x1
 2872 0a2e 1D02     		.2byte	0x21d
 2873 0a30 00000000 		.4byte	.LFB38
 2874 0a34 10000000 		.4byte	.LFE38-.LFB38
 2875 0a38 01       		.uleb128 0x1
 2876 0a39 9C       		.byte	0x9c
 2877 0a3a 730A0000 		.4byte	0xa73
 2878 0a3e 19       		.uleb128 0x19
 2879 0a3f B9050000 		.4byte	.LASF50
 2880 0a43 01       		.byte	0x1
 2881 0a44 1D02     		.2byte	0x21d
 2882 0a46 83000000 		.4byte	0x83
 2883 0a4a EE050000 		.4byte	.LLST41
 2884 0a4e 10       		.uleb128 0x10
 2885 0a4f 08000000 		.4byte	.LVL137
 2886 0a53 E70D0000 		.4byte	0xde7
 2887 0a57 620A0000 		.4byte	0xa62
 2888 0a5b 11       		.uleb128 0x11
 2889 0a5c 01       		.uleb128 0x1
 2890 0a5d 50       		.byte	0x50
 2891 0a5e 02       		.uleb128 0x2
 2892 0a5f 74       		.byte	0x74
 2893 0a60 00       		.sleb128 0
 2894 0a61 00       		.byte	0
 2895 0a62 13       		.uleb128 0x13
 2896 0a63 0E000000 		.4byte	.LVL138
 2897 0a67 6E090000 		.4byte	0x96e
 2898 0a6b 11       		.uleb128 0x11
 2899 0a6c 01       		.uleb128 0x1
 2900 0a6d 50       		.byte	0x50
 2901 0a6e 02       		.uleb128 0x2
 2902 0a6f 74       		.byte	0x74
 2903 0a70 00       		.sleb128 0
 2904 0a71 00       		.byte	0
 2905 0a72 00       		.byte	0
 2906 0a73 15       		.uleb128 0x15
 2907 0a74 CB000000 		.4byte	.LASF92
 2908 0a78 01       		.byte	0x1
 2909 0a79 5302     		.2byte	0x253
 2910 0a7b 00000000 		.4byte	.LFB39
 2911 0a7f 24000000 		.4byte	.LFE39-.LFB39
 2912 0a83 01       		.uleb128 0x1
 2913 0a84 9C       		.byte	0x9c
 2914 0a85 CC0A0000 		.4byte	0xacc
 2915 0a89 16       		.uleb128 0x16
 2916 0a8a 6900     		.ascii	"i\000"
 2917 0a8c 01       		.byte	0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 103


 2918 0a8d 5502     		.2byte	0x255
 2919 0a8f 83000000 		.4byte	0x83
 2920 0a93 1A060000 		.4byte	.LLST42
 2921 0a97 17       		.uleb128 0x17
 2922 0a98 FB000000 		.4byte	.LASF54
 2923 0a9c 01       		.byte	0x1
 2924 0a9d 5602     		.2byte	0x256
 2925 0a9f 83000000 		.4byte	0x83
 2926 0aa3 39060000 		.4byte	.LLST43
 2927 0aa7 10       		.uleb128 0x10
 2928 0aa8 0E000000 		.4byte	.LVL142
 2929 0aac C60D0000 		.4byte	0xdc6
 2930 0ab0 BB0A0000 		.4byte	0xabb
 2931 0ab4 11       		.uleb128 0x11
 2932 0ab5 01       		.uleb128 0x1
 2933 0ab6 51       		.byte	0x51
 2934 0ab7 02       		.uleb128 0x2
 2935 0ab8 74       		.byte	0x74
 2936 0ab9 00       		.sleb128 0
 2937 0aba 00       		.byte	0
 2938 0abb 13       		.uleb128 0x13
 2939 0abc 18000000 		.4byte	.LVL144
 2940 0ac0 280A0000 		.4byte	0xa28
 2941 0ac4 11       		.uleb128 0x11
 2942 0ac5 01       		.uleb128 0x1
 2943 0ac6 50       		.byte	0x50
 2944 0ac7 02       		.uleb128 0x2
 2945 0ac8 74       		.byte	0x74
 2946 0ac9 00       		.sleb128 0
 2947 0aca 00       		.byte	0
 2948 0acb 00       		.byte	0
 2949 0acc 15       		.uleb128 0x15
 2950 0acd 66020000 		.4byte	.LASF93
 2951 0ad1 01       		.byte	0x1
 2952 0ad2 8002     		.2byte	0x280
 2953 0ad4 00000000 		.4byte	.LFB40
 2954 0ad8 30000000 		.4byte	.LFE40-.LFB40
 2955 0adc 01       		.uleb128 0x1
 2956 0add 9C       		.byte	0x9c
 2957 0ade 650B0000 		.4byte	0xb65
 2958 0ae2 19       		.uleb128 0x19
 2959 0ae3 0E030000 		.4byte	.LASF52
 2960 0ae7 01       		.byte	0x1
 2961 0ae8 8002     		.2byte	0x280
 2962 0aea 83000000 		.4byte	0x83
 2963 0aee 4C060000 		.4byte	.LLST44
 2964 0af2 17       		.uleb128 0x17
 2965 0af3 1F050000 		.4byte	.LASF94
 2966 0af7 01       		.byte	0x1
 2967 0af8 8202     		.2byte	0x282
 2968 0afa 83000000 		.4byte	0x83
 2969 0afe 6D060000 		.4byte	.LLST45
 2970 0b02 17       		.uleb128 0x17
 2971 0b03 F0070000 		.4byte	.LASF95
 2972 0b07 01       		.byte	0x1
 2973 0b08 8302     		.2byte	0x283
 2974 0b0a 83000000 		.4byte	0x83
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 104


 2975 0b0e AB060000 		.4byte	.LLST46
 2976 0b12 17       		.uleb128 0x17
 2977 0b13 B5070000 		.4byte	.LASF96
 2978 0b17 01       		.byte	0x1
 2979 0b18 8402     		.2byte	0x284
 2980 0b1a 83000000 		.4byte	0x83
 2981 0b1e D7060000 		.4byte	.LLST47
 2982 0b22 16       		.uleb128 0x16
 2983 0b23 6900     		.ascii	"i\000"
 2984 0b25 01       		.byte	0x1
 2985 0b26 8502     		.2byte	0x285
 2986 0b28 83000000 		.4byte	0x83
 2987 0b2c 12070000 		.4byte	.LLST48
 2988 0b30 17       		.uleb128 0x17
 2989 0b31 FB000000 		.4byte	.LASF54
 2990 0b35 01       		.byte	0x1
 2991 0b36 8602     		.2byte	0x286
 2992 0b38 83000000 		.4byte	0x83
 2993 0b3c 25070000 		.4byte	.LLST49
 2994 0b40 10       		.uleb128 0x10
 2995 0b41 16000000 		.4byte	.LVL152
 2996 0b45 C60D0000 		.4byte	0xdc6
 2997 0b49 540B0000 		.4byte	0xb54
 2998 0b4d 11       		.uleb128 0x11
 2999 0b4e 01       		.uleb128 0x1
 3000 0b4f 51       		.byte	0x51
 3001 0b50 02       		.uleb128 0x2
 3002 0b51 74       		.byte	0x74
 3003 0b52 00       		.sleb128 0
 3004 0b53 00       		.byte	0
 3005 0b54 13       		.uleb128 0x13
 3006 0b55 20000000 		.4byte	.LVL154
 3007 0b59 280A0000 		.4byte	0xa28
 3008 0b5d 11       		.uleb128 0x11
 3009 0b5e 01       		.uleb128 0x1
 3010 0b5f 50       		.byte	0x50
 3011 0b60 02       		.uleb128 0x2
 3012 0b61 74       		.byte	0x74
 3013 0b62 00       		.sleb128 0
 3014 0b63 00       		.byte	0
 3015 0b64 00       		.byte	0
 3016 0b65 18       		.uleb128 0x18
 3017 0b66 85060000 		.4byte	.LASF97
 3018 0b6a 01       		.byte	0x1
 3019 0b6b A30A     		.2byte	0xaa3
 3020 0b6d 83000000 		.4byte	0x83
 3021 0b71 00000000 		.4byte	.LFB62
 3022 0b75 0C000000 		.4byte	.LFE62-.LFB62
 3023 0b79 01       		.uleb128 0x1
 3024 0b7a 9C       		.byte	0x9c
 3025 0b7b 900B0000 		.4byte	0xb90
 3026 0b7f 19       		.uleb128 0x19
 3027 0b80 B9050000 		.4byte	.LASF50
 3028 0b84 01       		.byte	0x1
 3029 0b85 A30A     		.2byte	0xaa3
 3030 0b87 83000000 		.4byte	0x83
 3031 0b8b 38070000 		.4byte	.LLST50
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 105


 3032 0b8f 00       		.byte	0
 3033 0b90 18       		.uleb128 0x18
 3034 0b91 29070000 		.4byte	.LASF98
 3035 0b95 01       		.byte	0x1
 3036 0b96 BD0A     		.2byte	0xabd
 3037 0b98 6B000000 		.4byte	0x6b
 3038 0b9c 00000000 		.4byte	.LFB63
 3039 0ba0 0C000000 		.4byte	.LFE63-.LFB63
 3040 0ba4 01       		.uleb128 0x1
 3041 0ba5 9C       		.byte	0x9c
 3042 0ba6 BB0B0000 		.4byte	0xbbb
 3043 0baa 19       		.uleb128 0x19
 3044 0bab B9050000 		.4byte	.LASF50
 3045 0baf 01       		.byte	0x1
 3046 0bb0 BD0A     		.2byte	0xabd
 3047 0bb2 83000000 		.4byte	0x83
 3048 0bb6 59070000 		.4byte	.LLST51
 3049 0bba 00       		.byte	0
 3050 0bbb 18       		.uleb128 0x18
 3051 0bbc 500A0000 		.4byte	.LASF99
 3052 0bc0 01       		.byte	0x1
 3053 0bc1 D70A     		.2byte	0xad7
 3054 0bc3 6B000000 		.4byte	0x6b
 3055 0bc7 00000000 		.4byte	.LFB64
 3056 0bcb 0C000000 		.4byte	.LFE64-.LFB64
 3057 0bcf 01       		.uleb128 0x1
 3058 0bd0 9C       		.byte	0x9c
 3059 0bd1 E60B0000 		.4byte	0xbe6
 3060 0bd5 19       		.uleb128 0x19
 3061 0bd6 0E030000 		.4byte	.LASF52
 3062 0bda 01       		.byte	0x1
 3063 0bdb D70A     		.2byte	0xad7
 3064 0bdd 83000000 		.4byte	0x83
 3065 0be1 7A070000 		.4byte	.LLST52
 3066 0be5 00       		.byte	0
 3067 0be6 20       		.uleb128 0x20
 3068 0be7 1F080000 		.4byte	.LASF100
 3069 0beb 01       		.byte	0x1
 3070 0bec F10A     		.2byte	0xaf1
 3071 0bee 00000000 		.4byte	.LFB65
 3072 0bf2 0C000000 		.4byte	.LFE65-.LFB65
 3073 0bf6 01       		.uleb128 0x1
 3074 0bf7 9C       		.byte	0x9c
 3075 0bf8 20       		.uleb128 0x20
 3076 0bf9 DA030000 		.4byte	.LASF101
 3077 0bfd 01       		.byte	0x1
 3078 0bfe 0A0B     		.2byte	0xb0a
 3079 0c00 00000000 		.4byte	.LFB66
 3080 0c04 0C000000 		.4byte	.LFE66-.LFB66
 3081 0c08 01       		.uleb128 0x1
 3082 0c09 9C       		.byte	0x9c
 3083 0c0a 21       		.uleb128 0x21
 3084 0c0b 6B000000 		.4byte	0x6b
 3085 0c0f 1A0C0000 		.4byte	0xc1a
 3086 0c13 22       		.uleb128 0x22
 3087 0c14 A4000000 		.4byte	0xa4
 3088 0c18 02       		.byte	0x2
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 106


 3089 0c19 00       		.byte	0
 3090 0c1a 23       		.uleb128 0x23
 3091 0c1b 2F000000 		.4byte	.LASF102
 3092 0c1f 01       		.byte	0x1
 3093 0c20 55       		.byte	0x55
 3094 0c21 0A0C0000 		.4byte	0xc0a
 3095 0c25 05       		.uleb128 0x5
 3096 0c26 03       		.byte	0x3
 3097 0c27 0C000000 		.4byte	CapSense_debounceCounter
 3098 0c2b 21       		.uleb128 0x21
 3099 0c2c 77000000 		.4byte	0x77
 3100 0c30 3B0C0000 		.4byte	0xc3b
 3101 0c34 22       		.uleb128 0x22
 3102 0c35 A4000000 		.4byte	0xa4
 3103 0c39 01       		.byte	0x1
 3104 0c3a 00       		.byte	0
 3105 0c3b 24       		.uleb128 0x24
 3106 0c3c 16070000 		.4byte	.LASF103
 3107 0c40 01       		.byte	0x1
 3108 0c41 2C       		.byte	0x2c
 3109 0c42 2B0C0000 		.4byte	0xc2b
 3110 0c46 21       		.uleb128 0x21
 3111 0c47 6B000000 		.4byte	0x6b
 3112 0c4b 560C0000 		.4byte	0xc56
 3113 0c4f 22       		.uleb128 0x22
 3114 0c50 A4000000 		.4byte	0xa4
 3115 0c54 00       		.byte	0
 3116 0c55 00       		.byte	0
 3117 0c56 24       		.uleb128 0x24
 3118 0c57 F4020000 		.4byte	.LASF104
 3119 0c5b 01       		.byte	0x1
 3120 0c5c 2D       		.byte	0x2d
 3121 0c5d 460C0000 		.4byte	0xc46
 3122 0c61 21       		.uleb128 0x21
 3123 0c62 DB010000 		.4byte	0x1db
 3124 0c66 710C0000 		.4byte	0xc71
 3125 0c6a 22       		.uleb128 0x22
 3126 0c6b A4000000 		.4byte	0xa4
 3127 0c6f 01       		.byte	0x1
 3128 0c70 00       		.byte	0
 3129 0c71 24       		.uleb128 0x24
 3130 0c72 4C030000 		.4byte	.LASF105
 3131 0c76 01       		.byte	0x1
 3132 0c77 2E       		.byte	0x2e
 3133 0c78 7C0C0000 		.4byte	0xc7c
 3134 0c7c 08       		.uleb128 0x8
 3135 0c7d 610C0000 		.4byte	0xc61
 3136 0c81 25       		.uleb128 0x25
 3137 0c82 61080000 		.4byte	.LASF106
 3138 0c86 01       		.byte	0x1
 3139 0c87 34       		.byte	0x34
 3140 0c88 2B0C0000 		.4byte	0xc2b
 3141 0c8c 05       		.uleb128 0x5
 3142 0c8d 03       		.byte	0x3
 3143 0c8e 00000000 		.4byte	CapSense_sensorBaseline
 3144 0c92 21       		.uleb128 0x21
 3145 0c93 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 107


 3146 0c97 A20C0000 		.4byte	0xca2
 3147 0c9b 22       		.uleb128 0x22
 3148 0c9c A4000000 		.4byte	0xa4
 3149 0ca0 01       		.byte	0x1
 3150 0ca1 00       		.byte	0
 3151 0ca2 25       		.uleb128 0x25
 3152 0ca3 00000000 		.4byte	.LASF107
 3153 0ca7 01       		.byte	0x1
 3154 0ca8 35       		.byte	0x35
 3155 0ca9 920C0000 		.4byte	0xc92
 3156 0cad 05       		.uleb128 0x5
 3157 0cae 03       		.byte	0x3
 3158 0caf 00000000 		.4byte	CapSense_sensorBaselineLow
 3159 0cb3 25       		.uleb128 0x25
 3160 0cb4 1F020000 		.4byte	.LASF108
 3161 0cb8 01       		.byte	0x1
 3162 0cb9 36       		.byte	0x36
 3163 0cba 920C0000 		.4byte	0xc92
 3164 0cbe 05       		.uleb128 0x5
 3165 0cbf 03       		.byte	0x3
 3166 0cc0 00000000 		.4byte	CapSense_sensorSignal
 3167 0cc4 25       		.uleb128 0x25
 3168 0cc5 A70A0000 		.4byte	.LASF109
 3169 0cc9 01       		.byte	0x1
 3170 0cca 37       		.byte	0x37
 3171 0ccb 460C0000 		.4byte	0xc46
 3172 0ccf 05       		.uleb128 0x5
 3173 0cd0 03       		.byte	0x3
 3174 0cd1 00000000 		.4byte	CapSense_sensorOnMask
 3175 0cd5 25       		.uleb128 0x25
 3176 0cd6 55000000 		.4byte	.LASF110
 3177 0cda 01       		.byte	0x1
 3178 0cdb 39       		.byte	0x39
 3179 0cdc 920C0000 		.4byte	0xc92
 3180 0ce0 05       		.uleb128 0x5
 3181 0ce1 03       		.byte	0x3
 3182 0ce2 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3183 0ce6 25       		.uleb128 0x25
 3184 0ce7 3D080000 		.4byte	.LASF111
 3185 0ceb 01       		.byte	0x1
 3186 0cec 3A       		.byte	0x3a
 3187 0ced 920C0000 		.4byte	0xc92
 3188 0cf1 05       		.uleb128 0x5
 3189 0cf2 03       		.byte	0x3
 3190 0cf3 00000000 		.4byte	CapSense_lowBaselineReset
 3191 0cf7 25       		.uleb128 0x25
 3192 0cf8 15030000 		.4byte	.LASF112
 3193 0cfc 01       		.byte	0x1
 3194 0cfd 49       		.byte	0x49
 3195 0cfe 920C0000 		.4byte	0xc92
 3196 0d02 05       		.uleb128 0x5
 3197 0d03 03       		.byte	0x3
 3198 0d04 00000000 		.4byte	CapSense_fingerThreshold
 3199 0d08 25       		.uleb128 0x25
 3200 0d09 FE080000 		.4byte	.LASF113
 3201 0d0d 01       		.byte	0x1
 3202 0d0e 4B       		.byte	0x4b
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 108


 3203 0d0f 920C0000 		.4byte	0xc92
 3204 0d13 05       		.uleb128 0x5
 3205 0d14 03       		.byte	0x3
 3206 0d15 00000000 		.4byte	CapSense_noiseThreshold
 3207 0d19 25       		.uleb128 0x25
 3208 0d1a 69050000 		.4byte	.LASF114
 3209 0d1e 01       		.byte	0x1
 3210 0d1f 4D       		.byte	0x4d
 3211 0d20 920C0000 		.4byte	0xc92
 3212 0d24 05       		.uleb128 0x5
 3213 0d25 03       		.byte	0x3
 3214 0d26 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3215 0d2a 25       		.uleb128 0x25
 3216 0d2b 84020000 		.4byte	.LASF115
 3217 0d2f 01       		.byte	0x1
 3218 0d30 4F       		.byte	0x4f
 3219 0d31 920C0000 		.4byte	0xc92
 3220 0d35 05       		.uleb128 0x5
 3221 0d36 03       		.byte	0x3
 3222 0d37 00000000 		.4byte	CapSense_hysteresis
 3223 0d3b 25       		.uleb128 0x25
 3224 0d3c FC070000 		.4byte	.LASF116
 3225 0d40 01       		.byte	0x1
 3226 0d41 51       		.byte	0x51
 3227 0d42 920C0000 		.4byte	0xc92
 3228 0d46 05       		.uleb128 0x5
 3229 0d47 03       		.byte	0x3
 3230 0d48 00000000 		.4byte	CapSense_debounce
 3231 0d4c 25       		.uleb128 0x25
 3232 0d4d 35020000 		.4byte	.LASF117
 3233 0d51 01       		.byte	0x1
 3234 0d52 59       		.byte	0x59
 3235 0d53 5D0D0000 		.4byte	0xd5d
 3236 0d57 05       		.uleb128 0x5
 3237 0d58 03       		.byte	0x3
 3238 0d59 00000000 		.4byte	CapSense_rawDataIndex
 3239 0d5d 08       		.uleb128 0x8
 3240 0d5e 610C0000 		.4byte	0xc61
 3241 0d62 25       		.uleb128 0x25
 3242 0d63 50050000 		.4byte	.LASF118
 3243 0d67 01       		.byte	0x1
 3244 0d68 5E       		.byte	0x5e
 3245 0d69 730D0000 		.4byte	0xd73
 3246 0d6d 05       		.uleb128 0x5
 3247 0d6e 03       		.byte	0x3
 3248 0d6f 00000000 		.4byte	CapSense_numberOfSensors
 3249 0d73 08       		.uleb128 0x8
 3250 0d74 610C0000 		.4byte	0xc61
 3251 0d78 25       		.uleb128 0x25
 3252 0d79 8F0A0000 		.4byte	.LASF119
 3253 0d7d 01       		.byte	0x1
 3254 0d7e 27       		.byte	0x27
 3255 0d7f 2B0C0000 		.4byte	0xc2b
 3256 0d83 05       		.uleb128 0x5
 3257 0d84 03       		.byte	0x3
 3258 0d85 00000000 		.4byte	CapSense_rawFilterData1
 3259 0d89 24       		.uleb128 0x24
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 109


 3260 0d8a EB000000 		.4byte	.LASF120
 3261 0d8e 01       		.byte	0x1
 3262 0d8f 41       		.byte	0x41
 3263 0d90 AE020000 		.4byte	0x2ae
 3264 0d94 25       		.uleb128 0x25
 3265 0d95 E0090000 		.4byte	.LASF121
 3266 0d99 01       		.byte	0x1
 3267 0d9a 45       		.byte	0x45
 3268 0d9b 6B000000 		.4byte	0x6b
 3269 0d9f 05       		.uleb128 0x5
 3270 0da0 03       		.byte	0x3
 3271 0da1 00000000 		.4byte	CapSense_enableRawFilters
 3272 0da5 26       		.uleb128 0x26
 3273 0da6 FB040000 		.4byte	.LASF122
 3274 0daa FB040000 		.4byte	.LASF122
 3275 0dae 04       		.byte	0x4
 3276 0daf 9D       		.byte	0x9d
 3277 0db0 26       		.uleb128 0x26
 3278 0db1 BF010000 		.4byte	.LASF123
 3279 0db5 BF010000 		.4byte	.LASF123
 3280 0db9 04       		.byte	0x4
 3281 0dba 9C       		.byte	0x9c
 3282 0dbb 26       		.uleb128 0x26
 3283 0dbc 5B060000 		.4byte	.LASF124
 3284 0dc0 5B060000 		.4byte	.LASF124
 3285 0dc4 04       		.byte	0x4
 3286 0dc5 9F       		.byte	0x9f
 3287 0dc6 26       		.uleb128 0x26
 3288 0dc7 C5090000 		.4byte	.LASF125
 3289 0dcb C5090000 		.4byte	.LASF125
 3290 0dcf 03       		.byte	0x3
 3291 0dd0 6A       		.byte	0x6a
 3292 0dd1 26       		.uleb128 0x26
 3293 0dd2 89090000 		.4byte	.LASF126
 3294 0dd6 89090000 		.4byte	.LASF126
 3295 0dda 03       		.byte	0x3
 3296 0ddb 6B       		.byte	0x6b
 3297 0ddc 26       		.uleb128 0x26
 3298 0ddd 9B050000 		.4byte	.LASF127
 3299 0de1 9B050000 		.4byte	.LASF127
 3300 0de5 03       		.byte	0x3
 3301 0de6 81       		.byte	0x81
 3302 0de7 26       		.uleb128 0x26
 3303 0de8 41060000 		.4byte	.LASF128
 3304 0dec 41060000 		.4byte	.LASF128
 3305 0df0 01       		.byte	0x1
 3306 0df1 17       		.byte	0x17
 3307 0df2 00       		.byte	0
 3308              		.section	.debug_abbrev,"",%progbits
 3309              	.Ldebug_abbrev0:
 3310 0000 01       		.uleb128 0x1
 3311 0001 11       		.uleb128 0x11
 3312 0002 01       		.byte	0x1
 3313 0003 25       		.uleb128 0x25
 3314 0004 0E       		.uleb128 0xe
 3315 0005 13       		.uleb128 0x13
 3316 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 110


 3317 0007 03       		.uleb128 0x3
 3318 0008 0E       		.uleb128 0xe
 3319 0009 1B       		.uleb128 0x1b
 3320 000a 0E       		.uleb128 0xe
 3321 000b 55       		.uleb128 0x55
 3322 000c 17       		.uleb128 0x17
 3323 000d 11       		.uleb128 0x11
 3324 000e 01       		.uleb128 0x1
 3325 000f 10       		.uleb128 0x10
 3326 0010 17       		.uleb128 0x17
 3327 0011 00       		.byte	0
 3328 0012 00       		.byte	0
 3329 0013 02       		.uleb128 0x2
 3330 0014 24       		.uleb128 0x24
 3331 0015 00       		.byte	0
 3332 0016 0B       		.uleb128 0xb
 3333 0017 0B       		.uleb128 0xb
 3334 0018 3E       		.uleb128 0x3e
 3335 0019 0B       		.uleb128 0xb
 3336 001a 03       		.uleb128 0x3
 3337 001b 0E       		.uleb128 0xe
 3338 001c 00       		.byte	0
 3339 001d 00       		.byte	0
 3340 001e 03       		.uleb128 0x3
 3341 001f 24       		.uleb128 0x24
 3342 0020 00       		.byte	0
 3343 0021 0B       		.uleb128 0xb
 3344 0022 0B       		.uleb128 0xb
 3345 0023 3E       		.uleb128 0x3e
 3346 0024 0B       		.uleb128 0xb
 3347 0025 03       		.uleb128 0x3
 3348 0026 08       		.uleb128 0x8
 3349 0027 00       		.byte	0
 3350 0028 00       		.byte	0
 3351 0029 04       		.uleb128 0x4
 3352 002a 16       		.uleb128 0x16
 3353 002b 00       		.byte	0
 3354 002c 03       		.uleb128 0x3
 3355 002d 0E       		.uleb128 0xe
 3356 002e 3A       		.uleb128 0x3a
 3357 002f 0B       		.uleb128 0xb
 3358 0030 3B       		.uleb128 0x3b
 3359 0031 05       		.uleb128 0x5
 3360 0032 49       		.uleb128 0x49
 3361 0033 13       		.uleb128 0x13
 3362 0034 00       		.byte	0
 3363 0035 00       		.byte	0
 3364 0036 05       		.uleb128 0x5
 3365 0037 13       		.uleb128 0x13
 3366 0038 01       		.byte	0x1
 3367 0039 0B       		.uleb128 0xb
 3368 003a 0B       		.uleb128 0xb
 3369 003b 3A       		.uleb128 0x3a
 3370 003c 0B       		.uleb128 0xb
 3371 003d 3B       		.uleb128 0x3b
 3372 003e 0B       		.uleb128 0xb
 3373 003f 01       		.uleb128 0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 111


 3374 0040 13       		.uleb128 0x13
 3375 0041 00       		.byte	0
 3376 0042 00       		.byte	0
 3377 0043 06       		.uleb128 0x6
 3378 0044 0D       		.uleb128 0xd
 3379 0045 00       		.byte	0
 3380 0046 03       		.uleb128 0x3
 3381 0047 0E       		.uleb128 0xe
 3382 0048 3A       		.uleb128 0x3a
 3383 0049 0B       		.uleb128 0xb
 3384 004a 3B       		.uleb128 0x3b
 3385 004b 0B       		.uleb128 0xb
 3386 004c 49       		.uleb128 0x49
 3387 004d 13       		.uleb128 0x13
 3388 004e 38       		.uleb128 0x38
 3389 004f 0B       		.uleb128 0xb
 3390 0050 00       		.byte	0
 3391 0051 00       		.byte	0
 3392 0052 07       		.uleb128 0x7
 3393 0053 0F       		.uleb128 0xf
 3394 0054 00       		.byte	0
 3395 0055 0B       		.uleb128 0xb
 3396 0056 0B       		.uleb128 0xb
 3397 0057 49       		.uleb128 0x49
 3398 0058 13       		.uleb128 0x13
 3399 0059 00       		.byte	0
 3400 005a 00       		.byte	0
 3401 005b 08       		.uleb128 0x8
 3402 005c 26       		.uleb128 0x26
 3403 005d 00       		.byte	0
 3404 005e 49       		.uleb128 0x49
 3405 005f 13       		.uleb128 0x13
 3406 0060 00       		.byte	0
 3407 0061 00       		.byte	0
 3408 0062 09       		.uleb128 0x9
 3409 0063 15       		.uleb128 0x15
 3410 0064 01       		.byte	0x1
 3411 0065 27       		.uleb128 0x27
 3412 0066 19       		.uleb128 0x19
 3413 0067 49       		.uleb128 0x49
 3414 0068 13       		.uleb128 0x13
 3415 0069 01       		.uleb128 0x1
 3416 006a 13       		.uleb128 0x13
 3417 006b 00       		.byte	0
 3418 006c 00       		.byte	0
 3419 006d 0A       		.uleb128 0xa
 3420 006e 05       		.uleb128 0x5
 3421 006f 00       		.byte	0
 3422 0070 49       		.uleb128 0x49
 3423 0071 13       		.uleb128 0x13
 3424 0072 00       		.byte	0
 3425 0073 00       		.byte	0
 3426 0074 0B       		.uleb128 0xb
 3427 0075 15       		.uleb128 0x15
 3428 0076 01       		.byte	0x1
 3429 0077 27       		.uleb128 0x27
 3430 0078 19       		.uleb128 0x19
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 112


 3431 0079 01       		.uleb128 0x1
 3432 007a 13       		.uleb128 0x13
 3433 007b 00       		.byte	0
 3434 007c 00       		.byte	0
 3435 007d 0C       		.uleb128 0xc
 3436 007e 16       		.uleb128 0x16
 3437 007f 00       		.byte	0
 3438 0080 03       		.uleb128 0x3
 3439 0081 0E       		.uleb128 0xe
 3440 0082 3A       		.uleb128 0x3a
 3441 0083 0B       		.uleb128 0xb
 3442 0084 3B       		.uleb128 0x3b
 3443 0085 0B       		.uleb128 0xb
 3444 0086 49       		.uleb128 0x49
 3445 0087 13       		.uleb128 0x13
 3446 0088 00       		.byte	0
 3447 0089 00       		.byte	0
 3448 008a 0D       		.uleb128 0xd
 3449 008b 2E       		.uleb128 0x2e
 3450 008c 01       		.byte	0x1
 3451 008d 3F       		.uleb128 0x3f
 3452 008e 19       		.uleb128 0x19
 3453 008f 03       		.uleb128 0x3
 3454 0090 0E       		.uleb128 0xe
 3455 0091 3A       		.uleb128 0x3a
 3456 0092 0B       		.uleb128 0xb
 3457 0093 3B       		.uleb128 0x3b
 3458 0094 0B       		.uleb128 0xb
 3459 0095 27       		.uleb128 0x27
 3460 0096 19       		.uleb128 0x19
 3461 0097 11       		.uleb128 0x11
 3462 0098 01       		.uleb128 0x1
 3463 0099 12       		.uleb128 0x12
 3464 009a 06       		.uleb128 0x6
 3465 009b 40       		.uleb128 0x40
 3466 009c 18       		.uleb128 0x18
 3467 009d 9742     		.uleb128 0x2117
 3468 009f 19       		.uleb128 0x19
 3469 00a0 01       		.uleb128 0x1
 3470 00a1 13       		.uleb128 0x13
 3471 00a2 00       		.byte	0
 3472 00a3 00       		.byte	0
 3473 00a4 0E       		.uleb128 0xe
 3474 00a5 05       		.uleb128 0x5
 3475 00a6 00       		.byte	0
 3476 00a7 03       		.uleb128 0x3
 3477 00a8 0E       		.uleb128 0xe
 3478 00a9 3A       		.uleb128 0x3a
 3479 00aa 0B       		.uleb128 0xb
 3480 00ab 3B       		.uleb128 0x3b
 3481 00ac 0B       		.uleb128 0xb
 3482 00ad 49       		.uleb128 0x49
 3483 00ae 13       		.uleb128 0x13
 3484 00af 02       		.uleb128 0x2
 3485 00b0 17       		.uleb128 0x17
 3486 00b1 00       		.byte	0
 3487 00b2 00       		.byte	0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 113


 3488 00b3 0F       		.uleb128 0xf
 3489 00b4 34       		.uleb128 0x34
 3490 00b5 00       		.byte	0
 3491 00b6 03       		.uleb128 0x3
 3492 00b7 0E       		.uleb128 0xe
 3493 00b8 3A       		.uleb128 0x3a
 3494 00b9 0B       		.uleb128 0xb
 3495 00ba 3B       		.uleb128 0x3b
 3496 00bb 0B       		.uleb128 0xb
 3497 00bc 49       		.uleb128 0x49
 3498 00bd 13       		.uleb128 0x13
 3499 00be 02       		.uleb128 0x2
 3500 00bf 17       		.uleb128 0x17
 3501 00c0 00       		.byte	0
 3502 00c1 00       		.byte	0
 3503 00c2 10       		.uleb128 0x10
 3504 00c3 898201   		.uleb128 0x4109
 3505 00c6 01       		.byte	0x1
 3506 00c7 11       		.uleb128 0x11
 3507 00c8 01       		.uleb128 0x1
 3508 00c9 31       		.uleb128 0x31
 3509 00ca 13       		.uleb128 0x13
 3510 00cb 01       		.uleb128 0x1
 3511 00cc 13       		.uleb128 0x13
 3512 00cd 00       		.byte	0
 3513 00ce 00       		.byte	0
 3514 00cf 11       		.uleb128 0x11
 3515 00d0 8A8201   		.uleb128 0x410a
 3516 00d3 00       		.byte	0
 3517 00d4 02       		.uleb128 0x2
 3518 00d5 18       		.uleb128 0x18
 3519 00d6 9142     		.uleb128 0x2111
 3520 00d8 18       		.uleb128 0x18
 3521 00d9 00       		.byte	0
 3522 00da 00       		.byte	0
 3523 00db 12       		.uleb128 0x12
 3524 00dc 898201   		.uleb128 0x4109
 3525 00df 00       		.byte	0
 3526 00e0 11       		.uleb128 0x11
 3527 00e1 01       		.uleb128 0x1
 3528 00e2 31       		.uleb128 0x31
 3529 00e3 13       		.uleb128 0x13
 3530 00e4 00       		.byte	0
 3531 00e5 00       		.byte	0
 3532 00e6 13       		.uleb128 0x13
 3533 00e7 898201   		.uleb128 0x4109
 3534 00ea 01       		.byte	0x1
 3535 00eb 11       		.uleb128 0x11
 3536 00ec 01       		.uleb128 0x1
 3537 00ed 31       		.uleb128 0x31
 3538 00ee 13       		.uleb128 0x13
 3539 00ef 00       		.byte	0
 3540 00f0 00       		.byte	0
 3541 00f1 14       		.uleb128 0x14
 3542 00f2 34       		.uleb128 0x34
 3543 00f3 00       		.byte	0
 3544 00f4 03       		.uleb128 0x3
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 114


 3545 00f5 08       		.uleb128 0x8
 3546 00f6 3A       		.uleb128 0x3a
 3547 00f7 0B       		.uleb128 0xb
 3548 00f8 3B       		.uleb128 0x3b
 3549 00f9 0B       		.uleb128 0xb
 3550 00fa 49       		.uleb128 0x49
 3551 00fb 13       		.uleb128 0x13
 3552 00fc 02       		.uleb128 0x2
 3553 00fd 17       		.uleb128 0x17
 3554 00fe 00       		.byte	0
 3555 00ff 00       		.byte	0
 3556 0100 15       		.uleb128 0x15
 3557 0101 2E       		.uleb128 0x2e
 3558 0102 01       		.byte	0x1
 3559 0103 3F       		.uleb128 0x3f
 3560 0104 19       		.uleb128 0x19
 3561 0105 03       		.uleb128 0x3
 3562 0106 0E       		.uleb128 0xe
 3563 0107 3A       		.uleb128 0x3a
 3564 0108 0B       		.uleb128 0xb
 3565 0109 3B       		.uleb128 0x3b
 3566 010a 05       		.uleb128 0x5
 3567 010b 27       		.uleb128 0x27
 3568 010c 19       		.uleb128 0x19
 3569 010d 11       		.uleb128 0x11
 3570 010e 01       		.uleb128 0x1
 3571 010f 12       		.uleb128 0x12
 3572 0110 06       		.uleb128 0x6
 3573 0111 40       		.uleb128 0x40
 3574 0112 18       		.uleb128 0x18
 3575 0113 9742     		.uleb128 0x2117
 3576 0115 19       		.uleb128 0x19
 3577 0116 01       		.uleb128 0x1
 3578 0117 13       		.uleb128 0x13
 3579 0118 00       		.byte	0
 3580 0119 00       		.byte	0
 3581 011a 16       		.uleb128 0x16
 3582 011b 34       		.uleb128 0x34
 3583 011c 00       		.byte	0
 3584 011d 03       		.uleb128 0x3
 3585 011e 08       		.uleb128 0x8
 3586 011f 3A       		.uleb128 0x3a
 3587 0120 0B       		.uleb128 0xb
 3588 0121 3B       		.uleb128 0x3b
 3589 0122 05       		.uleb128 0x5
 3590 0123 49       		.uleb128 0x49
 3591 0124 13       		.uleb128 0x13
 3592 0125 02       		.uleb128 0x2
 3593 0126 17       		.uleb128 0x17
 3594 0127 00       		.byte	0
 3595 0128 00       		.byte	0
 3596 0129 17       		.uleb128 0x17
 3597 012a 34       		.uleb128 0x34
 3598 012b 00       		.byte	0
 3599 012c 03       		.uleb128 0x3
 3600 012d 0E       		.uleb128 0xe
 3601 012e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 115


 3602 012f 0B       		.uleb128 0xb
 3603 0130 3B       		.uleb128 0x3b
 3604 0131 05       		.uleb128 0x5
 3605 0132 49       		.uleb128 0x49
 3606 0133 13       		.uleb128 0x13
 3607 0134 02       		.uleb128 0x2
 3608 0135 17       		.uleb128 0x17
 3609 0136 00       		.byte	0
 3610 0137 00       		.byte	0
 3611 0138 18       		.uleb128 0x18
 3612 0139 2E       		.uleb128 0x2e
 3613 013a 01       		.byte	0x1
 3614 013b 3F       		.uleb128 0x3f
 3615 013c 19       		.uleb128 0x19
 3616 013d 03       		.uleb128 0x3
 3617 013e 0E       		.uleb128 0xe
 3618 013f 3A       		.uleb128 0x3a
 3619 0140 0B       		.uleb128 0xb
 3620 0141 3B       		.uleb128 0x3b
 3621 0142 05       		.uleb128 0x5
 3622 0143 27       		.uleb128 0x27
 3623 0144 19       		.uleb128 0x19
 3624 0145 49       		.uleb128 0x49
 3625 0146 13       		.uleb128 0x13
 3626 0147 11       		.uleb128 0x11
 3627 0148 01       		.uleb128 0x1
 3628 0149 12       		.uleb128 0x12
 3629 014a 06       		.uleb128 0x6
 3630 014b 40       		.uleb128 0x40
 3631 014c 18       		.uleb128 0x18
 3632 014d 9742     		.uleb128 0x2117
 3633 014f 19       		.uleb128 0x19
 3634 0150 01       		.uleb128 0x1
 3635 0151 13       		.uleb128 0x13
 3636 0152 00       		.byte	0
 3637 0153 00       		.byte	0
 3638 0154 19       		.uleb128 0x19
 3639 0155 05       		.uleb128 0x5
 3640 0156 00       		.byte	0
 3641 0157 03       		.uleb128 0x3
 3642 0158 0E       		.uleb128 0xe
 3643 0159 3A       		.uleb128 0x3a
 3644 015a 0B       		.uleb128 0xb
 3645 015b 3B       		.uleb128 0x3b
 3646 015c 05       		.uleb128 0x5
 3647 015d 49       		.uleb128 0x49
 3648 015e 13       		.uleb128 0x13
 3649 015f 02       		.uleb128 0x2
 3650 0160 17       		.uleb128 0x17
 3651 0161 00       		.byte	0
 3652 0162 00       		.byte	0
 3653 0163 1A       		.uleb128 0x1a
 3654 0164 05       		.uleb128 0x5
 3655 0165 00       		.byte	0
 3656 0166 03       		.uleb128 0x3
 3657 0167 0E       		.uleb128 0xe
 3658 0168 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 116


 3659 0169 0B       		.uleb128 0xb
 3660 016a 3B       		.uleb128 0x3b
 3661 016b 05       		.uleb128 0x5
 3662 016c 49       		.uleb128 0x49
 3663 016d 13       		.uleb128 0x13
 3664 016e 02       		.uleb128 0x2
 3665 016f 18       		.uleb128 0x18
 3666 0170 00       		.byte	0
 3667 0171 00       		.byte	0
 3668 0172 1B       		.uleb128 0x1b
 3669 0173 34       		.uleb128 0x34
 3670 0174 00       		.byte	0
 3671 0175 03       		.uleb128 0x3
 3672 0176 0E       		.uleb128 0xe
 3673 0177 3A       		.uleb128 0x3a
 3674 0178 0B       		.uleb128 0xb
 3675 0179 3B       		.uleb128 0x3b
 3676 017a 05       		.uleb128 0x5
 3677 017b 49       		.uleb128 0x49
 3678 017c 13       		.uleb128 0x13
 3679 017d 00       		.byte	0
 3680 017e 00       		.byte	0
 3681 017f 1C       		.uleb128 0x1c
 3682 0180 05       		.uleb128 0x5
 3683 0181 00       		.byte	0
 3684 0182 03       		.uleb128 0x3
 3685 0183 08       		.uleb128 0x8
 3686 0184 3A       		.uleb128 0x3a
 3687 0185 0B       		.uleb128 0xb
 3688 0186 3B       		.uleb128 0x3b
 3689 0187 05       		.uleb128 0x5
 3690 0188 49       		.uleb128 0x49
 3691 0189 13       		.uleb128 0x13
 3692 018a 02       		.uleb128 0x2
 3693 018b 17       		.uleb128 0x17
 3694 018c 00       		.byte	0
 3695 018d 00       		.byte	0
 3696 018e 1D       		.uleb128 0x1d
 3697 018f 05       		.uleb128 0x5
 3698 0190 00       		.byte	0
 3699 0191 03       		.uleb128 0x3
 3700 0192 08       		.uleb128 0x8
 3701 0193 3A       		.uleb128 0x3a
 3702 0194 0B       		.uleb128 0xb
 3703 0195 3B       		.uleb128 0x3b
 3704 0196 05       		.uleb128 0x5
 3705 0197 49       		.uleb128 0x49
 3706 0198 13       		.uleb128 0x13
 3707 0199 02       		.uleb128 0x2
 3708 019a 18       		.uleb128 0x18
 3709 019b 00       		.byte	0
 3710 019c 00       		.byte	0
 3711 019d 1E       		.uleb128 0x1e
 3712 019e 34       		.uleb128 0x34
 3713 019f 00       		.byte	0
 3714 01a0 03       		.uleb128 0x3
 3715 01a1 08       		.uleb128 0x8
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 117


 3716 01a2 3A       		.uleb128 0x3a
 3717 01a3 0B       		.uleb128 0xb
 3718 01a4 3B       		.uleb128 0x3b
 3719 01a5 05       		.uleb128 0x5
 3720 01a6 49       		.uleb128 0x49
 3721 01a7 13       		.uleb128 0x13
 3722 01a8 00       		.byte	0
 3723 01a9 00       		.byte	0
 3724 01aa 1F       		.uleb128 0x1f
 3725 01ab 34       		.uleb128 0x34
 3726 01ac 00       		.byte	0
 3727 01ad 03       		.uleb128 0x3
 3728 01ae 0E       		.uleb128 0xe
 3729 01af 3A       		.uleb128 0x3a
 3730 01b0 0B       		.uleb128 0xb
 3731 01b1 3B       		.uleb128 0x3b
 3732 01b2 05       		.uleb128 0x5
 3733 01b3 49       		.uleb128 0x49
 3734 01b4 13       		.uleb128 0x13
 3735 01b5 02       		.uleb128 0x2
 3736 01b6 18       		.uleb128 0x18
 3737 01b7 00       		.byte	0
 3738 01b8 00       		.byte	0
 3739 01b9 20       		.uleb128 0x20
 3740 01ba 2E       		.uleb128 0x2e
 3741 01bb 00       		.byte	0
 3742 01bc 3F       		.uleb128 0x3f
 3743 01bd 19       		.uleb128 0x19
 3744 01be 03       		.uleb128 0x3
 3745 01bf 0E       		.uleb128 0xe
 3746 01c0 3A       		.uleb128 0x3a
 3747 01c1 0B       		.uleb128 0xb
 3748 01c2 3B       		.uleb128 0x3b
 3749 01c3 05       		.uleb128 0x5
 3750 01c4 27       		.uleb128 0x27
 3751 01c5 19       		.uleb128 0x19
 3752 01c6 11       		.uleb128 0x11
 3753 01c7 01       		.uleb128 0x1
 3754 01c8 12       		.uleb128 0x12
 3755 01c9 06       		.uleb128 0x6
 3756 01ca 40       		.uleb128 0x40
 3757 01cb 18       		.uleb128 0x18
 3758 01cc 9742     		.uleb128 0x2117
 3759 01ce 19       		.uleb128 0x19
 3760 01cf 00       		.byte	0
 3761 01d0 00       		.byte	0
 3762 01d1 21       		.uleb128 0x21
 3763 01d2 01       		.uleb128 0x1
 3764 01d3 01       		.byte	0x1
 3765 01d4 49       		.uleb128 0x49
 3766 01d5 13       		.uleb128 0x13
 3767 01d6 01       		.uleb128 0x1
 3768 01d7 13       		.uleb128 0x13
 3769 01d8 00       		.byte	0
 3770 01d9 00       		.byte	0
 3771 01da 22       		.uleb128 0x22
 3772 01db 21       		.uleb128 0x21
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 118


 3773 01dc 00       		.byte	0
 3774 01dd 49       		.uleb128 0x49
 3775 01de 13       		.uleb128 0x13
 3776 01df 2F       		.uleb128 0x2f
 3777 01e0 0B       		.uleb128 0xb
 3778 01e1 00       		.byte	0
 3779 01e2 00       		.byte	0
 3780 01e3 23       		.uleb128 0x23
 3781 01e4 34       		.uleb128 0x34
 3782 01e5 00       		.byte	0
 3783 01e6 03       		.uleb128 0x3
 3784 01e7 0E       		.uleb128 0xe
 3785 01e8 3A       		.uleb128 0x3a
 3786 01e9 0B       		.uleb128 0xb
 3787 01ea 3B       		.uleb128 0x3b
 3788 01eb 0B       		.uleb128 0xb
 3789 01ec 49       		.uleb128 0x49
 3790 01ed 13       		.uleb128 0x13
 3791 01ee 02       		.uleb128 0x2
 3792 01ef 18       		.uleb128 0x18
 3793 01f0 00       		.byte	0
 3794 01f1 00       		.byte	0
 3795 01f2 24       		.uleb128 0x24
 3796 01f3 34       		.uleb128 0x34
 3797 01f4 00       		.byte	0
 3798 01f5 03       		.uleb128 0x3
 3799 01f6 0E       		.uleb128 0xe
 3800 01f7 3A       		.uleb128 0x3a
 3801 01f8 0B       		.uleb128 0xb
 3802 01f9 3B       		.uleb128 0x3b
 3803 01fa 0B       		.uleb128 0xb
 3804 01fb 49       		.uleb128 0x49
 3805 01fc 13       		.uleb128 0x13
 3806 01fd 3F       		.uleb128 0x3f
 3807 01fe 19       		.uleb128 0x19
 3808 01ff 3C       		.uleb128 0x3c
 3809 0200 19       		.uleb128 0x19
 3810 0201 00       		.byte	0
 3811 0202 00       		.byte	0
 3812 0203 25       		.uleb128 0x25
 3813 0204 34       		.uleb128 0x34
 3814 0205 00       		.byte	0
 3815 0206 03       		.uleb128 0x3
 3816 0207 0E       		.uleb128 0xe
 3817 0208 3A       		.uleb128 0x3a
 3818 0209 0B       		.uleb128 0xb
 3819 020a 3B       		.uleb128 0x3b
 3820 020b 0B       		.uleb128 0xb
 3821 020c 49       		.uleb128 0x49
 3822 020d 13       		.uleb128 0x13
 3823 020e 3F       		.uleb128 0x3f
 3824 020f 19       		.uleb128 0x19
 3825 0210 02       		.uleb128 0x2
 3826 0211 18       		.uleb128 0x18
 3827 0212 00       		.byte	0
 3828 0213 00       		.byte	0
 3829 0214 26       		.uleb128 0x26
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 119


 3830 0215 2E       		.uleb128 0x2e
 3831 0216 00       		.byte	0
 3832 0217 3F       		.uleb128 0x3f
 3833 0218 19       		.uleb128 0x19
 3834 0219 3C       		.uleb128 0x3c
 3835 021a 19       		.uleb128 0x19
 3836 021b 6E       		.uleb128 0x6e
 3837 021c 0E       		.uleb128 0xe
 3838 021d 03       		.uleb128 0x3
 3839 021e 0E       		.uleb128 0xe
 3840 021f 3A       		.uleb128 0x3a
 3841 0220 0B       		.uleb128 0xb
 3842 0221 3B       		.uleb128 0x3b
 3843 0222 0B       		.uleb128 0xb
 3844 0223 00       		.byte	0
 3845 0224 00       		.byte	0
 3846 0225 00       		.byte	0
 3847              		.section	.debug_loc,"",%progbits
 3848              	.Ldebug_loc0:
 3849              	.LLST0:
 3850 0000 00000000 		.4byte	.LVL0
 3851 0004 12000000 		.4byte	.LVL2
 3852 0008 0100     		.2byte	0x1
 3853 000a 50       		.byte	0x50
 3854 000b 12000000 		.4byte	.LVL2
 3855 000f 3C000000 		.4byte	.LFE33
 3856 0013 0400     		.2byte	0x4
 3857 0015 F3       		.byte	0xf3
 3858 0016 01       		.uleb128 0x1
 3859 0017 50       		.byte	0x50
 3860 0018 9F       		.byte	0x9f
 3861 0019 00000000 		.4byte	0
 3862 001d 00000000 		.4byte	0
 3863              	.LLST1:
 3864 0021 06000000 		.4byte	.LVL1
 3865 0025 1E000000 		.4byte	.LVL3
 3866 0029 0100     		.2byte	0x1
 3867 002b 53       		.byte	0x53
 3868 002c 00000000 		.4byte	0
 3869 0030 00000000 		.4byte	0
 3870              	.LLST2:
 3871 0034 00000000 		.4byte	.LVL4
 3872 0038 07000000 		.4byte	.LVL5-1
 3873 003c 0100     		.2byte	0x1
 3874 003e 50       		.byte	0x50
 3875 003f 07000000 		.4byte	.LVL5-1
 3876 0043 16000000 		.4byte	.LVL8
 3877 0047 0100     		.2byte	0x1
 3878 0049 54       		.byte	0x54
 3879 004a 16000000 		.4byte	.LVL8
 3880 004e 18000000 		.4byte	.LFE34
 3881 0052 0400     		.2byte	0x4
 3882 0054 F3       		.byte	0xf3
 3883 0055 01       		.uleb128 0x1
 3884 0056 50       		.byte	0x50
 3885 0057 9F       		.byte	0x9f
 3886 0058 00000000 		.4byte	0
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 120


 3887 005c 00000000 		.4byte	0
 3888              	.LLST3:
 3889 0060 02000000 		.4byte	.LVL9
 3890 0064 06000000 		.4byte	.LVL10
 3891 0068 0200     		.2byte	0x2
 3892 006a 30       		.byte	0x30
 3893 006b 9F       		.byte	0x9f
 3894 006c 06000000 		.4byte	.LVL10
 3895 0070 12000000 		.4byte	.LVL13
 3896 0074 0100     		.2byte	0x1
 3897 0076 54       		.byte	0x54
 3898 0077 00000000 		.4byte	0
 3899 007b 00000000 		.4byte	0
 3900              	.LLST4:
 3901 007f 12000000 		.4byte	.LVL16
 3902 0083 2A000000 		.4byte	.LVL21
 3903 0087 0100     		.2byte	0x1
 3904 0089 54       		.byte	0x54
 3905 008a 00000000 		.4byte	0
 3906 008e 00000000 		.4byte	0
 3907              	.LLST5:
 3908 0092 1A000000 		.4byte	.LVL17
 3909 0096 20000000 		.4byte	.LVL18
 3910 009a 0100     		.2byte	0x1
 3911 009c 50       		.byte	0x50
 3912 009d 00000000 		.4byte	0
 3913 00a1 00000000 		.4byte	0
 3914              	.LLST6:
 3915 00a5 00000000 		.4byte	.LVL22
 3916 00a9 02000000 		.4byte	.LVL23
 3917 00ad 0100     		.2byte	0x1
 3918 00af 50       		.byte	0x50
 3919 00b0 02000000 		.4byte	.LVL23
 3920 00b4 0C000000 		.4byte	.LFE41
 3921 00b8 0400     		.2byte	0x4
 3922 00ba F3       		.byte	0xf3
 3923 00bb 01       		.uleb128 0x1
 3924 00bc 50       		.byte	0x50
 3925 00bd 9F       		.byte	0x9f
 3926 00be 00000000 		.4byte	0
 3927 00c2 00000000 		.4byte	0
 3928              	.LLST7:
 3929 00c6 00000000 		.4byte	.LVL24
 3930 00ca 02000000 		.4byte	.LVL25
 3931 00ce 0100     		.2byte	0x1
 3932 00d0 50       		.byte	0x50
 3933 00d1 02000000 		.4byte	.LVL25
 3934 00d5 0C000000 		.4byte	.LFE42
 3935 00d9 0400     		.2byte	0x4
 3936 00db F3       		.byte	0xf3
 3937 00dc 01       		.uleb128 0x1
 3938 00dd 50       		.byte	0x50
 3939 00de 9F       		.byte	0x9f
 3940 00df 00000000 		.4byte	0
 3941 00e3 00000000 		.4byte	0
 3942              	.LLST8:
 3943 00e7 00000000 		.4byte	.LVL26
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 121


 3944 00eb 04000000 		.4byte	.LVL27
 3945 00ef 0100     		.2byte	0x1
 3946 00f1 50       		.byte	0x50
 3947 00f2 04000000 		.4byte	.LVL27
 3948 00f6 0C000000 		.4byte	.LFE43
 3949 00fa 0400     		.2byte	0x4
 3950 00fc F3       		.byte	0xf3
 3951 00fd 01       		.uleb128 0x1
 3952 00fe 50       		.byte	0x50
 3953 00ff 9F       		.byte	0x9f
 3954 0100 00000000 		.4byte	0
 3955 0104 00000000 		.4byte	0
 3956              	.LLST9:
 3957 0108 00000000 		.4byte	.LVL28
 3958 010c 04000000 		.4byte	.LVL29
 3959 0110 0100     		.2byte	0x1
 3960 0112 50       		.byte	0x50
 3961 0113 04000000 		.4byte	.LVL29
 3962 0117 0C000000 		.4byte	.LFE44
 3963 011b 0400     		.2byte	0x4
 3964 011d F3       		.byte	0xf3
 3965 011e 01       		.uleb128 0x1
 3966 011f 50       		.byte	0x50
 3967 0120 9F       		.byte	0x9f
 3968 0121 00000000 		.4byte	0
 3969 0125 00000000 		.4byte	0
 3970              	.LLST10:
 3971 0129 00000000 		.4byte	.LVL30
 3972 012d 04000000 		.4byte	.LVL31
 3973 0131 0100     		.2byte	0x1
 3974 0133 50       		.byte	0x50
 3975 0134 04000000 		.4byte	.LVL31
 3976 0138 0C000000 		.4byte	.LFE45
 3977 013c 0400     		.2byte	0x4
 3978 013e F3       		.byte	0xf3
 3979 013f 01       		.uleb128 0x1
 3980 0140 50       		.byte	0x50
 3981 0141 9F       		.byte	0x9f
 3982 0142 00000000 		.4byte	0
 3983 0146 00000000 		.4byte	0
 3984              	.LLST11:
 3985 014a 00000000 		.4byte	.LVL32
 3986 014e 04000000 		.4byte	.LVL33
 3987 0152 0100     		.2byte	0x1
 3988 0154 50       		.byte	0x50
 3989 0155 04000000 		.4byte	.LVL33
 3990 0159 0C000000 		.4byte	.LFE46
 3991 015d 0400     		.2byte	0x4
 3992 015f F3       		.byte	0xf3
 3993 0160 01       		.uleb128 0x1
 3994 0161 50       		.byte	0x50
 3995 0162 9F       		.byte	0x9f
 3996 0163 00000000 		.4byte	0
 3997 0167 00000000 		.4byte	0
 3998              	.LLST12:
 3999 016b 00000000 		.4byte	.LVL34
 4000 016f 04000000 		.4byte	.LVL35
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 122


 4001 0173 0100     		.2byte	0x1
 4002 0175 50       		.byte	0x50
 4003 0176 04000000 		.4byte	.LVL35
 4004 017a 0C000000 		.4byte	.LFE47
 4005 017e 0400     		.2byte	0x4
 4006 0180 F3       		.byte	0xf3
 4007 0181 01       		.uleb128 0x1
 4008 0182 50       		.byte	0x50
 4009 0183 9F       		.byte	0x9f
 4010 0184 00000000 		.4byte	0
 4011 0188 00000000 		.4byte	0
 4012              	.LLST13:
 4013 018c 00000000 		.4byte	.LVL36
 4014 0190 04000000 		.4byte	.LVL37
 4015 0194 0100     		.2byte	0x1
 4016 0196 50       		.byte	0x50
 4017 0197 04000000 		.4byte	.LVL37
 4018 019b 0C000000 		.4byte	.LFE48
 4019 019f 0400     		.2byte	0x4
 4020 01a1 F3       		.byte	0xf3
 4021 01a2 01       		.uleb128 0x1
 4022 01a3 50       		.byte	0x50
 4023 01a4 9F       		.byte	0x9f
 4024 01a5 00000000 		.4byte	0
 4025 01a9 00000000 		.4byte	0
 4026              	.LLST14:
 4027 01ad 00000000 		.4byte	.LVL43
 4028 01b1 04000000 		.4byte	.LVL44
 4029 01b5 0100     		.2byte	0x1
 4030 01b7 50       		.byte	0x50
 4031 01b8 04000000 		.4byte	.LVL44
 4032 01bc 0C000000 		.4byte	.LFE54
 4033 01c0 0400     		.2byte	0x4
 4034 01c2 F3       		.byte	0xf3
 4035 01c3 01       		.uleb128 0x1
 4036 01c4 50       		.byte	0x50
 4037 01c5 9F       		.byte	0x9f
 4038 01c6 00000000 		.4byte	0
 4039 01ca 00000000 		.4byte	0
 4040              	.LLST15:
 4041 01ce 00000000 		.4byte	.LVL45
 4042 01d2 1E000000 		.4byte	.LVL49
 4043 01d6 0100     		.2byte	0x1
 4044 01d8 50       		.byte	0x50
 4045 01d9 1E000000 		.4byte	.LVL49
 4046 01dd 23000000 		.4byte	.LVL50-1
 4047 01e1 0100     		.2byte	0x1
 4048 01e3 51       		.byte	0x51
 4049 01e4 23000000 		.4byte	.LVL50-1
 4050 01e8 8C000000 		.4byte	.LVL57
 4051 01ec 0100     		.2byte	0x1
 4052 01ee 54       		.byte	0x54
 4053 01ef 8C000000 		.4byte	.LVL57
 4054 01f3 A8000000 		.4byte	.LFE55
 4055 01f7 0400     		.2byte	0x4
 4056 01f9 F3       		.byte	0xf3
 4057 01fa 01       		.uleb128 0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 123


 4058 01fb 50       		.byte	0x50
 4059 01fc 9F       		.byte	0x9f
 4060 01fd 00000000 		.4byte	0
 4061 0201 00000000 		.4byte	0
 4062              	.LLST16:
 4063 0205 1A000000 		.4byte	.LVL48
 4064 0209 8C000000 		.4byte	.LVL59
 4065 020d 0100     		.2byte	0x1
 4066 020f 58       		.byte	0x58
 4067 0210 00000000 		.4byte	0
 4068 0214 00000000 		.4byte	0
 4069              	.LLST17:
 4070 0218 10000000 		.4byte	.LVL46
 4071 021c 8C000000 		.4byte	.LVL58
 4072 0220 0100     		.2byte	0x1
 4073 0222 57       		.byte	0x57
 4074 0223 00000000 		.4byte	0
 4075 0227 00000000 		.4byte	0
 4076              	.LLST18:
 4077 022b 14000000 		.4byte	.LVL47
 4078 022f 30000000 		.4byte	.LVL51
 4079 0233 0100     		.2byte	0x1
 4080 0235 56       		.byte	0x56
 4081 0236 4A000000 		.4byte	.LVL53
 4082 023a 52000000 		.4byte	.LVL54
 4083 023e 0100     		.2byte	0x1
 4084 0240 56       		.byte	0x56
 4085 0241 00000000 		.4byte	0
 4086 0245 00000000 		.4byte	0
 4087              	.LLST19:
 4088 0249 00000000 		.4byte	.LVL60
 4089 024d 08000000 		.4byte	.LVL62
 4090 0251 0100     		.2byte	0x1
 4091 0253 50       		.byte	0x50
 4092 0254 08000000 		.4byte	.LVL62
 4093 0258 28000000 		.4byte	.LFE56
 4094 025c 0400     		.2byte	0x4
 4095 025e F3       		.byte	0xf3
 4096 025f 01       		.uleb128 0x1
 4097 0260 50       		.byte	0x50
 4098 0261 9F       		.byte	0x9f
 4099 0262 00000000 		.4byte	0
 4100 0266 00000000 		.4byte	0
 4101              	.LLST20:
 4102 026a 06000000 		.4byte	.LVL61
 4103 026e 22000000 		.4byte	.LVL68
 4104 0272 0100     		.2byte	0x1
 4105 0274 54       		.byte	0x54
 4106 0275 00000000 		.4byte	0
 4107 0279 00000000 		.4byte	0
 4108              	.LLST21:
 4109 027d 0C000000 		.4byte	.LVL63
 4110 0281 22000000 		.4byte	.LVL69
 4111 0285 0100     		.2byte	0x1
 4112 0287 55       		.byte	0x55
 4113 0288 22000000 		.4byte	.LVL69
 4114 028c 28000000 		.4byte	.LFE56
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 124


 4115 0290 1E00     		.2byte	0x1e
 4116 0292 F3       		.byte	0xf3
 4117 0293 01       		.uleb128 0x1
 4118 0294 50       		.byte	0x50
 4119 0295 03       		.byte	0x3
 4120 0296 00000000 		.4byte	.LANCHOR2
 4121 029a 22       		.byte	0x22
 4122 029b 94       		.byte	0x94
 4123 029c 01       		.byte	0x1
 4124 029d 08       		.byte	0x8
 4125 029e FF       		.byte	0xff
 4126 029f 1A       		.byte	0x1a
 4127 02a0 F3       		.byte	0xf3
 4128 02a1 01       		.uleb128 0x1
 4129 02a2 50       		.byte	0x50
 4130 02a3 03       		.byte	0x3
 4131 02a4 04000000 		.4byte	.LANCHOR2+4
 4132 02a8 22       		.byte	0x22
 4133 02a9 94       		.byte	0x94
 4134 02aa 01       		.byte	0x1
 4135 02ab 08       		.byte	0x8
 4136 02ac FF       		.byte	0xff
 4137 02ad 1A       		.byte	0x1a
 4138 02ae 22       		.byte	0x22
 4139 02af 9F       		.byte	0x9f
 4140 02b0 00000000 		.4byte	0
 4141 02b4 00000000 		.4byte	0
 4142              	.LLST22:
 4143 02b8 0C000000 		.4byte	.LVL63
 4144 02bc 0E000000 		.4byte	.LVL64
 4145 02c0 0200     		.2byte	0x2
 4146 02c2 30       		.byte	0x30
 4147 02c3 9F       		.byte	0x9f
 4148 02c4 0E000000 		.4byte	.LVL64
 4149 02c8 22000000 		.4byte	.LVL70
 4150 02cc 0100     		.2byte	0x1
 4151 02ce 56       		.byte	0x56
 4152 02cf 22000000 		.4byte	.LVL70
 4153 02d3 28000000 		.4byte	.LFE56
 4154 02d7 0100     		.2byte	0x1
 4155 02d9 50       		.byte	0x50
 4156 02da 00000000 		.4byte	0
 4157 02de 00000000 		.4byte	0
 4158              	.LLST23:
 4159 02e2 02000000 		.4byte	.LVL71
 4160 02e6 08000000 		.4byte	.LVL72
 4161 02ea 0200     		.2byte	0x2
 4162 02ec 30       		.byte	0x30
 4163 02ed 9F       		.byte	0x9f
 4164 02ee 08000000 		.4byte	.LVL72
 4165 02f2 1C000000 		.4byte	.LVL76
 4166 02f6 0100     		.2byte	0x1
 4167 02f8 54       		.byte	0x54
 4168 02f9 00000000 		.4byte	0
 4169 02fd 00000000 		.4byte	0
 4170              	.LLST24:
 4171 0301 02000000 		.4byte	.LVL71
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 125


 4172 0305 08000000 		.4byte	.LVL72
 4173 0309 0200     		.2byte	0x2
 4174 030b 30       		.byte	0x30
 4175 030c 9F       		.byte	0x9f
 4176 030d 08000000 		.4byte	.LVL72
 4177 0311 1C000000 		.4byte	.LVL77
 4178 0315 0100     		.2byte	0x1
 4179 0317 55       		.byte	0x55
 4180 0318 1C000000 		.4byte	.LVL77
 4181 031c 1E000000 		.4byte	.LFE57
 4182 0320 0100     		.2byte	0x1
 4183 0322 50       		.byte	0x50
 4184 0323 00000000 		.4byte	0
 4185 0327 00000000 		.4byte	0
 4186              	.LLST25:
 4187 032b 00000000 		.4byte	.LVL78
 4188 032f 08000000 		.4byte	.LVL80
 4189 0333 0100     		.2byte	0x1
 4190 0335 50       		.byte	0x50
 4191 0336 08000000 		.4byte	.LVL80
 4192 033a 2C000000 		.4byte	.LFE58
 4193 033e 0400     		.2byte	0x4
 4194 0340 F3       		.byte	0xf3
 4195 0341 01       		.uleb128 0x1
 4196 0342 50       		.byte	0x50
 4197 0343 9F       		.byte	0x9f
 4198 0344 00000000 		.4byte	0
 4199 0348 00000000 		.4byte	0
 4200              	.LLST26:
 4201 034c 06000000 		.4byte	.LVL79
 4202 0350 1A000000 		.4byte	.LVL83
 4203 0354 0100     		.2byte	0x1
 4204 0356 54       		.byte	0x54
 4205 0357 1C000000 		.4byte	.LVL84
 4206 035b 20000000 		.4byte	.LVL85
 4207 035f 0100     		.2byte	0x1
 4208 0361 54       		.byte	0x54
 4209 0362 00000000 		.4byte	0
 4210 0366 00000000 		.4byte	0
 4211              	.LLST27:
 4212 036a 0E000000 		.4byte	.LVL81
 4213 036e 20000000 		.4byte	.LVL86
 4214 0372 0100     		.2byte	0x1
 4215 0374 55       		.byte	0x55
 4216 0375 20000000 		.4byte	.LVL86
 4217 0379 2C000000 		.4byte	.LFE58
 4218 037d 1E00     		.2byte	0x1e
 4219 037f F3       		.byte	0xf3
 4220 0380 01       		.uleb128 0x1
 4221 0381 50       		.byte	0x50
 4222 0382 03       		.byte	0x3
 4223 0383 00000000 		.4byte	.LANCHOR2
 4224 0387 22       		.byte	0x22
 4225 0388 94       		.byte	0x94
 4226 0389 01       		.byte	0x1
 4227 038a 08       		.byte	0x8
 4228 038b FF       		.byte	0xff
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 126


 4229 038c 1A       		.byte	0x1a
 4230 038d F3       		.byte	0xf3
 4231 038e 01       		.uleb128 0x1
 4232 038f 50       		.byte	0x50
 4233 0390 03       		.byte	0x3
 4234 0391 04000000 		.4byte	.LANCHOR2+4
 4235 0395 22       		.byte	0x22
 4236 0396 94       		.byte	0x94
 4237 0397 01       		.byte	0x1
 4238 0398 08       		.byte	0x8
 4239 0399 FF       		.byte	0xff
 4240 039a 1A       		.byte	0x1a
 4241 039b 22       		.byte	0x22
 4242 039c 9F       		.byte	0x9f
 4243 039d 00000000 		.4byte	0
 4244 03a1 00000000 		.4byte	0
 4245              	.LLST28:
 4246 03a5 00000000 		.4byte	.LVL87
 4247 03a9 08000000 		.4byte	.LVL89
 4248 03ad 0100     		.2byte	0x1
 4249 03af 50       		.byte	0x50
 4250 03b0 08000000 		.4byte	.LVL89
 4251 03b4 2C000000 		.4byte	.LFE59
 4252 03b8 0400     		.2byte	0x4
 4253 03ba F3       		.byte	0xf3
 4254 03bb 01       		.uleb128 0x1
 4255 03bc 50       		.byte	0x50
 4256 03bd 9F       		.byte	0x9f
 4257 03be 00000000 		.4byte	0
 4258 03c2 00000000 		.4byte	0
 4259              	.LLST29:
 4260 03c6 06000000 		.4byte	.LVL88
 4261 03ca 1A000000 		.4byte	.LVL92
 4262 03ce 0100     		.2byte	0x1
 4263 03d0 54       		.byte	0x54
 4264 03d1 1C000000 		.4byte	.LVL93
 4265 03d5 20000000 		.4byte	.LVL94
 4266 03d9 0100     		.2byte	0x1
 4267 03db 54       		.byte	0x54
 4268 03dc 00000000 		.4byte	0
 4269 03e0 00000000 		.4byte	0
 4270              	.LLST30:
 4271 03e4 0E000000 		.4byte	.LVL90
 4272 03e8 20000000 		.4byte	.LVL95
 4273 03ec 0100     		.2byte	0x1
 4274 03ee 55       		.byte	0x55
 4275 03ef 20000000 		.4byte	.LVL95
 4276 03f3 2C000000 		.4byte	.LFE59
 4277 03f7 1E00     		.2byte	0x1e
 4278 03f9 F3       		.byte	0xf3
 4279 03fa 01       		.uleb128 0x1
 4280 03fb 50       		.byte	0x50
 4281 03fc 03       		.byte	0x3
 4282 03fd 00000000 		.4byte	.LANCHOR2
 4283 0401 22       		.byte	0x22
 4284 0402 94       		.byte	0x94
 4285 0403 01       		.byte	0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 127


 4286 0404 08       		.byte	0x8
 4287 0405 FF       		.byte	0xff
 4288 0406 1A       		.byte	0x1a
 4289 0407 F3       		.byte	0xf3
 4290 0408 01       		.uleb128 0x1
 4291 0409 50       		.byte	0x50
 4292 040a 03       		.byte	0x3
 4293 040b 04000000 		.4byte	.LANCHOR2+4
 4294 040f 22       		.byte	0x22
 4295 0410 94       		.byte	0x94
 4296 0411 01       		.byte	0x1
 4297 0412 08       		.byte	0x8
 4298 0413 FF       		.byte	0xff
 4299 0414 1A       		.byte	0x1a
 4300 0415 22       		.byte	0x22
 4301 0416 9F       		.byte	0x9f
 4302 0417 00000000 		.4byte	0
 4303 041b 00000000 		.4byte	0
 4304              	.LLST31:
 4305 041f 00000000 		.4byte	.LVL96
 4306 0423 08000000 		.4byte	.LVL97
 4307 0427 0100     		.2byte	0x1
 4308 0429 50       		.byte	0x50
 4309 042a 08000000 		.4byte	.LVL97
 4310 042e 0A000000 		.4byte	.LVL98
 4311 0432 0400     		.2byte	0x4
 4312 0434 F3       		.byte	0xf3
 4313 0435 01       		.uleb128 0x1
 4314 0436 50       		.byte	0x50
 4315 0437 9F       		.byte	0x9f
 4316 0438 0A000000 		.4byte	.LVL98
 4317 043c 1A000000 		.4byte	.LVL100
 4318 0440 0100     		.2byte	0x1
 4319 0442 50       		.byte	0x50
 4320 0443 00000000 		.4byte	0
 4321 0447 00000000 		.4byte	0
 4322              	.LLST32:
 4323 044b 00000000 		.4byte	.LVL96
 4324 044f 0A000000 		.4byte	.LVL98
 4325 0453 0100     		.2byte	0x1
 4326 0455 51       		.byte	0x51
 4327 0456 0A000000 		.4byte	.LVL98
 4328 045a 1C000000 		.4byte	.LFE60
 4329 045e 0100     		.2byte	0x1
 4330 0460 51       		.byte	0x51
 4331 0461 00000000 		.4byte	0
 4332 0465 00000000 		.4byte	0
 4333              	.LLST33:
 4334 0469 00000000 		.4byte	.LVL101
 4335 046d 02000000 		.4byte	.LVL102
 4336 0471 0100     		.2byte	0x1
 4337 0473 50       		.byte	0x50
 4338 0474 02000000 		.4byte	.LVL102
 4339 0478 0C000000 		.4byte	.LFE61
 4340 047c 0400     		.2byte	0x4
 4341 047e F3       		.byte	0xf3
 4342 047f 01       		.uleb128 0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 128


 4343 0480 50       		.byte	0x50
 4344 0481 9F       		.byte	0x9f
 4345 0482 00000000 		.4byte	0
 4346 0486 00000000 		.4byte	0
 4347              	.LLST34:
 4348 048a 00000000 		.4byte	.LVL101
 4349 048e 04000000 		.4byte	.LVL103
 4350 0492 0100     		.2byte	0x1
 4351 0494 51       		.byte	0x51
 4352 0495 04000000 		.4byte	.LVL103
 4353 0499 0C000000 		.4byte	.LFE61
 4354 049d 0400     		.2byte	0x4
 4355 049f F3       		.byte	0xf3
 4356 04a0 01       		.uleb128 0x1
 4357 04a1 51       		.byte	0x51
 4358 04a2 9F       		.byte	0x9f
 4359 04a3 00000000 		.4byte	0
 4360 04a7 00000000 		.4byte	0
 4361              	.LLST35:
 4362 04ab 02000000 		.4byte	.LVL102
 4363 04af 0A000000 		.4byte	.LVL106
 4364 04b3 0100     		.2byte	0x1
 4365 04b5 50       		.byte	0x50
 4366 04b6 00000000 		.4byte	0
 4367 04ba 00000000 		.4byte	0
 4368              	.LLST36:
 4369 04be 00000000 		.4byte	.LVL107
 4370 04c2 2A000000 		.4byte	.LVL110
 4371 04c6 0100     		.2byte	0x1
 4372 04c8 50       		.byte	0x50
 4373 04c9 2A000000 		.4byte	.LVL110
 4374 04cd DE000000 		.4byte	.LVL128
 4375 04d1 0100     		.2byte	0x1
 4376 04d3 54       		.byte	0x54
 4377 04d4 DE000000 		.4byte	.LVL128
 4378 04d8 E4000000 		.4byte	.LVL129
 4379 04dc 0400     		.2byte	0x4
 4380 04de F3       		.byte	0xf3
 4381 04df 01       		.uleb128 0x1
 4382 04e0 50       		.byte	0x50
 4383 04e1 9F       		.byte	0x9f
 4384 04e2 E4000000 		.4byte	.LVL129
 4385 04e6 E8000000 		.4byte	.LVL131
 4386 04ea 0100     		.2byte	0x1
 4387 04ec 54       		.byte	0x54
 4388 04ed E8000000 		.4byte	.LVL131
 4389 04f1 EC000000 		.4byte	.LVL132
 4390 04f5 0400     		.2byte	0x4
 4391 04f7 F3       		.byte	0xf3
 4392 04f8 01       		.uleb128 0x1
 4393 04f9 50       		.byte	0x50
 4394 04fa 9F       		.byte	0x9f
 4395 04fb EC000000 		.4byte	.LVL132
 4396 04ff F0000000 		.4byte	.LVL133
 4397 0503 0100     		.2byte	0x1
 4398 0505 54       		.byte	0x54
 4399 0506 F0000000 		.4byte	.LVL133
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 129


 4400 050a 20010000 		.4byte	.LFE37
 4401 050e 0400     		.2byte	0x4
 4402 0510 F3       		.byte	0xf3
 4403 0511 01       		.uleb128 0x1
 4404 0512 50       		.byte	0x50
 4405 0513 9F       		.byte	0x9f
 4406 0514 00000000 		.4byte	0
 4407 0518 00000000 		.4byte	0
 4408              	.LLST37:
 4409 051c AC000000 		.4byte	.LVL120
 4410 0520 B2000000 		.4byte	.LVL121
 4411 0524 0100     		.2byte	0x1
 4412 0526 53       		.byte	0x53
 4413 0527 B2000000 		.4byte	.LVL121
 4414 052b B6000000 		.4byte	.LVL122
 4415 052f 0100     		.2byte	0x1
 4416 0531 5C       		.byte	0x5c
 4417 0532 B6000000 		.4byte	.LVL122
 4418 0536 B8000000 		.4byte	.LVL123
 4419 053a 0100     		.2byte	0x1
 4420 053c 53       		.byte	0x53
 4421 053d B8000000 		.4byte	.LVL123
 4422 0541 C8000000 		.4byte	.LVL125
 4423 0545 0100     		.2byte	0x1
 4424 0547 57       		.byte	0x57
 4425 0548 00000000 		.4byte	0
 4426 054c 00000000 		.4byte	0
 4427              	.LLST38:
 4428 0550 52000000 		.4byte	.LVL115
 4429 0554 58000000 		.4byte	.LVL116
 4430 0558 0200     		.2byte	0x2
 4431 055a 31       		.byte	0x31
 4432 055b 9F       		.byte	0x9f
 4433 055c 5C000000 		.4byte	.LVL117
 4434 0560 60000000 		.4byte	.LVL118
 4435 0564 0200     		.2byte	0x2
 4436 0566 30       		.byte	0x30
 4437 0567 9F       		.byte	0x9f
 4438 0568 60000000 		.4byte	.LVL118
 4439 056c D6000000 		.4byte	.LVL126
 4440 0570 0100     		.2byte	0x1
 4441 0572 58       		.byte	0x58
 4442 0573 D6000000 		.4byte	.LVL126
 4443 0577 DC000000 		.4byte	.LVL127
 4444 057b 0100     		.2byte	0x1
 4445 057d 53       		.byte	0x53
 4446 057e DC000000 		.4byte	.LVL127
 4447 0582 E4000000 		.4byte	.LVL129
 4448 0586 0100     		.2byte	0x1
 4449 0588 58       		.byte	0x58
 4450 0589 E4000000 		.4byte	.LVL129
 4451 058d E6000000 		.4byte	.LVL130
 4452 0591 0100     		.2byte	0x1
 4453 0593 53       		.byte	0x53
 4454 0594 E6000000 		.4byte	.LVL130
 4455 0598 F6000000 		.4byte	.LVL135
 4456 059c 0100     		.2byte	0x1
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 130


 4457 059e 58       		.byte	0x58
 4458 059f 00000000 		.4byte	0
 4459 05a3 00000000 		.4byte	0
 4460              	.LLST39:
 4461 05a7 52000000 		.4byte	.LVL115
 4462 05ab 58000000 		.4byte	.LVL116
 4463 05af 0100     		.2byte	0x1
 4464 05b1 55       		.byte	0x55
 4465 05b2 5C000000 		.4byte	.LVL117
 4466 05b6 F6000000 		.4byte	.LVL134
 4467 05ba 0100     		.2byte	0x1
 4468 05bc 55       		.byte	0x55
 4469 05bd 00000000 		.4byte	0
 4470 05c1 00000000 		.4byte	0
 4471              	.LLST40:
 4472 05c5 1A000000 		.4byte	.LVL109
 4473 05c9 30000000 		.4byte	.LVL112
 4474 05cd 0100     		.2byte	0x1
 4475 05cf 57       		.byte	0x57
 4476 05d0 30000000 		.4byte	.LVL112
 4477 05d4 34000000 		.4byte	.LVL113
 4478 05d8 0100     		.2byte	0x1
 4479 05da 50       		.byte	0x50
 4480 05db 34000000 		.4byte	.LVL113
 4481 05df B8000000 		.4byte	.LVL123
 4482 05e3 0100     		.2byte	0x1
 4483 05e5 57       		.byte	0x57
 4484 05e6 00000000 		.4byte	0
 4485 05ea 00000000 		.4byte	0
 4486              	.LLST41:
 4487 05ee 00000000 		.4byte	.LVL136
 4488 05f2 07000000 		.4byte	.LVL137-1
 4489 05f6 0100     		.2byte	0x1
 4490 05f8 50       		.byte	0x50
 4491 05f9 07000000 		.4byte	.LVL137-1
 4492 05fd 0E000000 		.4byte	.LVL139
 4493 0601 0100     		.2byte	0x1
 4494 0603 54       		.byte	0x54
 4495 0604 0E000000 		.4byte	.LVL139
 4496 0608 10000000 		.4byte	.LFE38
 4497 060c 0400     		.2byte	0x4
 4498 060e F3       		.byte	0xf3
 4499 060f 01       		.uleb128 0x1
 4500 0610 50       		.byte	0x50
 4501 0611 9F       		.byte	0x9f
 4502 0612 00000000 		.4byte	0
 4503 0616 00000000 		.4byte	0
 4504              	.LLST42:
 4505 061a 02000000 		.4byte	.LVL140
 4506 061e 06000000 		.4byte	.LVL141
 4507 0622 0200     		.2byte	0x2
 4508 0624 30       		.byte	0x30
 4509 0625 9F       		.byte	0x9f
 4510 0626 06000000 		.4byte	.LVL141
 4511 062a 1E000000 		.4byte	.LVL146
 4512 062e 0100     		.2byte	0x1
 4513 0630 54       		.byte	0x54
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 131


 4514 0631 00000000 		.4byte	0
 4515 0635 00000000 		.4byte	0
 4516              	.LLST43:
 4517 0639 0E000000 		.4byte	.LVL142
 4518 063d 14000000 		.4byte	.LVL143
 4519 0641 0100     		.2byte	0x1
 4520 0643 50       		.byte	0x50
 4521 0644 00000000 		.4byte	0
 4522 0648 00000000 		.4byte	0
 4523              	.LLST44:
 4524 064c 00000000 		.4byte	.LVL147
 4525 0650 0E000000 		.4byte	.LVL151
 4526 0654 0100     		.2byte	0x1
 4527 0656 50       		.byte	0x50
 4528 0657 0E000000 		.4byte	.LVL151
 4529 065b 30000000 		.4byte	.LFE40
 4530 065f 0400     		.2byte	0x4
 4531 0661 F3       		.byte	0xf3
 4532 0662 01       		.uleb128 0x1
 4533 0663 50       		.byte	0x50
 4534 0664 9F       		.byte	0x9f
 4535 0665 00000000 		.4byte	0
 4536 0669 00000000 		.4byte	0
 4537              	.LLST45:
 4538 066d 08000000 		.4byte	.LVL148
 4539 0671 0C000000 		.4byte	.LVL150
 4540 0675 0100     		.2byte	0x1
 4541 0677 55       		.byte	0x55
 4542 0678 0C000000 		.4byte	.LVL150
 4543 067c 0E000000 		.4byte	.LVL151
 4544 0680 0800     		.2byte	0x8
 4545 0682 72       		.byte	0x72
 4546 0683 04       		.sleb128 4
 4547 0684 94       		.byte	0x94
 4548 0685 01       		.byte	0x1
 4549 0686 08       		.byte	0x8
 4550 0687 FF       		.byte	0xff
 4551 0688 1A       		.byte	0x1a
 4552 0689 9F       		.byte	0x9f
 4553 068a 0E000000 		.4byte	.LVL151
 4554 068e 30000000 		.4byte	.LFE40
 4555 0692 0F00     		.2byte	0xf
 4556 0694 F3       		.byte	0xf3
 4557 0695 01       		.uleb128 0x1
 4558 0696 50       		.byte	0x50
 4559 0697 03       		.byte	0x3
 4560 0698 04000000 		.4byte	.LANCHOR2+4
 4561 069c 22       		.byte	0x22
 4562 069d 94       		.byte	0x94
 4563 069e 01       		.byte	0x1
 4564 069f 08       		.byte	0x8
 4565 06a0 FF       		.byte	0xff
 4566 06a1 1A       		.byte	0x1a
 4567 06a2 9F       		.byte	0x9f
 4568 06a3 00000000 		.4byte	0
 4569 06a7 00000000 		.4byte	0
 4570              	.LLST46:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 132


 4571 06ab 0A000000 		.4byte	.LVL149
 4572 06af 0E000000 		.4byte	.LVL151
 4573 06b3 0100     		.2byte	0x1
 4574 06b5 54       		.byte	0x54
 4575 06b6 0E000000 		.4byte	.LVL151
 4576 06ba 30000000 		.4byte	.LFE40
 4577 06be 0F00     		.2byte	0xf
 4578 06c0 F3       		.byte	0xf3
 4579 06c1 01       		.uleb128 0x1
 4580 06c2 50       		.byte	0x50
 4581 06c3 03       		.byte	0x3
 4582 06c4 00000000 		.4byte	.LANCHOR2
 4583 06c8 22       		.byte	0x22
 4584 06c9 94       		.byte	0x94
 4585 06ca 01       		.byte	0x1
 4586 06cb 08       		.byte	0x8
 4587 06cc FF       		.byte	0xff
 4588 06cd 1A       		.byte	0x1a
 4589 06ce 9F       		.byte	0x9f
 4590 06cf 00000000 		.4byte	0
 4591 06d3 00000000 		.4byte	0
 4592              	.LLST47:
 4593 06d7 0C000000 		.4byte	.LVL150
 4594 06db 26000000 		.4byte	.LVL157
 4595 06df 0100     		.2byte	0x1
 4596 06e1 55       		.byte	0x55
 4597 06e2 26000000 		.4byte	.LVL157
 4598 06e6 30000000 		.4byte	.LFE40
 4599 06ea 1E00     		.2byte	0x1e
 4600 06ec F3       		.byte	0xf3
 4601 06ed 01       		.uleb128 0x1
 4602 06ee 50       		.byte	0x50
 4603 06ef 03       		.byte	0x3
 4604 06f0 04000000 		.4byte	.LANCHOR2+4
 4605 06f4 22       		.byte	0x22
 4606 06f5 94       		.byte	0x94
 4607 06f6 01       		.byte	0x1
 4608 06f7 08       		.byte	0x8
 4609 06f8 FF       		.byte	0xff
 4610 06f9 1A       		.byte	0x1a
 4611 06fa F3       		.byte	0xf3
 4612 06fb 01       		.uleb128 0x1
 4613 06fc 50       		.byte	0x50
 4614 06fd 03       		.byte	0x3
 4615 06fe 00000000 		.4byte	.LANCHOR2
 4616 0702 22       		.byte	0x22
 4617 0703 94       		.byte	0x94
 4618 0704 01       		.byte	0x1
 4619 0705 08       		.byte	0x8
 4620 0706 FF       		.byte	0xff
 4621 0707 1A       		.byte	0x1a
 4622 0708 22       		.byte	0x22
 4623 0709 9F       		.byte	0x9f
 4624 070a 00000000 		.4byte	0
 4625 070e 00000000 		.4byte	0
 4626              	.LLST48:
 4627 0712 0C000000 		.4byte	.LVL150
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 133


 4628 0716 26000000 		.4byte	.LVL156
 4629 071a 0100     		.2byte	0x1
 4630 071c 54       		.byte	0x54
 4631 071d 00000000 		.4byte	0
 4632 0721 00000000 		.4byte	0
 4633              	.LLST49:
 4634 0725 16000000 		.4byte	.LVL152
 4635 0729 1C000000 		.4byte	.LVL153
 4636 072d 0100     		.2byte	0x1
 4637 072f 50       		.byte	0x50
 4638 0730 00000000 		.4byte	0
 4639 0734 00000000 		.4byte	0
 4640              	.LLST50:
 4641 0738 00000000 		.4byte	.LVL158
 4642 073c 04000000 		.4byte	.LVL159
 4643 0740 0100     		.2byte	0x1
 4644 0742 50       		.byte	0x50
 4645 0743 04000000 		.4byte	.LVL159
 4646 0747 0C000000 		.4byte	.LFE62
 4647 074b 0400     		.2byte	0x4
 4648 074d F3       		.byte	0xf3
 4649 074e 01       		.uleb128 0x1
 4650 074f 50       		.byte	0x50
 4651 0750 9F       		.byte	0x9f
 4652 0751 00000000 		.4byte	0
 4653 0755 00000000 		.4byte	0
 4654              	.LLST51:
 4655 0759 00000000 		.4byte	.LVL160
 4656 075d 04000000 		.4byte	.LVL161
 4657 0761 0100     		.2byte	0x1
 4658 0763 50       		.byte	0x50
 4659 0764 04000000 		.4byte	.LVL161
 4660 0768 0C000000 		.4byte	.LFE63
 4661 076c 0400     		.2byte	0x4
 4662 076e F3       		.byte	0xf3
 4663 076f 01       		.uleb128 0x1
 4664 0770 50       		.byte	0x50
 4665 0771 9F       		.byte	0x9f
 4666 0772 00000000 		.4byte	0
 4667 0776 00000000 		.4byte	0
 4668              	.LLST52:
 4669 077a 00000000 		.4byte	.LVL162
 4670 077e 04000000 		.4byte	.LVL163
 4671 0782 0100     		.2byte	0x1
 4672 0784 50       		.byte	0x50
 4673 0785 04000000 		.4byte	.LVL163
 4674 0789 0C000000 		.4byte	.LFE64
 4675 078d 0400     		.2byte	0x4
 4676 078f F3       		.byte	0xf3
 4677 0790 01       		.uleb128 0x1
 4678 0791 50       		.byte	0x50
 4679 0792 9F       		.byte	0x9f
 4680 0793 00000000 		.4byte	0
 4681 0797 00000000 		.4byte	0
 4682              		.section	.debug_aranges,"",%progbits
 4683 0000 24010000 		.4byte	0x124
 4684 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 134


 4685 0006 00000000 		.4byte	.Ldebug_info0
 4686 000a 04       		.byte	0x4
 4687 000b 00       		.byte	0
 4688 000c 0000     		.2byte	0
 4689 000e 0000     		.2byte	0
 4690 0010 00000000 		.4byte	.LFB33
 4691 0014 3C000000 		.4byte	.LFE33-.LFB33
 4692 0018 00000000 		.4byte	.LFB34
 4693 001c 18000000 		.4byte	.LFE34-.LFB34
 4694 0020 00000000 		.4byte	.LFB35
 4695 0024 14000000 		.4byte	.LFE35-.LFB35
 4696 0028 00000000 		.4byte	.LFB36
 4697 002c 30000000 		.4byte	.LFE36-.LFB36
 4698 0030 00000000 		.4byte	.LFB41
 4699 0034 0C000000 		.4byte	.LFE41-.LFB41
 4700 0038 00000000 		.4byte	.LFB42
 4701 003c 0C000000 		.4byte	.LFE42-.LFB42
 4702 0040 00000000 		.4byte	.LFB43
 4703 0044 0C000000 		.4byte	.LFE43-.LFB43
 4704 0048 00000000 		.4byte	.LFB44
 4705 004c 0C000000 		.4byte	.LFE44-.LFB44
 4706 0050 00000000 		.4byte	.LFB45
 4707 0054 0C000000 		.4byte	.LFE45-.LFB45
 4708 0058 00000000 		.4byte	.LFB46
 4709 005c 0C000000 		.4byte	.LFE46-.LFB46
 4710 0060 00000000 		.4byte	.LFB47
 4711 0064 0C000000 		.4byte	.LFE47-.LFB47
 4712 0068 00000000 		.4byte	.LFB48
 4713 006c 0C000000 		.4byte	.LFE48-.LFB48
 4714 0070 00000000 		.4byte	.LFB49
 4715 0074 0C000000 		.4byte	.LFE49-.LFB49
 4716 0078 00000000 		.4byte	.LFB50
 4717 007c 0C000000 		.4byte	.LFE50-.LFB50
 4718 0080 00000000 		.4byte	.LFB51
 4719 0084 0C000000 		.4byte	.LFE51-.LFB51
 4720 0088 00000000 		.4byte	.LFB52
 4721 008c 0C000000 		.4byte	.LFE52-.LFB52
 4722 0090 00000000 		.4byte	.LFB53
 4723 0094 0C000000 		.4byte	.LFE53-.LFB53
 4724 0098 00000000 		.4byte	.LFB54
 4725 009c 0C000000 		.4byte	.LFE54-.LFB54
 4726 00a0 00000000 		.4byte	.LFB55
 4727 00a4 A8000000 		.4byte	.LFE55-.LFB55
 4728 00a8 00000000 		.4byte	.LFB56
 4729 00ac 28000000 		.4byte	.LFE56-.LFB56
 4730 00b0 00000000 		.4byte	.LFB57
 4731 00b4 1E000000 		.4byte	.LFE57-.LFB57
 4732 00b8 00000000 		.4byte	.LFB58
 4733 00bc 2C000000 		.4byte	.LFE58-.LFB58
 4734 00c0 00000000 		.4byte	.LFB59
 4735 00c4 2C000000 		.4byte	.LFE59-.LFB59
 4736 00c8 00000000 		.4byte	.LFB60
 4737 00cc 1C000000 		.4byte	.LFE60-.LFB60
 4738 00d0 00000000 		.4byte	.LFB61
 4739 00d4 0C000000 		.4byte	.LFE61-.LFB61
 4740 00d8 00000000 		.4byte	.LFB37
 4741 00dc 20010000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 135


 4742 00e0 00000000 		.4byte	.LFB38
 4743 00e4 10000000 		.4byte	.LFE38-.LFB38
 4744 00e8 00000000 		.4byte	.LFB39
 4745 00ec 24000000 		.4byte	.LFE39-.LFB39
 4746 00f0 00000000 		.4byte	.LFB40
 4747 00f4 30000000 		.4byte	.LFE40-.LFB40
 4748 00f8 00000000 		.4byte	.LFB62
 4749 00fc 0C000000 		.4byte	.LFE62-.LFB62
 4750 0100 00000000 		.4byte	.LFB63
 4751 0104 0C000000 		.4byte	.LFE63-.LFB63
 4752 0108 00000000 		.4byte	.LFB64
 4753 010c 0C000000 		.4byte	.LFE64-.LFB64
 4754 0110 00000000 		.4byte	.LFB65
 4755 0114 0C000000 		.4byte	.LFE65-.LFB65
 4756 0118 00000000 		.4byte	.LFB66
 4757 011c 0C000000 		.4byte	.LFE66-.LFB66
 4758 0120 00000000 		.4byte	0
 4759 0124 00000000 		.4byte	0
 4760              		.section	.debug_ranges,"",%progbits
 4761              	.Ldebug_ranges0:
 4762 0000 00000000 		.4byte	.LFB33
 4763 0004 3C000000 		.4byte	.LFE33
 4764 0008 00000000 		.4byte	.LFB34
 4765 000c 18000000 		.4byte	.LFE34
 4766 0010 00000000 		.4byte	.LFB35
 4767 0014 14000000 		.4byte	.LFE35
 4768 0018 00000000 		.4byte	.LFB36
 4769 001c 30000000 		.4byte	.LFE36
 4770 0020 00000000 		.4byte	.LFB41
 4771 0024 0C000000 		.4byte	.LFE41
 4772 0028 00000000 		.4byte	.LFB42
 4773 002c 0C000000 		.4byte	.LFE42
 4774 0030 00000000 		.4byte	.LFB43
 4775 0034 0C000000 		.4byte	.LFE43
 4776 0038 00000000 		.4byte	.LFB44
 4777 003c 0C000000 		.4byte	.LFE44
 4778 0040 00000000 		.4byte	.LFB45
 4779 0044 0C000000 		.4byte	.LFE45
 4780 0048 00000000 		.4byte	.LFB46
 4781 004c 0C000000 		.4byte	.LFE46
 4782 0050 00000000 		.4byte	.LFB47
 4783 0054 0C000000 		.4byte	.LFE47
 4784 0058 00000000 		.4byte	.LFB48
 4785 005c 0C000000 		.4byte	.LFE48
 4786 0060 00000000 		.4byte	.LFB49
 4787 0064 0C000000 		.4byte	.LFE49
 4788 0068 00000000 		.4byte	.LFB50
 4789 006c 0C000000 		.4byte	.LFE50
 4790 0070 00000000 		.4byte	.LFB51
 4791 0074 0C000000 		.4byte	.LFE51
 4792 0078 00000000 		.4byte	.LFB52
 4793 007c 0C000000 		.4byte	.LFE52
 4794 0080 00000000 		.4byte	.LFB53
 4795 0084 0C000000 		.4byte	.LFE53
 4796 0088 00000000 		.4byte	.LFB54
 4797 008c 0C000000 		.4byte	.LFE54
 4798 0090 00000000 		.4byte	.LFB55
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 136


 4799 0094 A8000000 		.4byte	.LFE55
 4800 0098 00000000 		.4byte	.LFB56
 4801 009c 28000000 		.4byte	.LFE56
 4802 00a0 00000000 		.4byte	.LFB57
 4803 00a4 1E000000 		.4byte	.LFE57
 4804 00a8 00000000 		.4byte	.LFB58
 4805 00ac 2C000000 		.4byte	.LFE58
 4806 00b0 00000000 		.4byte	.LFB59
 4807 00b4 2C000000 		.4byte	.LFE59
 4808 00b8 00000000 		.4byte	.LFB60
 4809 00bc 1C000000 		.4byte	.LFE60
 4810 00c0 00000000 		.4byte	.LFB61
 4811 00c4 0C000000 		.4byte	.LFE61
 4812 00c8 00000000 		.4byte	.LFB37
 4813 00cc 20010000 		.4byte	.LFE37
 4814 00d0 00000000 		.4byte	.LFB38
 4815 00d4 10000000 		.4byte	.LFE38
 4816 00d8 00000000 		.4byte	.LFB39
 4817 00dc 24000000 		.4byte	.LFE39
 4818 00e0 00000000 		.4byte	.LFB40
 4819 00e4 30000000 		.4byte	.LFE40
 4820 00e8 00000000 		.4byte	.LFB62
 4821 00ec 0C000000 		.4byte	.LFE62
 4822 00f0 00000000 		.4byte	.LFB63
 4823 00f4 0C000000 		.4byte	.LFE63
 4824 00f8 00000000 		.4byte	.LFB64
 4825 00fc 0C000000 		.4byte	.LFE64
 4826 0100 00000000 		.4byte	.LFB65
 4827 0104 0C000000 		.4byte	.LFE65
 4828 0108 00000000 		.4byte	.LFB66
 4829 010c 0C000000 		.4byte	.LFE66
 4830 0110 00000000 		.4byte	0
 4831 0114 00000000 		.4byte	0
 4832              		.section	.debug_line,"",%progbits
 4833              	.Ldebug_line0:
 4834 0000 CD030000 		.section	.debug_str,"MS",%progbits,1
 4834      02006A00 
 4834      00000201 
 4834      FB0E0D00 
 4834      01010101 
 4835              	.LASF107:
 4836 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4836      656E7365 
 4836      5F73656E 
 4836      736F7242 
 4836      6173656C 
 4837              	.LASF84:
 4838 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4838      656E7365 
 4838      5F494952 
 4838      3446696C 
 4838      74657200 
 4839              	.LASF102:
 4840 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 4840      656E7365 
 4840      5F646562 
 4840      6F756E63 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 137


 4840      65436F75 
 4841              	.LASF31:
 4842 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 4842      53706565 
 4842      6454626C 
 4842      00
 4843              	.LASF110:
 4844 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4844      656E7365 
 4844      5F6C6F77 
 4844      42617365 
 4844      6C696E65 
 4845              	.LASF85:
 4846 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4846      656E7365 
 4846      5F557064 
 4846      61746542 
 4846      6173656C 
 4847              	.LASF34:
 4848 0095 6E756D62 		.ascii	"numberOfSensors\000"
 4848      65724F66 
 4848      53656E73 
 4848      6F727300 
 4849              	.LASF38:
 4850 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 4850      65744269 
 4850      7456616C 
 4850      756500
 4851              	.LASF82:
 4852 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 4852      656E7365 
 4852      5F446973 
 4852      61626C65 
 4852      57696467 
 4853              	.LASF92:
 4854 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4854      656E7365 
 4854      5F557064 
 4854      61746545 
 4854      6E61626C 
 4855              	.LASF120:
 4856 00eb 43617053 		.ascii	"CapSense_config\000"
 4856      656E7365 
 4856      5F636F6E 
 4856      66696700 
 4857              	.LASF54:
 4858 00fb 69735365 		.ascii	"isSensorEnabled\000"
 4858      6E736F72 
 4858      456E6162 
 4858      6C656400 
 4859              	.LASF78:
 4860 010b 6E756D4F 		.ascii	"numOfSensors\000"
 4860      6653656E 
 4860      736F7273 
 4860      00
 4861              	.LASF40:
 4862 0118 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_60\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 138


 4862      656E7365 
 4862      5F434F4E 
 4862      4649475F 
 4862      54595045 
 4863              	.LASF8:
 4864 013f 756E7369 		.ascii	"unsigned int\000"
 4864      676E6564 
 4864      20696E74 
 4864      00
 4865              	.LASF43:
 4866 014c 746F7461 		.ascii	"totalSensorsNum\000"
 4866      6C53656E 
 4866      736F7273 
 4866      4E756D00 
 4867              	.LASF28:
 4868 015c 73616D70 		.ascii	"sampleMaxTbl\000"
 4868      6C654D61 
 4868      7854626C 
 4868      00
 4869              	.LASF53:
 4870 0169 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4870      656E7365 
 4870      5F496E69 
 4870      7469616C 
 4870      697A6545 
 4871              	.LASF26:
 4872 018d 7369676E 		.ascii	"signRegisterTbl\000"
 4872      52656769 
 4872      73746572 
 4872      54626C00 
 4873              	.LASF49:
 4874 019d 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4874      656E7365 
 4874      5F496E69 
 4874      7469616C 
 4874      697A6553 
 4875              	.LASF123:
 4876 01bf 43617053 		.ascii	"CapSense_IsBusy\000"
 4876      656E7365 
 4876      5F497342 
 4876      75737900 
 4877              	.LASF55:
 4878 01cf 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4878      656E7365 
 4878      5F536574 
 4878      42617365 
 4878      6C696E65 
 4879              	.LASF33:
 4880 01e8 72617744 		.ascii	"rawDataIndex\000"
 4880      61746149 
 4880      6E646578 
 4880      00
 4881              	.LASF42:
 4882 01f5 746F7461 		.ascii	"totalWidgetsNum\000"
 4882      6C576964 
 4882      67657473 
 4882      4E756D00 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 139


 4883              	.LASF59:
 4884 0205 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4884      656E7365 
 4884      5F536574 
 4884      44696666 
 4884      436F756E 
 4885              	.LASF108:
 4886 021f 43617053 		.ascii	"CapSense_sensorSignal\000"
 4886      656E7365 
 4886      5F73656E 
 4886      736F7253 
 4886      69676E61 
 4887              	.LASF117:
 4888 0235 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4888      656E7365 
 4888      5F726177 
 4888      44617461 
 4888      496E6465 
 4889              	.LASF66:
 4890 024b 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4890      656E7365 
 4890      5F536574 
 4890      4E6F6973 
 4890      65546872 
 4891              	.LASF93:
 4892 0266 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4892      656E7365 
 4892      5F557064 
 4892      61746557 
 4892      69646765 
 4893              	.LASF115:
 4894 0284 43617053 		.ascii	"CapSense_hysteresis\000"
 4894      656E7365 
 4894      5F687973 
 4894      74657265 
 4894      73697300 
 4895              	.LASF12:
 4896 0298 666C6F61 		.ascii	"float\000"
 4896      7400
 4897              	.LASF23:
 4898 029e 7265736F 		.ascii	"resolutionsTbl\000"
 4898      6C757469 
 4898      6F6E7354 
 4898      626C00
 4899              	.LASF62:
 4900 02ad 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4900      656E7365 
 4900      5F476574 
 4900      4E6F6973 
 4900      65546872 
 4901              	.LASF25:
 4902 02c8 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4902      696E6744 
 4902      69666665 
 4902      72656E63 
 4902      6554626C 
 4903              	.LASF7:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 140


 4904 02dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 4904      206C6F6E 
 4904      6720756E 
 4904      7369676E 
 4904      65642069 
 4905              	.LASF104:
 4906 02f4 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4906      656E7365 
 4906      5F73656E 
 4906      736F7245 
 4906      6E61626C 
 4907              	.LASF52:
 4908 030e 77696467 		.ascii	"widget\000"
 4908      657400
 4909              	.LASF112:
 4910 0315 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4910      656E7365 
 4910      5F66696E 
 4910      67657254 
 4910      68726573 
 4911              	.LASF47:
 4912 032e 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_60\000"
 4912      656E7365 
 4912      5F434F4E 
 4912      4649475F 
 4912      54595045 
 4913              	.LASF105:
 4914 034c 43617053 		.ascii	"CapSense_widgetNumber\000"
 4914      656E7365 
 4914      5F776964 
 4914      6765744E 
 4914      756D6265 
 4915              	.LASF65:
 4916 0362 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4916      656E7365 
 4916      5F536574 
 4916      46696E67 
 4916      65725468 
 4917              	.LASF131:
 4918 037e 433A5C55 		.ascii	"C:\\Users\\JamesN4\\Documents\\PSoC Creator\\Hybrid"
 4918      73657273 
 4918      5C4A616D 
 4918      65734E34 
 4918      5C446F63 
 4919 03ac 456E636F 		.ascii	"EncoderCY8CKIT43\\firmware\\HybridEncoder.cydsn\000"
 4919      64657243 
 4919      5938434B 
 4919      49543433 
 4919      5C666972 
 4920              	.LASF101:
 4921 03da 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4921      656E7365 
 4921      5F446973 
 4921      61626C65 
 4921      52617744 
 4922              	.LASF60:
 4923 03f9 76616C75 		.ascii	"value\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 141


 4923      6500
 4924              	.LASF63:
 4925 03ff 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4925      656E7365 
 4925      5F476574 
 4925      46696E67 
 4925      65724879 
 4926              	.LASF129:
 4927 041c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4927      43313120 
 4927      352E342E 
 4927      31203230 
 4927      31363036 
 4928 044f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4928      20726576 
 4928      6973696F 
 4928      6E203233 
 4928      37373135 
 4929 0482 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4929      66756E63 
 4929      74696F6E 
 4929      2D736563 
 4929      74696F6E 
 4930              	.LASF58:
 4931 04aa 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4931      656E7365 
 4931      5F476574 
 4931      44696666 
 4931      436F756E 
 4932              	.LASF87:
 4933 04c4 7369676E 		.ascii	"sign\000"
 4933      00
 4934              	.LASF24:
 4935 04c9 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4935      65456E76 
 4935      656C6F70 
 4935      6554626C 
 4935      00
 4936              	.LASF86:
 4937 04da 63616C63 		.ascii	"calc\000"
 4937      00
 4938              	.LASF37:
 4939 04df 70747252 		.ascii	"ptrReadSensorRaw\000"
 4939      65616453 
 4939      656E736F 
 4939      72526177 
 4939      00
 4940              	.LASF75:
 4941 04f0 68797374 		.ascii	"hysteresis\000"
 4941      65726573 
 4941      697300
 4942              	.LASF122:
 4943 04fb 43617053 		.ascii	"CapSense_ScanSensor\000"
 4943      656E7365 
 4943      5F536361 
 4943      6E53656E 
 4943      736F7200 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 142


 4944              	.LASF89:
 4945 050f 66696C74 		.ascii	"filteredRawData\000"
 4945      65726564 
 4945      52617744 
 4945      61746100 
 4946              	.LASF94:
 4947 051f 73656E73 		.ascii	"sensorsPerWidget\000"
 4947      6F727350 
 4947      65725769 
 4947      64676574 
 4947      00
 4948              	.LASF80:
 4949 0530 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4949      656E7365 
 4949      5F436865 
 4949      636B4973 
 4949      416E7957 
 4950              	.LASF118:
 4951 0550 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4951      656E7365 
 4951      5F6E756D 
 4951      6265724F 
 4951      6653656E 
 4952              	.LASF114:
 4953 0569 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4953      656E7365 
 4953      5F6E6567 
 4953      61746976 
 4953      654E6F69 
 4954              	.LASF41:
 4955 0589 746F7461 		.ascii	"totalScanslotsNum\000"
 4955      6C536361 
 4955      6E736C6F 
 4955      74734E75 
 4955      6D00
 4956              	.LASF127:
 4957 059b 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_60\000"
 4957      7572654E 
 4957      6F697365 
 4957      456E7665 
 4957      6C6F7065 
 4958              	.LASF50:
 4959 05b9 73656E73 		.ascii	"sensor\000"
 4959      6F7200
 4960              	.LASF44:
 4961 05c0 73656E73 		.ascii	"sensetivitySeed\000"
 4961      65746976 
 4961      69747953 
 4961      65656400 
 4962              	.LASF81:
 4963 05d0 43617053 		.ascii	"CapSense_EnableWidget\000"
 4963      656E7365 
 4963      5F456E61 
 4963      626C6557 
 4963      69646765 
 4964              	.LASF14:
 4965 05e6 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 143


 4965      00
 4966              	.LASF64:
 4967 05eb 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4967      656E7365 
 4967      5F476574 
 4967      4E656761 
 4967      74697665 
 4968              	.LASF32:
 4969 060e 70726573 		.ascii	"prescalerTable\000"
 4969      63616C65 
 4969      72546162 
 4969      6C6500
 4970              	.LASF10:
 4971 061d 75696E74 		.ascii	"uint16\000"
 4971      313600
 4972              	.LASF56:
 4973 0624 64617461 		.ascii	"data\000"
 4973      00
 4974              	.LASF17:
 4975 0629 69646163 		.ascii	"idac1LevelsTbl\000"
 4975      314C6576 
 4975      656C7354 
 4975      626C00
 4976              	.LASF77:
 4977 0638 72617749 		.ascii	"rawIndex\000"
 4977      6E646578 
 4977      00
 4978              	.LASF128:
 4979 0641 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 4979      656E7365 
 4979      5F557064 
 4979      61746554 
 4979      68726573 
 4980              	.LASF124:
 4981 065b 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4981      656E7365 
 4981      5F536361 
 4981      6E456E61 
 4981      626C6564 
 4982              	.LASF6:
 4983 0677 6C6F6E67 		.ascii	"long long int\000"
 4983      206C6F6E 
 4983      6720696E 
 4983      7400
 4984              	.LASF97:
 4985 0685 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4985      656E7365 
 4985      5F476574 
 4985      57696467 
 4985      65744E75 
 4986              	.LASF72:
 4987 069e 6465626F 		.ascii	"debounce\000"
 4987      756E6365 
 4987      00
 4988              	.LASF36:
 4989 06a7 70747250 		.ascii	"ptrPreScan\000"
 4989      72655363 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 144


 4989      616E00
 4990              	.LASF71:
 4991 06b2 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4991      656E7365 
 4991      5F436865 
 4991      636B4973 
 4991      53656E73 
 4992              	.LASF35:
 4993 06cf 70747247 		.ascii	"ptrGetRaw\000"
 4993      65745261 
 4993      7700
 4994              	.LASF91:
 4995 06d9 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4995      656E7365 
 4995      5F557064 
 4995      61746553 
 4995      656E736F 
 4996              	.LASF48:
 4997 06f7 43617053 		.ascii	"CapSense_BaseInit\000"
 4997      656E7365 
 4997      5F426173 
 4997      65496E69 
 4997      7400
 4998              	.LASF27:
 4999 0709 73616D70 		.ascii	"sampleMinTbl\000"
 4999      6C654D69 
 4999      6E54626C 
 4999      00
 5000              	.LASF103:
 5001 0716 43617053 		.ascii	"CapSense_sensorRaw\000"
 5001      656E7365 
 5001      5F73656E 
 5001      736F7252 
 5001      617700
 5002              	.LASF98:
 5003 0729 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5003      656E7365 
 5003      5F476574 
 5003      4C6F7742 
 5003      6173656C 
 5004              	.LASF68:
 5005 0746 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5005      656E7365 
 5005      5F536574 
 5005      4E656761 
 5005      74697665 
 5006              	.LASF11:
 5007 0769 75696E74 		.ascii	"uint32\000"
 5007      333200
 5008              	.LASF67:
 5009 0770 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5009      656E7365 
 5009      5F536574 
 5009      46696E67 
 5009      65724879 
 5010              	.LASF61:
 5011 078d 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 145


 5011      656E7365 
 5011      5F476574 
 5011      46696E67 
 5011      65725468 
 5012              	.LASF16:
 5013 07a9 6C6F6E67 		.ascii	"long double\000"
 5013      20646F75 
 5013      626C6500 
 5014              	.LASF96:
 5015 07b5 6C617374 		.ascii	"lastSensor\000"
 5015      53656E73 
 5015      6F7200
 5016              	.LASF45:
 5017 07c0 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5017      6B467265 
 5017      715F4D48 
 5017      7A00
 5018              	.LASF18:
 5019 07ce 69646163 		.ascii	"idac2LevelsTbl\000"
 5019      324C6576 
 5019      656C7354 
 5019      626C00
 5020              	.LASF2:
 5021 07dd 73686F72 		.ascii	"short int\000"
 5021      7420696E 
 5021      7400
 5022              	.LASF4:
 5023 07e7 6C6F6E67 		.ascii	"long int\000"
 5023      20696E74 
 5023      00
 5024              	.LASF95:
 5025 07f0 66697273 		.ascii	"firstSensor\000"
 5025      7453656E 
 5025      736F7200 
 5026              	.LASF116:
 5027 07fc 43617053 		.ascii	"CapSense_debounce\000"
 5027      656E7365 
 5027      5F646562 
 5027      6F756E63 
 5027      6500
 5028              	.LASF22:
 5029 080e 77696467 		.ascii	"widgetNubmersTbl\000"
 5029      65744E75 
 5029      626D6572 
 5029      7354626C 
 5029      00
 5030              	.LASF100:
 5031 081f 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5031      656E7365 
 5031      5F456E61 
 5031      626C6552 
 5031      61774461 
 5032              	.LASF111:
 5033 083d 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5033      656E7365 
 5033      5F6C6F77 
 5033      42617365 
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 146


 5033      6C696E65 
 5034              	.LASF30:
 5035 0857 6B56616C 		.ascii	"kValueTbl\000"
 5035      75655462 
 5035      6C00
 5036              	.LASF106:
 5037 0861 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5037      656E7365 
 5037      5F73656E 
 5037      736F7242 
 5037      6173656C 
 5038              	.LASF15:
 5039 0879 73697A65 		.ascii	"sizetype\000"
 5039      74797065 
 5039      00
 5040              	.LASF5:
 5041 0882 6C6F6E67 		.ascii	"long unsigned int\000"
 5041      20756E73 
 5041      69676E65 
 5041      6420696E 
 5041      7400
 5042              	.LASF46:
 5043 0894 706F696E 		.ascii	"pointers\000"
 5043      74657273 
 5043      00
 5044              	.LASF90:
 5045 089d 6E6F6973 		.ascii	"noiseThreshold\000"
 5045      65546872 
 5045      6573686F 
 5045      6C6400
 5046              	.LASF29:
 5047 08ac 70726576 		.ascii	"previousSampleTbl\000"
 5047      696F7573 
 5047      53616D70 
 5047      6C655462 
 5047      6C00
 5048              	.LASF69:
 5049 08be 43617053 		.ascii	"CapSense_SetDebounce\000"
 5049      656E7365 
 5049      5F536574 
 5049      4465626F 
 5049      756E6365 
 5050              	.LASF74:
 5051 08d3 66696E67 		.ascii	"fingerThreshold\000"
 5051      65725468 
 5051      72657368 
 5051      6F6C6400 
 5052              	.LASF20:
 5053 08e3 63686172 		.ascii	"chargeDivTbl\000"
 5053      67654469 
 5053      7654626C 
 5053      00
 5054              	.LASF1:
 5055 08f0 756E7369 		.ascii	"unsigned char\000"
 5055      676E6564 
 5055      20636861 
 5055      7200
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 147


 5056              	.LASF113:
 5057 08fe 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5057      656E7365 
 5057      5F6E6F69 
 5057      73655468 
 5057      72657368 
 5058              	.LASF73:
 5059 0916 6465626F 		.ascii	"debounceIndex\000"
 5059      756E6365 
 5059      496E6465 
 5059      7800
 5060              	.LASF51:
 5061 0924 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5061      656E7365 
 5061      5F496E69 
 5061      7469616C 
 5061      697A6541 
 5062              	.LASF57:
 5063 0944 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5063      656E7365 
 5063      5F476574 
 5063      42617365 
 5063      6C696E65 
 5064              	.LASF70:
 5065 095d 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5065      656E7365 
 5065      5F536574 
 5065      4C6F7742 
 5065      6173656C 
 5066              	.LASF19:
 5067 097a 73656E73 		.ascii	"sensetivityTbl\000"
 5067      65746976 
 5067      69747954 
 5067      626C00
 5068              	.LASF126:
 5069 0989 43617053 		.ascii	"CapSense_SetBitValue\000"
 5069      656E7365 
 5069      5F536574 
 5069      42697456 
 5069      616C7565 
 5070              	.LASF130:
 5071 099e 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5071      72617465 
 5071      645F536F 
 5071      75726365 
 5071      5C50536F 
 5072              	.LASF125:
 5073 09c5 43617053 		.ascii	"CapSense_GetBitValue\000"
 5073      656E7365 
 5073      5F476574 
 5073      42697456 
 5073      616C7565 
 5074              	.LASF79:
 5075 09da 73746174 		.ascii	"state\000"
 5075      6500
 5076              	.LASF121:
 5077 09e0 43617053 		.ascii	"CapSense_enableRawFilters\000"
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 148


 5077      656E7365 
 5077      5F656E61 
 5077      626C6552 
 5077      61774669 
 5078              	.LASF21:
 5079 09fa 6D6F6444 		.ascii	"modDivTbl\000"
 5079      69765462 
 5079      6C00
 5080              	.LASF0:
 5081 0a04 7369676E 		.ascii	"signed char\000"
 5081      65642063 
 5081      68617200 
 5082              	.LASF3:
 5083 0a10 73686F72 		.ascii	"short unsigned int\000"
 5083      7420756E 
 5083      7369676E 
 5083      65642069 
 5083      6E7400
 5084              	.LASF39:
 5085 0a23 70747253 		.ascii	"ptrSetBitValue\000"
 5085      65744269 
 5085      7456616C 
 5085      756500
 5086              	.LASF83:
 5087 0a32 43617053 		.ascii	"CapSense_MedianFilter\000"
 5087      656E7365 
 5087      5F4D6564 
 5087      69616E46 
 5087      696C7465 
 5088              	.LASF88:
 5089 0a48 74656D70 		.ascii	"tempRaw\000"
 5089      52617700 
 5090              	.LASF99:
 5091 0a50 43617053 		.ascii	"CapSense_GetDebounce\000"
 5091      656E7365 
 5091      5F476574 
 5091      4465626F 
 5091      756E6365 
 5092              	.LASF76:
 5093 0a65 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5093      656E7365 
 5093      5F436865 
 5093      636B4973 
 5093      57696467 
 5094              	.LASF9:
 5095 0a82 75696E74 		.ascii	"uint8\000"
 5095      3800
 5096              	.LASF13:
 5097 0a88 646F7562 		.ascii	"double\000"
 5097      6C6500
 5098              	.LASF119:
 5099 0a8f 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5099      656E7365 
 5099      5F726177 
 5099      46696C74 
 5099      65724461 
 5100              	.LASF109:
ARM GAS  C:\Users\JamesN4\AppData\Local\Temp\cc8NpLKo.s 			page 149


 5101 0aa7 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5101      656E7365 
 5101      5F73656E 
 5101      736F724F 
 5101      6E4D6173 
 5102              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
